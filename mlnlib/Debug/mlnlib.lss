
mlnlib.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000003f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000037c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000046  00804000  00804000  000003f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000420  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000460  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003ba3  00000000  00000000  000004f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000031af  00000000  00000000  00004093  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000685  00000000  00000000  00007242  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000118  00000000  00000000  000078c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000019e1  00000000  00000000  000079e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000378  00000000  00000000  000093c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00009739  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__ctors_end>
   4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
   8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
   c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  10:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  14:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  18:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  1c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  20:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  24:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  28:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  2c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  30:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  34:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  38:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  3c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  40:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  44:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  48:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  4c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  50:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  54:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  58:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  5c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  60:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  64:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  68:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  6c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  70:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  74:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  78:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  7c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  80:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  84:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  88:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  8c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  90:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  94:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  98:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  9c:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  a0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  a4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  a8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  ac:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  b0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  b4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  b8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  bc:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  c0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  c4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  c8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  cc:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  d0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  d4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  d8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  dc:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  e0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  e4:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  e8:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  ec:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>
  f0:	0c 94 98 00 	jmp	0x130	; 0x130 <__bad_interrupt>

000000f4 <__ctors_start>:
  f4:	ac 01       	movw	r20, r24

000000f6 <__ctors_end>:
  f6:	11 24       	eor	r1, r1
  f8:	1f be       	out	0x3f, r1	; 63
  fa:	cf ef       	ldi	r28, 0xFF	; 255
  fc:	cd bf       	out	0x3d, r28	; 61
  fe:	df e7       	ldi	r29, 0x7F	; 127
 100:	de bf       	out	0x3e, r29	; 62

00000102 <__do_clear_bss>:
 102:	20 e4       	ldi	r18, 0x40	; 64
 104:	a0 e0       	ldi	r26, 0x00	; 0
 106:	b0 e4       	ldi	r27, 0x40	; 64
 108:	01 c0       	rjmp	.+2      	; 0x10c <.do_clear_bss_start>

0000010a <.do_clear_bss_loop>:
 10a:	1d 92       	st	X+, r1

0000010c <.do_clear_bss_start>:
 10c:	a6 34       	cpi	r26, 0x46	; 70
 10e:	b2 07       	cpc	r27, r18
 110:	e1 f7       	brne	.-8      	; 0x10a <.do_clear_bss_loop>

00000112 <__do_global_ctors>:
 112:	10 e0       	ldi	r17, 0x00	; 0
 114:	cb e7       	ldi	r28, 0x7B	; 123
 116:	d0 e0       	ldi	r29, 0x00	; 0
 118:	04 c0       	rjmp	.+8      	; 0x122 <__do_global_ctors+0x10>
 11a:	21 97       	sbiw	r28, 0x01	; 1
 11c:	fe 01       	movw	r30, r28
 11e:	0e 94 b3 01 	call	0x366	; 0x366 <__tablejump2__>
 122:	ca 37       	cpi	r28, 0x7A	; 122
 124:	d1 07       	cpc	r29, r17
 126:	c9 f7       	brne	.-14     	; 0x11a <__do_global_ctors+0x8>
 128:	0e 94 8e 01 	call	0x31c	; 0x31c <main>
 12c:	0c 94 bc 01 	jmp	0x378	; 0x378 <_exit>

00000130 <__bad_interrupt>:
 130:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000134 <_ZN8mln_gpio9conf_pullE19mln_gpio_pin_dirs_e>:
	pin.port.DIR ^= BITMAP(pin.pin_num);
}

void mln_gpio::put(uint8_t val)
{
	val ? inverted ? clear() : set() : clear();
 134:	dc 01       	movw	r26, r24
 136:	62 30       	cpi	r22, 0x02	; 2
 138:	59 f4       	brne	.+22     	; 0x150 <_ZN8mln_gpio9conf_pullE19mln_gpio_pin_dirs_e+0x1c>
 13a:	90 96       	adiw	r26, 0x20	; 32
 13c:	ec 91       	ld	r30, X
 13e:	e7 70       	andi	r30, 0x07	; 7
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	70 96       	adiw	r30, 0x10	; 16
 144:	e8 0f       	add	r30, r24
 146:	f9 1f       	adc	r31, r25
 148:	80 81       	ld	r24, Z
 14a:	88 60       	ori	r24, 0x08	; 8
 14c:	80 83       	st	Z, r24
 14e:	08 95       	ret
 150:	90 96       	adiw	r26, 0x20	; 32
 152:	9c 91       	ld	r25, X
 154:	90 97       	sbiw	r26, 0x20	; 32
 156:	97 70       	andi	r25, 0x07	; 7
 158:	e9 2f       	mov	r30, r25
 15a:	f0 e0       	ldi	r31, 0x00	; 0
 15c:	70 96       	adiw	r30, 0x10	; 16
 15e:	ea 0f       	add	r30, r26
 160:	fb 1f       	adc	r31, r27
 162:	80 81       	ld	r24, Z
 164:	87 7f       	andi	r24, 0xF7	; 247
 166:	80 83       	st	Z, r24
 168:	08 95       	ret

0000016a <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e>:
 16a:	fc 01       	movw	r30, r24
 16c:	61 a3       	std	Z+33, r22	; 0x21
 16e:	61 11       	cpse	r22, r1
 170:	0d c0       	rjmp	.+26     	; 0x18c <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x22>
 172:	50 81       	ld	r21, Z
 174:	40 a1       	ldd	r20, Z+32	; 0x20
 176:	47 70       	andi	r20, 0x07	; 7
 178:	21 e0       	ldi	r18, 0x01	; 1
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x18>
 17e:	22 0f       	add	r18, r18
 180:	33 1f       	adc	r19, r19
 182:	4a 95       	dec	r20
 184:	e2 f7       	brpl	.-8      	; 0x17e <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x14>
 186:	25 2b       	or	r18, r21
 188:	20 83       	st	Z, r18
 18a:	0e c0       	rjmp	.+28     	; 0x1a8 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x3e>
 18c:	fc 01       	movw	r30, r24
 18e:	40 81       	ld	r20, Z
 190:	50 a1       	ldd	r21, Z+32	; 0x20
 192:	57 70       	andi	r21, 0x07	; 7
 194:	21 e0       	ldi	r18, 0x01	; 1
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	02 c0       	rjmp	.+4      	; 0x19e <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x34>
 19a:	22 0f       	add	r18, r18
 19c:	33 1f       	adc	r19, r19
 19e:	5a 95       	dec	r21
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x30>
 1a2:	20 95       	com	r18
 1a4:	24 23       	and	r18, r20
 1a6:	20 83       	st	Z, r18
 1a8:	0e 94 9a 00 	call	0x134	; 0x134 <_ZN8mln_gpio9conf_pullE19mln_gpio_pin_dirs_e>
 1ac:	08 95       	ret

000001ae <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>:
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
 1b2:	cd b7       	in	r28, 0x3d	; 61
 1b4:	de b7       	in	r29, 0x3e	; 62
 1b6:	21 e2       	ldi	r18, 0x21	; 33
 1b8:	fe 01       	movw	r30, r28
 1ba:	35 96       	adiw	r30, 0x05	; 5
 1bc:	dc 01       	movw	r26, r24
 1be:	01 90       	ld	r0, Z+
 1c0:	0d 92       	st	X+, r0
 1c2:	2a 95       	dec	r18
 1c4:	e1 f7       	brne	.-8      	; 0x1be <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh+0x10>
 1c6:	2f a1       	ldd	r18, Y+39	; 0x27
 1c8:	fc 01       	movw	r30, r24
 1ca:	22 a3       	std	Z+34, r18	; 0x22
 1cc:	6e a1       	ldd	r22, Y+38	; 0x26
 1ce:	0e 94 b5 00 	call	0x16a	; 0x16a <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e>
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	08 95       	ret

000001d8 <_ZN8mln_gpio6toggleEv>:
 1d8:	fc 01       	movw	r30, r24
 1da:	90 81       	ld	r25, Z
 1dc:	80 a1       	ldd	r24, Z+32	; 0x20
 1de:	87 70       	andi	r24, 0x07	; 7
 1e0:	21 e0       	ldi	r18, 0x01	; 1
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <_ZN8mln_gpio6toggleEv+0x12>
 1e6:	22 0f       	add	r18, r18
 1e8:	33 1f       	adc	r19, r19
 1ea:	8a 95       	dec	r24
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <_ZN8mln_gpio6toggleEv+0xe>
 1ee:	29 27       	eor	r18, r25
 1f0:	20 83       	st	Z, r18
 1f2:	08 95       	ret

000001f4 <_ZN8mln_gpio6invertEh>:
}

void mln_gpio::invert(uint8_t new_inverted)
{
 1f4:	1f 93       	push	r17
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	ec 01       	movw	r28, r24
 1fc:	16 2f       	mov	r17, r22
	if(dir == OUTPUT && new_inverted != inverted)
 1fe:	89 a1       	ldd	r24, Y+33	; 0x21
 200:	81 11       	cpse	r24, r1
 202:	06 c0       	rjmp	.+12     	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
 204:	8a a1       	ldd	r24, Y+34	; 0x22
 206:	86 17       	cp	r24, r22
 208:	19 f0       	breq	.+6      	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
		toggle();
 20a:	ce 01       	movw	r24, r28
 20c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <_ZN8mln_gpio6toggleEv>
	inverted = new_inverted;
 210:	1a a3       	std	Y+34, r17	; 0x22
}
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	08 95       	ret

0000021a <_ZN8mln_gpio3getEv>:

uint8_t mln_gpio::get(void)
{
 21a:	fc 01       	movw	r30, r24
	return inverted ? !(pin.port.OUT >> pin.pin_num) & 0x01 : (pin.port.OUT >> pin.pin_num) & 0x01;
 21c:	82 a1       	ldd	r24, Z+34	; 0x22
 21e:	88 23       	and	r24, r24
 220:	71 f0       	breq	.+28     	; 0x23e <_ZN8mln_gpio3getEv+0x24>
 222:	24 81       	ldd	r18, Z+4	; 0x04
 224:	80 a1       	ldd	r24, Z+32	; 0x20
 226:	87 70       	andi	r24, 0x07	; 7
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	02 c0       	rjmp	.+4      	; 0x230 <_ZN8mln_gpio3getEv+0x16>
 22c:	35 95       	asr	r19
 22e:	27 95       	ror	r18
 230:	8a 95       	dec	r24
 232:	e2 f7       	brpl	.-8      	; 0x22c <_ZN8mln_gpio3getEv+0x12>
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	23 2b       	or	r18, r19
 238:	69 f0       	breq	.+26     	; 0x254 <_ZN8mln_gpio3getEv+0x3a>
 23a:	80 e0       	ldi	r24, 0x00	; 0
 23c:	08 95       	ret
 23e:	94 81       	ldd	r25, Z+4	; 0x04
 240:	20 a1       	ldd	r18, Z+32	; 0x20
 242:	27 70       	andi	r18, 0x07	; 7
 244:	89 2f       	mov	r24, r25
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <_ZN8mln_gpio3getEv+0x34>
 24a:	95 95       	asr	r25
 24c:	87 95       	ror	r24
 24e:	2a 95       	dec	r18
 250:	e2 f7       	brpl	.-8      	; 0x24a <_ZN8mln_gpio3getEv+0x30>
 252:	81 70       	andi	r24, 0x01	; 1
 254:	08 95       	ret

00000256 <_Z41__static_initialization_and_destruction_0ii>:
		{
			PORTB.OUT ^= 8;
			_delay_ms(250);
		}
	} */
}
 256:	cf 93       	push	r28
 258:	df 93       	push	r29
 25a:	cd b7       	in	r28, 0x3d	; 61
 25c:	de b7       	in	r29, 0x3e	; 62
 25e:	c2 54       	subi	r28, 0x42	; 66
 260:	d1 09       	sbc	r29, r1
 262:	cd bf       	out	0x3d, r28	; 61
 264:	de bf       	out	0x3e, r29	; 62
 266:	01 97       	sbiw	r24, 0x01	; 1
 268:	09 f0       	breq	.+2      	; 0x26c <_Z41__static_initialization_and_destruction_0ii+0x16>
 26a:	51 c0       	rjmp	.+162    	; 0x30e <_Z41__static_initialization_and_destruction_0ii+0xb8>
 26c:	6f 3f       	cpi	r22, 0xFF	; 255
 26e:	7f 4f       	sbci	r23, 0xFF	; 255
 270:	09 f0       	breq	.+2      	; 0x274 <_Z41__static_initialization_and_destruction_0ii+0x1e>
 272:	4d c0       	rjmp	.+154    	; 0x30e <_Z41__static_initialization_and_destruction_0ii+0xb8>

#include <avr/io.h>
#include <util/delay.h>
#include "mln/mln_gpio.h"

mln_gpio led_builtin = mln_gpio(PB3, OUTPUT);
 274:	80 e2       	ldi	r24, 0x20	; 32
 276:	e0 e2       	ldi	r30, 0x20	; 32
 278:	f4 e0       	ldi	r31, 0x04	; 4
 27a:	de 01       	movw	r26, r28
 27c:	92 96       	adiw	r26, 0x22	; 34
 27e:	01 90       	ld	r0, Z+
 280:	0d 92       	st	X+, r0
 282:	8a 95       	dec	r24
 284:	e1 f7       	brne	.-8      	; 0x27e <_Z41__static_initialization_and_destruction_0ii+0x28>
 286:	23 96       	adiw	r28, 0x03	; 3
 288:	8f ad       	ldd	r24, Y+63	; 0x3f
 28a:	23 97       	sbiw	r28, 0x03	; 3
 28c:	88 7f       	andi	r24, 0xF8	; 248
 28e:	83 60       	ori	r24, 0x03	; 3
 290:	23 96       	adiw	r28, 0x03	; 3
 292:	8f af       	std	Y+63, r24	; 0x3f
 294:	23 97       	sbiw	r28, 0x03	; 3
 296:	1f 92       	push	r1
 298:	1f 92       	push	r1
 29a:	8d b7       	in	r24, 0x3d	; 61
 29c:	9e b7       	in	r25, 0x3e	; 62
 29e:	81 97       	sbiw	r24, 0x21	; 33
 2a0:	8d bf       	out	0x3d, r24	; 61
 2a2:	9e bf       	out	0x3e, r25	; 62
 2a4:	ad b7       	in	r26, 0x3d	; 61
 2a6:	be b7       	in	r27, 0x3e	; 62
 2a8:	11 96       	adiw	r26, 0x01	; 1
 2aa:	81 e2       	ldi	r24, 0x21	; 33
 2ac:	fe 01       	movw	r30, r28
 2ae:	b2 96       	adiw	r30, 0x22	; 34
 2b0:	01 90       	ld	r0, Z+
 2b2:	0d 92       	st	X+, r0
 2b4:	8a 95       	dec	r24
 2b6:	e1 f7       	brne	.-8      	; 0x2b0 <_Z41__static_initialization_and_destruction_0ii+0x5a>
 2b8:	83 e2       	ldi	r24, 0x23	; 35
 2ba:	90 e4       	ldi	r25, 0x40	; 64
 2bc:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
mln_gpio btn_builtin = mln_gpio(PB2, INPUT);
 2c0:	80 e2       	ldi	r24, 0x20	; 32
 2c2:	e0 e2       	ldi	r30, 0x20	; 32
 2c4:	f4 e0       	ldi	r31, 0x04	; 4
 2c6:	de 01       	movw	r26, r28
 2c8:	11 96       	adiw	r26, 0x01	; 1
 2ca:	01 90       	ld	r0, Z+
 2cc:	0d 92       	st	X+, r0
 2ce:	8a 95       	dec	r24
 2d0:	e1 f7       	brne	.-8      	; 0x2ca <_Z41__static_initialization_and_destruction_0ii+0x74>
 2d2:	89 a1       	ldd	r24, Y+33	; 0x21
 2d4:	88 7f       	andi	r24, 0xF8	; 248
 2d6:	82 60       	ori	r24, 0x02	; 2
 2d8:	89 a3       	std	Y+33, r24	; 0x21
 2da:	cd bf       	out	0x3d, r28	; 61
 2dc:	de bf       	out	0x3e, r29	; 62
 2de:	1f 92       	push	r1
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	8f 93       	push	r24
 2e4:	8d b7       	in	r24, 0x3d	; 61
 2e6:	9e b7       	in	r25, 0x3e	; 62
 2e8:	81 97       	sbiw	r24, 0x21	; 33
 2ea:	8d bf       	out	0x3d, r24	; 61
 2ec:	9e bf       	out	0x3e, r25	; 62
 2ee:	ad b7       	in	r26, 0x3d	; 61
 2f0:	be b7       	in	r27, 0x3e	; 62
 2f2:	11 96       	adiw	r26, 0x01	; 1
 2f4:	81 e2       	ldi	r24, 0x21	; 33
 2f6:	fe 01       	movw	r30, r28
 2f8:	31 96       	adiw	r30, 0x01	; 1
 2fa:	01 90       	ld	r0, Z+
 2fc:	0d 92       	st	X+, r0
 2fe:	8a 95       	dec	r24
 300:	e1 f7       	brne	.-8      	; 0x2fa <_Z41__static_initialization_and_destruction_0ii+0xa4>
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e4       	ldi	r25, 0x40	; 64
 306:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
 30a:	cd bf       	out	0x3d, r28	; 61
 30c:	de bf       	out	0x3e, r29	; 62
		{
			PORTB.OUT ^= 8;
			_delay_ms(250);
		}
	} */
}
 30e:	ce 5b       	subi	r28, 0xBE	; 190
 310:	df 4f       	sbci	r29, 0xFF	; 255
 312:	cd bf       	out	0x3d, r28	; 61
 314:	de bf       	out	0x3e, r29	; 62
 316:	df 91       	pop	r29
 318:	cf 91       	pop	r28
 31a:	08 95       	ret

0000031c <main>:
mln_gpio led_builtin = mln_gpio(PB3, OUTPUT);
mln_gpio btn_builtin = mln_gpio(PB2, INPUT);

int main(void)
{
	led_builtin.invert(1);
 31c:	61 e0       	ldi	r22, 0x01	; 1
 31e:	83 e2       	ldi	r24, 0x23	; 35
 320:	90 e4       	ldi	r25, 0x40	; 64
 322:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <_ZN8mln_gpio6invertEh>
	btn_builtin.invert(1);
 326:	61 e0       	ldi	r22, 0x01	; 1
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	90 e4       	ldi	r25, 0x40	; 64
 32c:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <_ZN8mln_gpio6invertEh>
	
    while (1) 
	{
		if(btn_builtin.get())
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	90 e4       	ldi	r25, 0x40	; 64
 334:	0e 94 0d 01 	call	0x21a	; 0x21a <_ZN8mln_gpio3getEv>
 338:	88 23       	and	r24, r24
 33a:	d1 f3       	breq	.-12     	; 0x330 <main+0x14>
		{
			led_builtin.toggle();
 33c:	83 e2       	ldi	r24, 0x23	; 35
 33e:	90 e4       	ldi	r25, 0x40	; 64
 340:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <_ZN8mln_gpio6toggleEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 344:	2f e3       	ldi	r18, 0x3F	; 63
 346:	8d e0       	ldi	r24, 0x0D	; 13
 348:	93 e0       	ldi	r25, 0x03	; 3
 34a:	21 50       	subi	r18, 0x01	; 1
 34c:	80 40       	sbci	r24, 0x00	; 0
 34e:	90 40       	sbci	r25, 0x00	; 0
 350:	e1 f7       	brne	.-8      	; 0x34a <main+0x2e>
 352:	00 c0       	rjmp	.+0      	; 0x354 <main+0x38>
 354:	00 00       	nop
 356:	ec cf       	rjmp	.-40     	; 0x330 <main+0x14>

00000358 <_GLOBAL__sub_I_led_builtin>:
		{
			PORTB.OUT ^= 8;
			_delay_ms(250);
		}
	} */
}
 358:	6f ef       	ldi	r22, 0xFF	; 255
 35a:	7f ef       	ldi	r23, 0xFF	; 255
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	0e 94 2b 01 	call	0x256	; 0x256 <_Z41__static_initialization_and_destruction_0ii>
 364:	08 95       	ret

00000366 <__tablejump2__>:
 366:	ee 0f       	add	r30, r30
 368:	ff 1f       	adc	r31, r31
 36a:	00 24       	eor	r0, r0
 36c:	00 1c       	adc	r0, r0
 36e:	0b be       	out	0x3b, r0	; 59
 370:	07 90       	elpm	r0, Z+
 372:	f6 91       	elpm	r31, Z
 374:	e0 2d       	mov	r30, r0
 376:	09 94       	ijmp

00000378 <_exit>:
 378:	f8 94       	cli

0000037a <__stop_program>:
 37a:	ff cf       	rjmp	.-2      	; 0x37a <__stop_program>
