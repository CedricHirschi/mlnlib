
mlnlib.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  000002e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000026e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000e2  00804000  00804000  000002e2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002e2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000314  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000397b  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003014  00000000  00000000  00003d3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004fc  00000000  00000000  00006d53  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c8  00000000  00000000  00007250  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000018bc  00000000  00000000  00007318  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000186  00000000  00000000  00008bd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00008d5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <__ctors_end>
   4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  10:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  14:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  18:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  1c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  20:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  24:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  28:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  2c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  30:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  34:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  38:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  3c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  40:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  44:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  48:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  4c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  50:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  54:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  58:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  5c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  60:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  64:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  68:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  6c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  70:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  74:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  78:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  7c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  80:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  84:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  88:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  8c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  90:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  94:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  98:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  9c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ac:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  bc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  cc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  dc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ec:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  f0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>

000000f4 <__ctors_start>:
  f4:	12 01       	movw	r2, r4
  f6:	25 01       	movw	r4, r10

000000f8 <__ctors_end>:
  f8:	11 24       	eor	r1, r1
  fa:	1f be       	out	0x3f, r1	; 63
  fc:	cf ef       	ldi	r28, 0xFF	; 255
  fe:	cd bf       	out	0x3d, r28	; 61
 100:	df e7       	ldi	r29, 0x7F	; 127
 102:	de bf       	out	0x3e, r29	; 62

00000104 <__do_clear_bss>:
 104:	20 e4       	ldi	r18, 0x40	; 64
 106:	a0 e0       	ldi	r26, 0x00	; 0
 108:	b0 e4       	ldi	r27, 0x40	; 64
 10a:	01 c0       	rjmp	.+2      	; 0x10e <.do_clear_bss_start>

0000010c <.do_clear_bss_loop>:
 10c:	1d 92       	st	X+, r1

0000010e <.do_clear_bss_start>:
 10e:	a2 3e       	cpi	r26, 0xE2	; 226
 110:	b2 07       	cpc	r27, r18
 112:	e1 f7       	brne	.-8      	; 0x10c <.do_clear_bss_loop>

00000114 <__do_global_ctors>:
 114:	10 e0       	ldi	r17, 0x00	; 0
 116:	cc e7       	ldi	r28, 0x7C	; 124
 118:	d0 e0       	ldi	r29, 0x00	; 0
 11a:	04 c0       	rjmp	.+8      	; 0x124 <__do_global_ctors+0x10>
 11c:	21 97       	sbiw	r28, 0x01	; 1
 11e:	fe 01       	movw	r30, r28
 120:	0e 94 2c 01 	call	0x258	; 0x258 <__tablejump2__>
 124:	ca 37       	cpi	r28, 0x7A	; 122
 126:	d1 07       	cpc	r29, r17
 128:	c9 f7       	brne	.-14     	; 0x11c <__do_global_ctors+0x8>
 12a:	0e 94 24 01 	call	0x248	; 0x248 <main>
 12e:	0c 94 35 01 	jmp	0x26a	; 0x26a <_exit>

00000132 <__bad_interrupt>:
 132:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000136 <_Z41__static_initialization_and_destruction_0ii>:
mln_gpio::mln_gpio(PIN_t new_pin)
{
	pin = new_pin;
	port = MLN_GPIO_PIN_GET_PORT(new_pin);
	pin_num = MLN_GPIO_PIN_GET_NUM(new_pin);
} //mln_gpio
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	c9 f5       	brne	.+114    	; 0x1ac <_Z41__static_initialization_and_destruction_0ii+0x76>
 13a:	6f 3f       	cpi	r22, 0xFF	; 255
 13c:	7f 4f       	sbci	r23, 0xFF	; 255
 13e:	b1 f5       	brne	.+108    	; 0x1ac <_Z41__static_initialization_and_destruction_0ii+0x76>
	#endif
	PORTF,
	#ifdef PORTG
	PORTG
	#endif
};
 140:	80 e2       	ldi	r24, 0x20	; 32
 142:	e0 e0       	ldi	r30, 0x00	; 0
 144:	f4 e0       	ldi	r31, 0x04	; 4
 146:	a0 e0       	ldi	r26, 0x00	; 0
 148:	b0 e4       	ldi	r27, 0x40	; 64
 14a:	01 90       	ld	r0, Z+
 14c:	0d 92       	st	X+, r0
 14e:	8a 95       	dec	r24
 150:	e1 f7       	brne	.-8      	; 0x14a <_Z41__static_initialization_and_destruction_0ii+0x14>
 152:	80 e2       	ldi	r24, 0x20	; 32
 154:	e0 e4       	ldi	r30, 0x40	; 64
 156:	f4 e0       	ldi	r31, 0x04	; 4
 158:	a0 e2       	ldi	r26, 0x20	; 32
 15a:	b0 e4       	ldi	r27, 0x40	; 64
 15c:	01 90       	ld	r0, Z+
 15e:	0d 92       	st	X+, r0
 160:	8a 95       	dec	r24
 162:	e1 f7       	brne	.-8      	; 0x15c <_Z41__static_initialization_and_destruction_0ii+0x26>
 164:	80 e2       	ldi	r24, 0x20	; 32
 166:	e0 e6       	ldi	r30, 0x60	; 96
 168:	f4 e0       	ldi	r31, 0x04	; 4
 16a:	a0 e4       	ldi	r26, 0x40	; 64
 16c:	b0 e4       	ldi	r27, 0x40	; 64
 16e:	01 90       	ld	r0, Z+
 170:	0d 92       	st	X+, r0
 172:	8a 95       	dec	r24
 174:	e1 f7       	brne	.-8      	; 0x16e <_Z41__static_initialization_and_destruction_0ii+0x38>
 176:	80 e2       	ldi	r24, 0x20	; 32
 178:	e0 e2       	ldi	r30, 0x20	; 32
 17a:	f4 e0       	ldi	r31, 0x04	; 4
 17c:	a0 e6       	ldi	r26, 0x60	; 96
 17e:	b0 e4       	ldi	r27, 0x40	; 64
 180:	01 90       	ld	r0, Z+
 182:	0d 92       	st	X+, r0
 184:	8a 95       	dec	r24
 186:	e1 f7       	brne	.-8      	; 0x180 <_Z41__static_initialization_and_destruction_0ii+0x4a>
 188:	80 e2       	ldi	r24, 0x20	; 32
 18a:	e0 e8       	ldi	r30, 0x80	; 128
 18c:	f4 e0       	ldi	r31, 0x04	; 4
 18e:	a0 e8       	ldi	r26, 0x80	; 128
 190:	b0 e4       	ldi	r27, 0x40	; 64
 192:	01 90       	ld	r0, Z+
 194:	0d 92       	st	X+, r0
 196:	8a 95       	dec	r24
 198:	e1 f7       	brne	.-8      	; 0x192 <_Z41__static_initialization_and_destruction_0ii+0x5c>
 19a:	80 e2       	ldi	r24, 0x20	; 32
 19c:	e0 ea       	ldi	r30, 0xA0	; 160
 19e:	f4 e0       	ldi	r31, 0x04	; 4
 1a0:	a0 ea       	ldi	r26, 0xA0	; 160
 1a2:	b0 e4       	ldi	r27, 0x40	; 64
 1a4:	01 90       	ld	r0, Z+
 1a6:	0d 92       	st	X+, r0
 1a8:	8a 95       	dec	r24
 1aa:	e1 f7       	brne	.-8      	; 0x1a4 <_Z41__static_initialization_and_destruction_0ii+0x6e>
 1ac:	08 95       	ret

000001ae <_Z21MLN_GPIO_PIN_GET_PORT15mln_gpio_pins_e>:

PORT_t MLN_GPIO_PIN_GET_PORT(PIN_t pin)
{
	return mln_gpio_ports[pin / 8];
 1ae:	66 95       	lsr	r22
 1b0:	66 95       	lsr	r22
 1b2:	66 95       	lsr	r22
 1b4:	20 e2       	ldi	r18, 0x20	; 32
 1b6:	62 9f       	mul	r22, r18
 1b8:	f0 01       	movw	r30, r0
 1ba:	11 24       	eor	r1, r1
 1bc:	e0 50       	subi	r30, 0x00	; 0
 1be:	f0 4c       	sbci	r31, 0xC0	; 192
 1c0:	20 e2       	ldi	r18, 0x20	; 32
 1c2:	dc 01       	movw	r26, r24
 1c4:	01 90       	ld	r0, Z+
 1c6:	0d 92       	st	X+, r0
 1c8:	2a 95       	dec	r18
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <_Z21MLN_GPIO_PIN_GET_PORT15mln_gpio_pins_e+0x16>
}
 1cc:	08 95       	ret

000001ce <_Z20MLN_GPIO_PIN_GET_NUM15mln_gpio_pins_e>:

uint8_t MLN_GPIO_PIN_GET_NUM(PIN_t pin)
{
	return pin % 8;
}
 1ce:	87 70       	andi	r24, 0x07	; 7
 1d0:	08 95       	ret

000001d2 <_ZN8mln_gpioC1E15mln_gpio_pins_e>:

// default constructor
mln_gpio::mln_gpio(PIN_t new_pin)
 1d2:	ff 92       	push	r15
 1d4:	0f 93       	push	r16
 1d6:	1f 93       	push	r17
 1d8:	cf 93       	push	r28
 1da:	df 93       	push	r29
 1dc:	cd b7       	in	r28, 0x3d	; 61
 1de:	de b7       	in	r29, 0x3e	; 62
 1e0:	a0 97       	sbiw	r28, 0x20	; 32
 1e2:	cd bf       	out	0x3d, r28	; 61
 1e4:	de bf       	out	0x3e, r29	; 62
 1e6:	8c 01       	movw	r16, r24
 1e8:	f6 2e       	mov	r15, r22
{
	pin = new_pin;
 1ea:	fc 01       	movw	r30, r24
 1ec:	60 83       	st	Z, r22
	port = MLN_GPIO_PIN_GET_PORT(new_pin);
 1ee:	ce 01       	movw	r24, r28
 1f0:	01 96       	adiw	r24, 0x01	; 1
 1f2:	0e 94 d7 00 	call	0x1ae	; 0x1ae <_Z21MLN_GPIO_PIN_GET_PORT15mln_gpio_pins_e>
 1f6:	80 e2       	ldi	r24, 0x20	; 32
 1f8:	fe 01       	movw	r30, r28
 1fa:	31 96       	adiw	r30, 0x01	; 1
 1fc:	d8 01       	movw	r26, r16
 1fe:	11 96       	adiw	r26, 0x01	; 1
 200:	01 90       	ld	r0, Z+
 202:	0d 92       	st	X+, r0
 204:	8a 95       	dec	r24
 206:	e1 f7       	brne	.-8      	; 0x200 <__EEPROM_REGION_LENGTH__>
	pin_num = MLN_GPIO_PIN_GET_NUM(new_pin);
 208:	8f 2d       	mov	r24, r15
 20a:	0e 94 e7 00 	call	0x1ce	; 0x1ce <_Z20MLN_GPIO_PIN_GET_NUM15mln_gpio_pins_e>
 20e:	f8 01       	movw	r30, r16
 210:	81 a3       	std	Z+33, r24	; 0x21
} //mln_gpio
 212:	a0 96       	adiw	r28, 0x20	; 32
 214:	cd bf       	out	0x3d, r28	; 61
 216:	de bf       	out	0x3e, r29	; 62
 218:	df 91       	pop	r29
 21a:	cf 91       	pop	r28
 21c:	1f 91       	pop	r17
 21e:	0f 91       	pop	r16
 220:	ff 90       	pop	r15
 222:	08 95       	ret

00000224 <_GLOBAL__sub_I_mln_gpio_ports>:
 224:	6f ef       	ldi	r22, 0xFF	; 255
 226:	7f ef       	ldi	r23, 0xFF	; 255
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	0e 94 9b 00 	call	0x136	; 0x136 <_Z41__static_initialization_and_destruction_0ii>
 230:	08 95       	ret

00000232 <_Z41__static_initialization_and_destruction_0ii>:
{
    /* Replace with your application code */
    while (1) 
    {
    }
}
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	41 f4       	brne	.+16     	; 0x246 <_Z41__static_initialization_and_destruction_0ii+0x14>
 236:	6f 3f       	cpi	r22, 0xFF	; 255
 238:	7f 4f       	sbci	r23, 0xFF	; 255
 23a:	29 f4       	brne	.+10     	; 0x246 <_Z41__static_initialization_and_destruction_0ii+0x14>
 */ 

#include <avr/io.h>
#include "mln/mln_gpio.h"

mln_gpio led_builtin = mln_gpio(PB3);
 23c:	6b e0       	ldi	r22, 0x0B	; 11
 23e:	80 ec       	ldi	r24, 0xC0	; 192
 240:	90 e4       	ldi	r25, 0x40	; 64
 242:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <_ZN8mln_gpioC1E15mln_gpio_pins_e>
 246:	08 95       	ret

00000248 <main>:

int main(void)
{
 248:	ff cf       	rjmp	.-2      	; 0x248 <main>

0000024a <_GLOBAL__sub_I_led_builtin>:
    /* Replace with your application code */
    while (1) 
    {
    }
}
 24a:	6f ef       	ldi	r22, 0xFF	; 255
 24c:	7f ef       	ldi	r23, 0xFF	; 255
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 19 01 	call	0x232	; 0x232 <_Z41__static_initialization_and_destruction_0ii>
 256:	08 95       	ret

00000258 <__tablejump2__>:
 258:	ee 0f       	add	r30, r30
 25a:	ff 1f       	adc	r31, r31
 25c:	00 24       	eor	r0, r0
 25e:	00 1c       	adc	r0, r0
 260:	0b be       	out	0x3b, r0	; 59
 262:	07 90       	elpm	r0, Z+
 264:	f6 91       	elpm	r31, Z
 266:	e0 2d       	mov	r30, r0
 268:	09 94       	ijmp

0000026a <_exit>:
 26a:	f8 94       	cli

0000026c <__stop_program>:
 26c:	ff cf       	rjmp	.-2      	; 0x26c <__stop_program>
