
mlnlib.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000040  00804000  00001968  000019fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001968  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000071  00804040  00804040  00001a3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b0  00000000  00000000  00001ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00009369  00000000  00000000  00001d88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00004198  00000000  00000000  0000b0f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000017dc  00000000  00000000  0000f289  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008c4  00000000  00000000  00010a68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002a94  00000000  00000000  0001132c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000202b  00000000  00000000  00013dc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000240  00000000  00000000  00015deb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__ctors_end>
       4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
       8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
       c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      10:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      14:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      18:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      1c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      20:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      24:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <__vector_9>
      28:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      2c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      30:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      34:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      38:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      3c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      40:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      44:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      48:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      4c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      50:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      54:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      58:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      5c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      60:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      64:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      68:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      6c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      70:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      74:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      78:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      7c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      80:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      84:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      88:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      8c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      90:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      94:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      98:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      9c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      a0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      a4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      a8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      ac:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      b0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      b4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      b8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      bc:	0c 94 31 05 	jmp	0xa62	; 0xa62 <__vector_47>
      c0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      c4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      c8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      cc:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      d0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      d4:	0c 94 54 07 	jmp	0xea8	; 0xea8 <__vector_53>
      d8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      dc:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      e0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      e4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      e8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      ec:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      f0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>

000000f4 <__ctors_start>:
      f4:	90 03       	fmuls	r17, r16

000000f6 <__ctors_end>:
      f6:	11 24       	eor	r1, r1
      f8:	1f be       	out	0x3f, r1	; 63
      fa:	cf ef       	ldi	r28, 0xFF	; 255
      fc:	cd bf       	out	0x3d, r28	; 61
      fe:	df e7       	ldi	r29, 0x7F	; 127
     100:	de bf       	out	0x3e, r29	; 62

00000102 <__do_copy_data>:
     102:	10 e4       	ldi	r17, 0x40	; 64
     104:	a0 e0       	ldi	r26, 0x00	; 0
     106:	b0 e4       	ldi	r27, 0x40	; 64
     108:	e8 e6       	ldi	r30, 0x68	; 104
     10a:	f9 e1       	ldi	r31, 0x19	; 25
     10c:	00 e0       	ldi	r16, 0x00	; 0
     10e:	0b bf       	out	0x3b, r16	; 59
     110:	02 c0       	rjmp	.+4      	; 0x116 <__do_copy_data+0x14>
     112:	07 90       	elpm	r0, Z+
     114:	0d 92       	st	X+, r0
     116:	a0 34       	cpi	r26, 0x40	; 64
     118:	b1 07       	cpc	r27, r17
     11a:	d9 f7       	brne	.-10     	; 0x112 <__do_copy_data+0x10>

0000011c <__do_clear_bss>:
     11c:	20 e4       	ldi	r18, 0x40	; 64
     11e:	a0 e4       	ldi	r26, 0x40	; 64
     120:	b0 e4       	ldi	r27, 0x40	; 64
     122:	01 c0       	rjmp	.+2      	; 0x126 <.do_clear_bss_start>

00000124 <.do_clear_bss_loop>:
     124:	1d 92       	st	X+, r1

00000126 <.do_clear_bss_start>:
     126:	a1 3b       	cpi	r26, 0xB1	; 177
     128:	b2 07       	cpc	r27, r18
     12a:	e1 f7       	brne	.-8      	; 0x124 <.do_clear_bss_loop>

0000012c <__do_global_ctors>:
     12c:	10 e0       	ldi	r17, 0x00	; 0
     12e:	cb e7       	ldi	r28, 0x7B	; 123
     130:	d0 e0       	ldi	r29, 0x00	; 0
     132:	04 c0       	rjmp	.+8      	; 0x13c <__do_global_ctors+0x10>
     134:	21 97       	sbiw	r28, 0x01	; 1
     136:	fe 01       	movw	r30, r28
     138:	0e 94 c4 09 	call	0x1388	; 0x1388 <__tablejump2__>
     13c:	ca 37       	cpi	r28, 0x7A	; 122
     13e:	d1 07       	cpc	r29, r17
     140:	c9 f7       	brne	.-14     	; 0x134 <__do_global_ctors+0x8>
     142:	0e 94 32 03 	call	0x664	; 0x664 <main>
     146:	0c 94 b2 0c 	jmp	0x1964	; 0x1964 <_exit>

0000014a <__bad_interrupt>:
     14a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014e <_ZN7mcp4822C1EP10SPI_struct14mln_gpio_pin_sS2_>:
*/


#include "mcp4822.h"

mcp4822::mcp4822(SPI_t *new_spi, PIN_t cs, PIN_t new_ldac)
     14e:	8f 92       	push	r8
     150:	9f 92       	push	r9
     152:	af 92       	push	r10
     154:	bf 92       	push	r11
     156:	cf 92       	push	r12
     158:	df 92       	push	r13
     15a:	ef 92       	push	r14
     15c:	ff 92       	push	r15
     15e:	0f 93       	push	r16
     160:	cf 93       	push	r28
     162:	df 93       	push	r29
     164:	cd b7       	in	r28, 0x3d	; 61
     166:	de b7       	in	r29, 0x3e	; 62
     168:	62 97       	sbiw	r28, 0x12	; 18
     16a:	cd bf       	out	0x3d, r28	; 61
     16c:	de bf       	out	0x3e, r29	; 62
     16e:	5c 01       	movw	r10, r24
     170:	4b 01       	movw	r8, r22
     172:	2d 87       	std	Y+13, r18	; 0x0d
     174:	3e 87       	std	Y+14, r19	; 0x0e
     176:	4f 87       	std	Y+15, r20	; 0x0f
     178:	e8 8a       	std	Y+16, r14	; 0x10
     17a:	f9 8a       	std	Y+17, r15	; 0x11
     17c:	0a 8b       	std	Y+18, r16	; 0x12
     17e:	0e 94 12 04 	call	0x824	; 0x824 <_ZN7mln_spiC1Ev>
     182:	65 01       	movw	r12, r10
     184:	87 e0       	ldi	r24, 0x07	; 7
     186:	c8 0e       	add	r12, r24
     188:	d1 1c       	adc	r13, r1
     18a:	c6 01       	movw	r24, r12
     18c:	0e 94 ef 01 	call	0x3de	; 0x3de <_ZN8mln_gpioC1Ev>
{
	spi = mln_spi(new_spi, cs);
     190:	2d 85       	ldd	r18, Y+13	; 0x0d
     192:	3e 85       	ldd	r19, Y+14	; 0x0e
     194:	4f 85       	ldd	r20, Y+15	; 0x0f
     196:	b4 01       	movw	r22, r8
     198:	ce 01       	movw	r24, r28
     19a:	06 96       	adiw	r24, 0x06	; 6
     19c:	0e 94 97 03 	call	0x72e	; 0x72e <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s>
     1a0:	87 e0       	ldi	r24, 0x07	; 7
     1a2:	fe 01       	movw	r30, r28
     1a4:	36 96       	adiw	r30, 0x06	; 6
     1a6:	d5 01       	movw	r26, r10
     1a8:	01 90       	ld	r0, Z+
     1aa:	0d 92       	st	X+, r0
     1ac:	8a 95       	dec	r24
     1ae:	e1 f7       	brne	.-8      	; 0x1a8 <_ZN7mcp4822C1EP10SPI_struct14mln_gpio_pin_sS2_+0x5a>
	ldac = mln_gpio(new_ldac, OUTPUT);
     1b0:	00 e0       	ldi	r16, 0x00	; 0
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	48 89       	ldd	r20, Y+16	; 0x10
     1b6:	59 89       	ldd	r21, Y+17	; 0x11
     1b8:	6a 89       	ldd	r22, Y+18	; 0x12
     1ba:	ce 01       	movw	r24, r28
     1bc:	01 96       	adiw	r24, 0x01	; 1
     1be:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     1c2:	85 e0       	ldi	r24, 0x05	; 5
     1c4:	fe 01       	movw	r30, r28
     1c6:	31 96       	adiw	r30, 0x01	; 1
     1c8:	d6 01       	movw	r26, r12
     1ca:	01 90       	ld	r0, Z+
     1cc:	0d 92       	st	X+, r0
     1ce:	8a 95       	dec	r24
     1d0:	e1 f7       	brne	.-8      	; 0x1ca <_ZN7mcp4822C1EP10SPI_struct14mln_gpio_pin_sS2_+0x7c>

	ldac.set();
     1d2:	c6 01       	movw	r24, r12
     1d4:	0e 94 38 02 	call	0x470	; 0x470 <_ZN8mln_gpio3setEv>
} //mcp4822
     1d8:	62 96       	adiw	r28, 0x12	; 18
     1da:	cd bf       	out	0x3d, r28	; 61
     1dc:	de bf       	out	0x3e, r29	; 62
     1de:	df 91       	pop	r29
     1e0:	cf 91       	pop	r28
     1e2:	0f 91       	pop	r16
     1e4:	ff 90       	pop	r15
     1e6:	ef 90       	pop	r14
     1e8:	df 90       	pop	r13
     1ea:	cf 90       	pop	r12
     1ec:	bf 90       	pop	r11
     1ee:	af 90       	pop	r10
     1f0:	9f 90       	pop	r9
     1f2:	8f 90       	pop	r8
     1f4:	08 95       	ret

000001f6 <_ZN7mcp48228set_gainE14mln_spi_gain_s>:

void mcp4822::set_gain(MCP4822_GAIN_t new_gain)
{
	gain = new_gain;
     1f6:	fc 01       	movw	r30, r24
     1f8:	64 87       	std	Z+12, r22	; 0x0c
     1fa:	08 95       	ret

000001fc <_ZN7mcp48225writeE17mln_spi_channel_sj>:
}

void mcp4822::write(MCP4822_CHANNEL_t channel, uint16_t	value)
{
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
     200:	ec 01       	movw	r28, r24
     202:	85 2f       	mov	r24, r21
	buffer[0] = (channel << 7) | (gain << 5) | MCP4822_ENABLE_bm | (uint8_t)(value >> 8);
     204:	50 e8       	ldi	r21, 0x80	; 128
     206:	65 9f       	mul	r22, r21
     208:	b0 01       	movw	r22, r0
     20a:	11 24       	eor	r1, r1
     20c:	9c 85       	ldd	r25, Y+12	; 0x0c
     20e:	50 e2       	ldi	r21, 0x20	; 32
     210:	95 9f       	mul	r25, r21
     212:	90 01       	movw	r18, r0
     214:	11 24       	eor	r1, r1
     216:	56 2f       	mov	r21, r22
     218:	52 2b       	or	r21, r18
     21a:	58 2b       	or	r21, r24
     21c:	50 61       	ori	r21, 0x10	; 16
     21e:	5d 87       	std	Y+13, r21	; 0x0d
	buffer[1] = (uint8_t)(value & 0xFF);
     220:	4e 87       	std	Y+14, r20	; 0x0e

	spi.write(buffer, 2);
     222:	be 01       	movw	r22, r28
     224:	63 5f       	subi	r22, 0xF3	; 243
     226:	7f 4f       	sbci	r23, 0xFF	; 255
     228:	42 e0       	ldi	r20, 0x02	; 2
     22a:	ce 01       	movw	r24, r28
     22c:	0e 94 16 04 	call	0x82c	; 0x82c <_ZN7mln_spi5writeEPhh>
	ldac.clear();
     230:	27 96       	adiw	r28, 0x07	; 7
     232:	ce 01       	movw	r24, r28
     234:	0e 94 56 02 	call	0x4ac	; 0x4ac <_ZN8mln_gpio5clearEv>
	ldac.set();
     238:	ce 01       	movw	r24, r28
     23a:	0e 94 38 02 	call	0x470	; 0x470 <_ZN8mln_gpio3setEv>
     23e:	df 91       	pop	r29
     240:	cf 91       	pop	r28
     242:	08 95       	ret

00000244 <_ZN7mln_adc7enabledEv>:

	start();
	while(!has_result());

	return result();
}
     244:	dc 01       	movw	r26, r24
     246:	ed 91       	ld	r30, X+
     248:	fc 91       	ld	r31, X
     24a:	80 81       	ld	r24, Z
     24c:	81 70       	andi	r24, 0x01	; 1
     24e:	08 95       	ret

00000250 <_ZN7mln_adc10has_resultEv>:
     250:	dc 01       	movw	r26, r24
     252:	ed 91       	ld	r30, X+
     254:	fc 91       	ld	r31, X
     256:	85 85       	ldd	r24, Z+13	; 0x0d
     258:	81 70       	andi	r24, 0x01	; 1
     25a:	08 95       	ret

0000025c <_ZN7mln_adc6resultEv>:
     25c:	dc 01       	movw	r26, r24
     25e:	ed 91       	ld	r30, X+
     260:	fc 91       	ld	r31, X
     262:	80 89       	ldd	r24, Z+16	; 0x10
     264:	91 89       	ldd	r25, Z+17	; 0x11
     266:	21 81       	ldd	r18, Z+1	; 0x01
     268:	24 30       	cpi	r18, 0x04	; 4
     26a:	10 f4       	brcc	.+4      	; 0x270 <_ZN7mln_adc6resultEv+0x14>
     26c:	21 81       	ldd	r18, Z+1	; 0x01
     26e:	02 c0       	rjmp	.+4      	; 0x274 <_ZN7mln_adc6resultEv+0x18>
     270:	24 e0       	ldi	r18, 0x04	; 4
     272:	30 e0       	ldi	r19, 0x00	; 0
     274:	02 c0       	rjmp	.+4      	; 0x27a <_ZN7mln_adc6resultEv+0x1e>
     276:	96 95       	lsr	r25
     278:	87 95       	ror	r24
     27a:	2a 95       	dec	r18
     27c:	e2 f7       	brpl	.-8      	; 0x276 <_ZN7mln_adc6resultEv+0x1a>
     27e:	08 95       	ret

00000280 <_ZN7mln_adcC1Ev>:
     280:	cf 93       	push	r28
     282:	df 93       	push	r29
     284:	ec 01       	movw	r28, r24
     286:	02 96       	adiw	r24, 0x02	; 2
     288:	0e 94 ef 01 	call	0x3de	; 0x3de <_ZN8mln_gpioC1Ev>
     28c:	e0 e0       	ldi	r30, 0x00	; 0
     28e:	f6 e0       	ldi	r31, 0x06	; 6
     290:	e8 83       	st	Y, r30
     292:	f9 83       	std	Y+1, r31	; 0x01
     294:	80 e4       	ldi	r24, 0x40	; 64
     296:	80 87       	std	Z+8, r24	; 0x08
     298:	df 91       	pop	r29
     29a:	cf 91       	pop	r28
     29c:	08 95       	ret

0000029e <_ZN7mln_adc6enableEb>:
     29e:	dc 01       	movw	r26, r24
     2a0:	ed 91       	ld	r30, X+
     2a2:	fc 91       	ld	r31, X
     2a4:	80 81       	ld	r24, Z
     2a6:	67 95       	ror	r22
     2a8:	66 27       	eor	r22, r22
     2aa:	67 95       	ror	r22
     2ac:	68 2b       	or	r22, r24
     2ae:	61 60       	ori	r22, 0x01	; 1
     2b0:	60 83       	st	Z, r22
     2b2:	08 95       	ret

000002b4 <_ZN7mln_adc6set_inE14mln_gpio_pin_s>:
     2b4:	cf 92       	push	r12
     2b6:	df 92       	push	r13
     2b8:	ef 92       	push	r14
     2ba:	ff 92       	push	r15
     2bc:	0f 93       	push	r16
     2be:	1f 93       	push	r17
     2c0:	cf 93       	push	r28
     2c2:	df 93       	push	r29
     2c4:	cd b7       	in	r28, 0x3d	; 61
     2c6:	de b7       	in	r29, 0x3e	; 62
     2c8:	25 97       	sbiw	r28, 0x05	; 5
     2ca:	cd bf       	out	0x3d, r28	; 61
     2cc:	de bf       	out	0x3e, r29	; 62
     2ce:	e4 2e       	mov	r14, r20
     2d0:	f5 2e       	mov	r15, r21
     2d2:	20 e6       	ldi	r18, 0x60	; 96
     2d4:	e2 16       	cp	r14, r18
     2d6:	24 e0       	ldi	r18, 0x04	; 4
     2d8:	f2 06       	cpc	r15, r18
     2da:	51 f0       	breq	.+20     	; 0x2f0 <_ZN7mln_adc6set_inE14mln_gpio_pin_s+0x3c>
     2dc:	a0 e8       	ldi	r26, 0x80	; 128
     2de:	ea 16       	cp	r14, r26
     2e0:	a4 e0       	ldi	r26, 0x04	; 4
     2e2:	fa 06       	cpc	r15, r26
     2e4:	29 f0       	breq	.+10     	; 0x2f0 <_ZN7mln_adc6set_inE14mln_gpio_pin_s+0x3c>
     2e6:	b0 ea       	ldi	r27, 0xA0	; 160
     2e8:	eb 16       	cp	r14, r27
     2ea:	b4 e0       	ldi	r27, 0x04	; 4
     2ec:	fb 06       	cpc	r15, r27
     2ee:	39 f5       	brne	.+78     	; 0x33e <_ZN7mln_adc6set_inE14mln_gpio_pin_s+0x8a>
     2f0:	16 2f       	mov	r17, r22
     2f2:	6c 01       	movw	r12, r24
     2f4:	00 e0       	ldi	r16, 0x00	; 0
     2f6:	21 e0       	ldi	r18, 0x01	; 1
     2f8:	ce 01       	movw	r24, r28
     2fa:	01 96       	adiw	r24, 0x01	; 1
     2fc:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     300:	85 e0       	ldi	r24, 0x05	; 5
     302:	fe 01       	movw	r30, r28
     304:	31 96       	adiw	r30, 0x01	; 1
     306:	d6 01       	movw	r26, r12
     308:	12 96       	adiw	r26, 0x02	; 2
     30a:	01 90       	ld	r0, Z+
     30c:	0d 92       	st	X+, r0
     30e:	8a 95       	dec	r24
     310:	e1 f7       	brne	.-8      	; 0x30a <_ZN7mln_adc6set_inE14mln_gpio_pin_s+0x56>
     312:	d6 01       	movw	r26, r12
     314:	ed 91       	ld	r30, X+
     316:	fc 91       	ld	r31, X
     318:	b0 e6       	ldi	r27, 0x60	; 96
     31a:	eb 1a       	sub	r14, r27
     31c:	b4 e0       	ldi	r27, 0x04	; 4
     31e:	fb 0a       	sbc	r15, r27
     320:	f5 94       	asr	r15
     322:	e7 94       	ror	r14
     324:	f5 94       	asr	r15
     326:	e7 94       	ror	r14
     328:	f5 94       	asr	r15
     32a:	e7 94       	ror	r14
     32c:	f5 94       	asr	r15
     32e:	e7 94       	ror	r14
     330:	f5 94       	asr	r15
     332:	e7 94       	ror	r14
     334:	ee 0c       	add	r14, r14
     336:	ee 0c       	add	r14, r14
     338:	ee 0c       	add	r14, r14
     33a:	e1 0e       	add	r14, r17
     33c:	e0 86       	std	Z+8, r14	; 0x08
     33e:	25 96       	adiw	r28, 0x05	; 5
     340:	cd bf       	out	0x3d, r28	; 61
     342:	de bf       	out	0x3e, r29	; 62
     344:	df 91       	pop	r29
     346:	cf 91       	pop	r28
     348:	1f 91       	pop	r17
     34a:	0f 91       	pop	r16
     34c:	ff 90       	pop	r15
     34e:	ef 90       	pop	r14
     350:	df 90       	pop	r13
     352:	cf 90       	pop	r12
     354:	08 95       	ret

00000356 <_ZN7mln_adc6set_inE16mln_adc_alt_in_e>:
     356:	dc 01       	movw	r26, r24
     358:	ed 91       	ld	r30, X+
     35a:	fc 91       	ld	r31, X
     35c:	60 87       	std	Z+8, r22	; 0x08
     35e:	08 95       	ret

00000360 <_ZN7mln_adc5startEv>:
     360:	dc 01       	movw	r26, r24
     362:	ed 91       	ld	r30, X+
     364:	fc 91       	ld	r31, X
     366:	82 85       	ldd	r24, Z+10	; 0x0a
     368:	80 fd       	sbrc	r24, 0
     36a:	02 c0       	rjmp	.+4      	; 0x370 <_ZN7mln_adc5startEv+0x10>
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	82 87       	std	Z+10, r24	; 0x0a
     370:	08 95       	ret

00000372 <_ZN7mln_adc4readE14mln_gpio_pin_s>:

uint16_t mln_adc::read(PIN_t pin)
{
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	ec 01       	movw	r28, r24
	set_in(pin);
     378:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <_ZN7mln_adc6set_inE14mln_gpio_pin_s>

	if(!enabled())
     37c:	ce 01       	movw	r24, r28
     37e:	0e 94 22 01 	call	0x244	; 0x244 <_ZN7mln_adc7enabledEv>
     382:	88 23       	and	r24, r24
     384:	61 f0       	breq	.+24     	; 0x39e <_ZN7mln_adc4readE14mln_gpio_pin_s+0x2c>
		return -1;

	start();
     386:	ce 01       	movw	r24, r28
     388:	0e 94 b0 01 	call	0x360	; 0x360 <_ZN7mln_adc5startEv>
	while(!has_result());
     38c:	ce 01       	movw	r24, r28
     38e:	0e 94 28 01 	call	0x250	; 0x250 <_ZN7mln_adc10has_resultEv>
     392:	88 23       	and	r24, r24
     394:	d9 f3       	breq	.-10     	; 0x38c <_ZN7mln_adc4readE14mln_gpio_pin_s+0x1a>

	return result();
     396:	ce 01       	movw	r24, r28
     398:	0e 94 2e 01 	call	0x25c	; 0x25c <_ZN7mln_adc6resultEv>
     39c:	02 c0       	rjmp	.+4      	; 0x3a2 <_ZN7mln_adc4readE14mln_gpio_pin_s+0x30>
uint16_t mln_adc::read(PIN_t pin)
{
	set_in(pin);

	if(!enabled())
		return -1;
     39e:	8f ef       	ldi	r24, 0xFF	; 255
     3a0:	9f ef       	ldi	r25, 0xFF	; 255

	start();
	while(!has_result());

	return result();
}
     3a2:	df 91       	pop	r29
     3a4:	cf 91       	pop	r28
     3a6:	08 95       	ret

000003a8 <_ZN7mln_adc4readE16mln_adc_alt_in_e>:

uint16_t mln_adc::read(ADC_IN_t in)
{
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	ec 01       	movw	r28, r24
	set_in(in);
     3ae:	0e 94 ab 01 	call	0x356	; 0x356 <_ZN7mln_adc6set_inE16mln_adc_alt_in_e>

	if(!enabled())
     3b2:	ce 01       	movw	r24, r28
     3b4:	0e 94 22 01 	call	0x244	; 0x244 <_ZN7mln_adc7enabledEv>
     3b8:	88 23       	and	r24, r24
     3ba:	61 f0       	breq	.+24     	; 0x3d4 <_ZN7mln_adc4readE16mln_adc_alt_in_e+0x2c>
		return -1;

	start();
     3bc:	ce 01       	movw	r24, r28
     3be:	0e 94 b0 01 	call	0x360	; 0x360 <_ZN7mln_adc5startEv>
	while(!has_result());
     3c2:	ce 01       	movw	r24, r28
     3c4:	0e 94 28 01 	call	0x250	; 0x250 <_ZN7mln_adc10has_resultEv>
     3c8:	88 23       	and	r24, r24
     3ca:	d9 f3       	breq	.-10     	; 0x3c2 <_ZN7mln_adc4readE16mln_adc_alt_in_e+0x1a>

	return result();
     3cc:	ce 01       	movw	r24, r28
     3ce:	0e 94 2e 01 	call	0x25c	; 0x25c <_ZN7mln_adc6resultEv>
     3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <_ZN7mln_adc4readE16mln_adc_alt_in_e+0x30>
uint16_t mln_adc::read(ADC_IN_t in)
{
	set_in(in);

	if(!enabled())
		return -1;
     3d4:	8f ef       	ldi	r24, 0xFF	; 255
     3d6:	9f ef       	ldi	r25, 0xFF	; 255

	start();
	while(!has_result());

	return result();
     3d8:	df 91       	pop	r29
     3da:	cf 91       	pop	r28
     3dc:	08 95       	ret

000003de <_ZN8mln_gpioC1Ev>:


#define BITMAP(pin) (1 << pin)

// default constructor
mln_gpio::mln_gpio()
     3de:	08 95       	ret

000003e0 <_ZN8mln_gpio9conf_pullE19mln_gpio_pin_dirs_e>:
	conf_pull(new_dir);
}

void mln_gpio::conf_pull(PIN_DIR_t dir)
{
	uint8_t* port = (uint8_t *)pin.port + 0x10 + pin.pin_num;
     3e0:	fc 01       	movw	r30, r24
     3e2:	20 81       	ld	r18, Z
     3e4:	31 81       	ldd	r19, Z+1	; 0x01
     3e6:	82 81       	ldd	r24, Z+2	; 0x02
     3e8:	e8 2f       	mov	r30, r24
     3ea:	f0 e0       	ldi	r31, 0x00	; 0
     3ec:	70 96       	adiw	r30, 0x10	; 16
     3ee:	e2 0f       	add	r30, r18
     3f0:	f3 1f       	adc	r31, r19
	if(dir == INPUT_PULLUP)
     3f2:	62 30       	cpi	r22, 0x02	; 2
     3f4:	21 f4       	brne	.+8      	; 0x3fe <_ZN8mln_gpio9conf_pullE19mln_gpio_pin_dirs_e+0x1e>
		*port |= PORT_PULLUPEN_bm;
     3f6:	80 81       	ld	r24, Z
     3f8:	88 60       	ori	r24, 0x08	; 8
     3fa:	80 83       	st	Z, r24
     3fc:	08 95       	ret
	else
		*port &= ~PORT_PULLUPEN_bm;
     3fe:	80 81       	ld	r24, Z
     400:	87 7f       	andi	r24, 0xF7	; 247
     402:	80 83       	st	Z, r24
     404:	08 95       	ret

00000406 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e>:
	conf_dir(new_dir);
} //mln_gpio

void mln_gpio::conf_dir(PIN_DIR_t new_dir)
{
	dir = new_dir;
     406:	dc 01       	movw	r26, r24
     408:	13 96       	adiw	r26, 0x03	; 3
     40a:	6c 93       	st	X, r22
     40c:	13 97       	sbiw	r26, 0x03	; 3
	
	if(dir == OUTPUT)
     40e:	61 11       	cpse	r22, r1
     410:	10 c0       	rjmp	.+32     	; 0x432 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x2c>
		pin.port->DIR |= (1 << pin.pin_num);
     412:	ed 91       	ld	r30, X+
     414:	fc 91       	ld	r31, X
     416:	11 97       	sbiw	r26, 0x01	; 1
     418:	40 81       	ld	r20, Z
     41a:	21 e0       	ldi	r18, 0x01	; 1
     41c:	30 e0       	ldi	r19, 0x00	; 0
     41e:	12 96       	adiw	r26, 0x02	; 2
     420:	0c 90       	ld	r0, X
     422:	02 c0       	rjmp	.+4      	; 0x428 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x22>
     424:	22 0f       	add	r18, r18
     426:	33 1f       	adc	r19, r19
     428:	0a 94       	dec	r0
     42a:	e2 f7       	brpl	.-8      	; 0x424 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x1e>
     42c:	24 2b       	or	r18, r20
     42e:	20 83       	st	Z, r18
     430:	11 c0       	rjmp	.+34     	; 0x454 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x4e>
	else
		pin.port->DIR &= ~(1 << pin.pin_num);
     432:	dc 01       	movw	r26, r24
     434:	ed 91       	ld	r30, X+
     436:	fc 91       	ld	r31, X
     438:	11 97       	sbiw	r26, 0x01	; 1
     43a:	40 81       	ld	r20, Z
     43c:	21 e0       	ldi	r18, 0x01	; 1
     43e:	30 e0       	ldi	r19, 0x00	; 0
     440:	12 96       	adiw	r26, 0x02	; 2
     442:	0c 90       	ld	r0, X
     444:	02 c0       	rjmp	.+4      	; 0x44a <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x44>
     446:	22 0f       	add	r18, r18
     448:	33 1f       	adc	r19, r19
     44a:	0a 94       	dec	r0
     44c:	e2 f7       	brpl	.-8      	; 0x446 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x40>
     44e:	20 95       	com	r18
     450:	24 23       	and	r18, r20
     452:	20 83       	st	Z, r18
	
	conf_pull(new_dir);
     454:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <_ZN8mln_gpio9conf_pullE19mln_gpio_pin_dirs_e>
     458:	08 95       	ret

0000045a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>:
mln_gpio::mln_gpio()
{
} //mln_gpio

// constructor
mln_gpio::mln_gpio(PIN_t new_pin, PIN_DIR_t new_dir, uint8_t new_inverted)
     45a:	0f 93       	push	r16
{
	pin = new_pin;
     45c:	fc 01       	movw	r30, r24
     45e:	40 83       	st	Z, r20
     460:	51 83       	std	Z+1, r21	; 0x01
     462:	62 83       	std	Z+2, r22	; 0x02
	inverted = new_inverted;
     464:	04 83       	std	Z+4, r16	; 0x04
	
	conf_dir(new_dir);
     466:	62 2f       	mov	r22, r18
     468:	0e 94 03 02 	call	0x406	; 0x406 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e>
} //mln_gpio
     46c:	0f 91       	pop	r16
     46e:	08 95       	ret

00000470 <_ZN8mln_gpio3setEv>:
	else
		*port &= ~PORT_PULLUPEN_bm;
}

void mln_gpio::set(void)
{
     470:	fc 01       	movw	r30, r24
	inverted ? pin.port->OUTCLR = BITMAP(pin.pin_num) : pin.port->OUTSET = BITMAP(pin.pin_num);
     472:	84 81       	ldd	r24, Z+4	; 0x04
     474:	88 23       	and	r24, r24
     476:	69 f0       	breq	.+26     	; 0x492 <_ZN8mln_gpio3setEv+0x22>
     478:	a0 81       	ld	r26, Z
     47a:	b1 81       	ldd	r27, Z+1	; 0x01
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	02 80       	ldd	r0, Z+2	; 0x02
     482:	02 c0       	rjmp	.+4      	; 0x488 <_ZN8mln_gpio3setEv+0x18>
     484:	88 0f       	add	r24, r24
     486:	99 1f       	adc	r25, r25
     488:	0a 94       	dec	r0
     48a:	e2 f7       	brpl	.-8      	; 0x484 <_ZN8mln_gpio3setEv+0x14>
     48c:	16 96       	adiw	r26, 0x06	; 6
     48e:	8c 93       	st	X, r24
     490:	08 95       	ret
     492:	a0 81       	ld	r26, Z
     494:	b1 81       	ldd	r27, Z+1	; 0x01
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	02 80       	ldd	r0, Z+2	; 0x02
     49c:	02 c0       	rjmp	.+4      	; 0x4a2 <_ZN8mln_gpio3setEv+0x32>
     49e:	88 0f       	add	r24, r24
     4a0:	99 1f       	adc	r25, r25
     4a2:	0a 94       	dec	r0
     4a4:	e2 f7       	brpl	.-8      	; 0x49e <_ZN8mln_gpio3setEv+0x2e>
     4a6:	15 96       	adiw	r26, 0x05	; 5
     4a8:	8c 93       	st	X, r24
     4aa:	08 95       	ret

000004ac <_ZN8mln_gpio5clearEv>:
}

void mln_gpio::clear(void)
{
     4ac:	fc 01       	movw	r30, r24
	inverted ? pin.port->OUTSET = BITMAP(pin.pin_num) : pin.port->OUTCLR = BITMAP(pin.pin_num);
     4ae:	84 81       	ldd	r24, Z+4	; 0x04
     4b0:	88 23       	and	r24, r24
     4b2:	69 f0       	breq	.+26     	; 0x4ce <_ZN8mln_gpio5clearEv+0x22>
     4b4:	a0 81       	ld	r26, Z
     4b6:	b1 81       	ldd	r27, Z+1	; 0x01
     4b8:	81 e0       	ldi	r24, 0x01	; 1
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	02 80       	ldd	r0, Z+2	; 0x02
     4be:	02 c0       	rjmp	.+4      	; 0x4c4 <_ZN8mln_gpio5clearEv+0x18>
     4c0:	88 0f       	add	r24, r24
     4c2:	99 1f       	adc	r25, r25
     4c4:	0a 94       	dec	r0
     4c6:	e2 f7       	brpl	.-8      	; 0x4c0 <_ZN8mln_gpio5clearEv+0x14>
     4c8:	15 96       	adiw	r26, 0x05	; 5
     4ca:	8c 93       	st	X, r24
     4cc:	08 95       	ret
     4ce:	a0 81       	ld	r26, Z
     4d0:	b1 81       	ldd	r27, Z+1	; 0x01
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	02 80       	ldd	r0, Z+2	; 0x02
     4d8:	02 c0       	rjmp	.+4      	; 0x4de <_ZN8mln_gpio5clearEv+0x32>
     4da:	88 0f       	add	r24, r24
     4dc:	99 1f       	adc	r25, r25
     4de:	0a 94       	dec	r0
     4e0:	e2 f7       	brpl	.-8      	; 0x4da <_ZN8mln_gpio5clearEv+0x2e>
     4e2:	16 96       	adiw	r26, 0x06	; 6
     4e4:	8c 93       	st	X, r24
     4e6:	08 95       	ret

000004e8 <_ZN8mln_gpio6toggleEv>:
}

void mln_gpio::toggle(void)
{
     4e8:	dc 01       	movw	r26, r24
	pin.port->OUT ^= BITMAP(pin.pin_num);
     4ea:	ed 91       	ld	r30, X+
     4ec:	fc 91       	ld	r31, X
     4ee:	11 97       	sbiw	r26, 0x01	; 1
     4f0:	44 81       	ldd	r20, Z+4	; 0x04
     4f2:	21 e0       	ldi	r18, 0x01	; 1
     4f4:	30 e0       	ldi	r19, 0x00	; 0
     4f6:	c9 01       	movw	r24, r18
     4f8:	12 96       	adiw	r26, 0x02	; 2
     4fa:	0c 90       	ld	r0, X
     4fc:	02 c0       	rjmp	.+4      	; 0x502 <_ZN8mln_gpio6toggleEv+0x1a>
     4fe:	88 0f       	add	r24, r24
     500:	99 1f       	adc	r25, r25
     502:	0a 94       	dec	r0
     504:	e2 f7       	brpl	.-8      	; 0x4fe <_ZN8mln_gpio6toggleEv+0x16>
     506:	84 27       	eor	r24, r20
     508:	84 83       	std	Z+4, r24	; 0x04
     50a:	08 95       	ret

0000050c <_Z8led_taskv>:

uint16_t dac_value = 0;
uint8_t direction = 0;

void led_task(void)
{
     50c:	ef 92       	push	r14
     50e:	ff 92       	push	r15
     510:	0f 93       	push	r16
     512:	1f 93       	push	r17
     514:	cf 93       	push	r28
     516:	df 93       	push	r29
     518:	cd b7       	in	r28, 0x3d	; 61
     51a:	de b7       	in	r29, 0x3e	; 62
     51c:	a0 97       	sbiw	r28, 0x20	; 32
     51e:	cd bf       	out	0x3d, r28	; 61
     520:	de bf       	out	0x3e, r29	; 62
	led_builtin.toggle();
     522:	83 e6       	ldi	r24, 0x63	; 99
     524:	90 e4       	ldi	r25, 0x40	; 64
     526:	0e 94 74 02 	call	0x4e8	; 0x4e8 <_ZN8mln_gpio6toggleEv>

	printf("A = %u\tB = %u\tdac = %u\n", adc.read(PD0), adc.read(PD1), adc.read(DAC));
     52a:	68 e4       	ldi	r22, 0x48	; 72
     52c:	82 e4       	ldi	r24, 0x42	; 66
     52e:	90 e4       	ldi	r25, 0x40	; 64
     530:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <_ZN7mln_adc4readE16mln_adc_alt_in_e>
     534:	f8 2e       	mov	r15, r24
     536:	e9 2e       	mov	r14, r25
     538:	40 e6       	ldi	r20, 0x60	; 96
     53a:	54 e0       	ldi	r21, 0x04	; 4
     53c:	61 e0       	ldi	r22, 0x01	; 1
     53e:	82 e4       	ldi	r24, 0x42	; 66
     540:	90 e4       	ldi	r25, 0x40	; 64
     542:	0e 94 b9 01 	call	0x372	; 0x372 <_ZN7mln_adc4readE14mln_gpio_pin_s>
     546:	18 2f       	mov	r17, r24
     548:	09 2f       	mov	r16, r25
     54a:	40 e6       	ldi	r20, 0x60	; 96
     54c:	54 e0       	ldi	r21, 0x04	; 4
     54e:	60 e0       	ldi	r22, 0x00	; 0
     550:	82 e4       	ldi	r24, 0x42	; 66
     552:	90 e4       	ldi	r25, 0x40	; 64
     554:	0e 94 b9 01 	call	0x372	; 0x372 <_ZN7mln_adc4readE14mln_gpio_pin_s>
     558:	ef 92       	push	r14
     55a:	ff 92       	push	r15
     55c:	0f 93       	push	r16
     55e:	1f 93       	push	r17
     560:	9f 93       	push	r25
     562:	8f 93       	push	r24
     564:	80 e0       	ldi	r24, 0x00	; 0
     566:	90 e4       	ldi	r25, 0x40	; 64
     568:	9f 93       	push	r25
     56a:	8f 93       	push	r24
     56c:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <printf>

	dac_value = (dac_value + 16) % 4096;
     570:	80 91 40 40 	lds	r24, 0x4040	; 0x804040 <__data_end>
     574:	90 91 41 40 	lds	r25, 0x4041	; 0x804041 <__data_end+0x1>
     578:	40 96       	adiw	r24, 0x10	; 16
     57a:	9f 70       	andi	r25, 0x0F	; 15
     57c:	80 93 40 40 	sts	0x4040, r24	; 0x804040 <__data_end>
     580:	90 93 41 40 	sts	0x4041, r25	; 0x804041 <__data_end+0x1>

	dac_intern.set(dac_value / 4);
     584:	96 95       	lsr	r25
     586:	87 95       	ror	r24
     588:	96 95       	lsr	r25
     58a:	87 95       	ror	r24
		DAC0.CTRLA &= ~0x01;
	}

	void set(uint16_t value)
	{
		DAC0.DATA = value << 6;
     58c:	00 24       	eor	r0, r0
     58e:	96 95       	lsr	r25
     590:	87 95       	ror	r24
     592:	07 94       	ror	r0
     594:	96 95       	lsr	r25
     596:	87 95       	ror	r24
     598:	07 94       	ror	r0
     59a:	98 2f       	mov	r25, r24
     59c:	80 2d       	mov	r24, r0
     59e:	80 93 a2 06 	sts	0x06A2, r24	; 0x8006a2 <__TEXT_REGION_LENGTH__+0x7e06a2>
     5a2:	90 93 a3 06 	sts	0x06A3, r25	; 0x8006a3 <__TEXT_REGION_LENGTH__+0x7e06a3>

	if(uart.data_available())
     5a6:	88 e6       	ldi	r24, 0x68	; 104
     5a8:	90 e4       	ldi	r25, 0x40	; 64
     5aa:	0e 94 4c 07 	call	0xe98	; 0xe98 <_ZN8mln_uart14data_availableEv>
     5ae:	cd bf       	out	0x3d, r28	; 61
     5b0:	de bf       	out	0x3e, r29	; 62
     5b2:	88 23       	and	r24, r24
     5b4:	a1 f0       	breq	.+40     	; 0x5de <_Z8led_taskv+0xd2>
	{
		uint8_t buffer[MLN_UART_BUF_SIZE];
		uart.pull(buffer);
     5b6:	8e 01       	movw	r16, r28
     5b8:	0f 5f       	subi	r16, 0xFF	; 255
     5ba:	1f 4f       	sbci	r17, 0xFF	; 255
     5bc:	b8 01       	movw	r22, r16
     5be:	88 e6       	ldi	r24, 0x68	; 104
     5c0:	90 e4       	ldi	r25, 0x40	; 64
     5c2:	0e 94 c6 06 	call	0xd8c	; 0xd8c <_ZN8mln_uart4pullEPh>
		printf("Received '%s'\n", buffer);
     5c6:	1f 93       	push	r17
     5c8:	0f 93       	push	r16
     5ca:	88 e1       	ldi	r24, 0x18	; 24
     5cc:	90 e4       	ldi	r25, 0x40	; 64
     5ce:	9f 93       	push	r25
     5d0:	8f 93       	push	r24
     5d2:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <printf>
     5d6:	0f 90       	pop	r0
     5d8:	0f 90       	pop	r0
     5da:	0f 90       	pop	r0
     5dc:	0f 90       	pop	r0
	}
}
     5de:	a0 96       	adiw	r28, 0x20	; 32
     5e0:	cd bf       	out	0x3d, r28	; 61
     5e2:	de bf       	out	0x3e, r29	; 62
     5e4:	df 91       	pop	r29
     5e6:	cf 91       	pop	r28
     5e8:	1f 91       	pop	r17
     5ea:	0f 91       	pop	r16
     5ec:	ff 90       	pop	r15
     5ee:	ef 90       	pop	r14
     5f0:	08 95       	ret

000005f2 <_Z41__static_initialization_and_destruction_0ii>:
	while (1)
	{
		dac.write(CHANNELA, dac_value);
		dac.write(CHANNELB, 4095 - dac_value);
    }
}
     5f2:	ef 92       	push	r14
     5f4:	ff 92       	push	r15
     5f6:	0f 93       	push	r16
     5f8:	01 97       	sbiw	r24, 0x01	; 1
     5fa:	81 f5       	brne	.+96     	; 0x65c <_Z41__static_initialization_and_destruction_0ii+0x6a>
     5fc:	6f 3f       	cpi	r22, 0xFF	; 255
     5fe:	7f 4f       	sbci	r23, 0xFF	; 255
     600:	69 f5       	brne	.+90     	; 0x65c <_Z41__static_initialization_and_destruction_0ii+0x6a>
 * Author : cedr0
 */

#include "mln/mln_common.h"

mln_uart uart = mln_uart(UART3, 115200);
     602:	20 e0       	ldi	r18, 0x00	; 0
     604:	32 ec       	ldi	r19, 0xC2	; 194
     606:	41 e0       	ldi	r20, 0x01	; 1
     608:	50 e0       	ldi	r21, 0x00	; 0
     60a:	63 e0       	ldi	r22, 0x03	; 3
     60c:	88 e6       	ldi	r24, 0x68	; 104
     60e:	90 e4       	ldi	r25, 0x40	; 64
     610:	0e 94 6d 06 	call	0xcda	; 0xcda <_ZN8mln_uartC1E15mln_uart_inst_em>

mln_gpio led_builtin = mln_gpio(PB3, OUTPUT);
     614:	00 e0       	ldi	r16, 0x00	; 0
     616:	20 e0       	ldi	r18, 0x00	; 0
     618:	40 e2       	ldi	r20, 0x20	; 32
     61a:	54 e0       	ldi	r21, 0x04	; 4
     61c:	63 e0       	ldi	r22, 0x03	; 3
     61e:	83 e6       	ldi	r24, 0x63	; 99
     620:	90 e4       	ldi	r25, 0x40	; 64
     622:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>

mln_timer led_timer = mln_timer(TIMER0, 250);
     626:	4a ef       	ldi	r20, 0xFA	; 250
     628:	50 e0       	ldi	r21, 0x00	; 0
     62a:	60 e0       	ldi	r22, 0x00	; 0
     62c:	8b e5       	ldi	r24, 0x5B	; 91
     62e:	90 e4       	ldi	r25, 0x40	; 64
     630:	0e 94 6e 04 	call	0x8dc	; 0x8dc <_ZN9mln_timerC1E16mln_timer_inst_ej>

mln_vref vref;
mcp4822 dac = mcp4822(&SPI0, PC7, PC3);
     634:	68 94       	set
     636:	ee 24       	eor	r14, r14
     638:	e6 f8       	bld	r14, 6
     63a:	68 94       	set
     63c:	ff 24       	eor	r15, r15
     63e:	f2 f8       	bld	r15, 2
     640:	03 e0       	ldi	r16, 0x03	; 3
     642:	20 e4       	ldi	r18, 0x40	; 64
     644:	34 e0       	ldi	r19, 0x04	; 4
     646:	47 e0       	ldi	r20, 0x07	; 7
     648:	60 e4       	ldi	r22, 0x40	; 64
     64a:	79 e0       	ldi	r23, 0x09	; 9
     64c:	8b e4       	ldi	r24, 0x4B	; 75
     64e:	90 e4       	ldi	r25, 0x40	; 64
     650:	0e 94 a7 00 	call	0x14e	; 0x14e <_ZN7mcp4822C1EP10SPI_struct14mln_gpio_pin_sS2_>
mln_dac dac_intern = mln_dac();
mln_adc adc = mln_adc();
     654:	82 e4       	ldi	r24, 0x42	; 66
     656:	90 e4       	ldi	r25, 0x40	; 64
     658:	0e 94 40 01 	call	0x280	; 0x280 <_ZN7mln_adcC1Ev>
	while (1)
	{
		dac.write(CHANNELA, dac_value);
		dac.write(CHANNELB, 4095 - dac_value);
    }
}
     65c:	0f 91       	pop	r16
     65e:	ff 90       	pop	r15
     660:	ef 90       	pop	r14
     662:	08 95       	ret

00000664 <main>:
{
	bool standby = false;

	void config(bool new_standby)
	{
		standby = new_standby;
     664:	81 e0       	ldi	r24, 0x01	; 1
     666:	80 93 5a 40 	sts	0x405A, r24	; 0x80405a <vref>
	bool standby = false;
	bool buffer = false;

	void config(bool new_standby, bool new_buffer)
	{
		standby = new_standby;
     66a:	c9 e4       	ldi	r28, 0x49	; 73
     66c:	d0 e4       	ldi	r29, 0x40	; 64
     66e:	88 83       	st	Y, r24
		buffer = new_buffer;
     670:	19 82       	std	Y+1, r1	; 0x01
int main(void)
{
	vref.config(true);
	dac_intern.config(true, false);

	led_timer.set_isr(led_task);
     672:	66 e8       	ldi	r22, 0x86	; 134
     674:	72 e0       	ldi	r23, 0x02	; 2
     676:	8b e5       	ldi	r24, 0x5B	; 91
     678:	90 e4       	ldi	r25, 0x40	; 64
     67a:	0e 94 e5 04 	call	0x9ca	; 0x9ca <_ZN9mln_timer7set_isrEPFvvE>
	}

	void set(VREF_SEL_t dac, VREF_SEL_t adc)
	{
		VREF.DAC0REF = (standby << 7) | dac;
     67e:	80 91 5a 40 	lds	r24, 0x405A	; 0x80405a <vref>
     682:	20 e8       	ldi	r18, 0x80	; 128
     684:	82 9f       	mul	r24, r18
     686:	c0 01       	movw	r24, r0
     688:	11 24       	eor	r1, r1
     68a:	81 60       	ori	r24, 0x01	; 1
     68c:	e0 eb       	ldi	r30, 0xB0	; 176
     68e:	f0 e0       	ldi	r31, 0x00	; 0
     690:	82 83       	std	Z+2, r24	; 0x02
		VREF.ADC0REF = (standby << 7) | adc;
     692:	80 83       	st	Z, r24
	vref.set(_2V048, _2V048);
	dac.set_gain(GAIN1);
     694:	61 e0       	ldi	r22, 0x01	; 1
     696:	8b e4       	ldi	r24, 0x4B	; 75
     698:	90 e4       	ldi	r25, 0x40	; 64
     69a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_ZN7mcp48228set_gainE14mln_spi_gain_s>

	adc.enable(true);
     69e:	61 e0       	ldi	r22, 0x01	; 1
     6a0:	82 e4       	ldi	r24, 0x42	; 66
     6a2:	90 e4       	ldi	r25, 0x40	; 64
     6a4:	0e 94 4f 01 	call	0x29e	; 0x29e <_ZN7mln_adc6enableEb>
	}

	void start(void)
	{
		DAC0.CTRLA |= 0x01;
     6a8:	e0 ea       	ldi	r30, 0xA0	; 160
     6aa:	f6 e0       	ldi	r31, 0x06	; 6
     6ac:	80 81       	ld	r24, Z
     6ae:	81 60       	ori	r24, 0x01	; 1
     6b0:	80 83       	st	Z, r24

		buffer ? (DAC0.CTRLA |= 0x40) : (DAC0.CTRLA &= ~0x40);
     6b2:	89 81       	ldd	r24, Y+1	; 0x01
     6b4:	88 23       	and	r24, r24
     6b6:	21 f0       	breq	.+8      	; 0x6c0 <main+0x5c>
     6b8:	80 81       	ld	r24, Z
     6ba:	80 64       	ori	r24, 0x40	; 64
     6bc:	80 83       	st	Z, r24
     6be:	05 c0       	rjmp	.+10     	; 0x6ca <main+0x66>
     6c0:	e0 ea       	ldi	r30, 0xA0	; 160
     6c2:	f6 e0       	ldi	r31, 0x06	; 6
     6c4:	80 81       	ld	r24, Z
     6c6:	8f 7b       	andi	r24, 0xBF	; 191
     6c8:	80 83       	st	Z, r24
		standby ? (DAC0.CTRLA |= 0x80) : (DAC0.CTRLA &= ~0x80);
     6ca:	80 91 49 40 	lds	r24, 0x4049	; 0x804049 <dac_intern>
     6ce:	88 23       	and	r24, r24
     6d0:	31 f0       	breq	.+12     	; 0x6de <main+0x7a>
     6d2:	e0 ea       	ldi	r30, 0xA0	; 160
     6d4:	f6 e0       	ldi	r31, 0x06	; 6
     6d6:	80 81       	ld	r24, Z
     6d8:	80 68       	ori	r24, 0x80	; 128
     6da:	80 83       	st	Z, r24
     6dc:	05 c0       	rjmp	.+10     	; 0x6e8 <main+0x84>
     6de:	e0 ea       	ldi	r30, 0xA0	; 160
     6e0:	f6 e0       	ldi	r31, 0x06	; 6
     6e2:	80 81       	ld	r24, Z
     6e4:	8f 77       	andi	r24, 0x7F	; 127
     6e6:	80 83       	st	Z, r24
	dac_intern.start();
	led_timer.start();
     6e8:	8b e5       	ldi	r24, 0x5B	; 91
     6ea:	90 e4       	ldi	r25, 0x40	; 64
     6ec:	0e 94 f7 04 	call	0x9ee	; 0x9ee <_ZN9mln_timer5startEv>

	sei();
     6f0:	78 94       	sei

	while (1)
	{
		dac.write(CHANNELA, dac_value);
     6f2:	40 91 40 40 	lds	r20, 0x4040	; 0x804040 <__data_end>
     6f6:	50 91 41 40 	lds	r21, 0x4041	; 0x804041 <__data_end+0x1>
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	8b e4       	ldi	r24, 0x4B	; 75
     6fe:	90 e4       	ldi	r25, 0x40	; 64
     700:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7mcp48225writeE17mln_spi_channel_sj>
		dac.write(CHANNELB, 4095 - dac_value);
     704:	80 91 40 40 	lds	r24, 0x4040	; 0x804040 <__data_end>
     708:	90 91 41 40 	lds	r25, 0x4041	; 0x804041 <__data_end+0x1>
     70c:	4f ef       	ldi	r20, 0xFF	; 255
     70e:	5f e0       	ldi	r21, 0x0F	; 15
     710:	48 1b       	sub	r20, r24
     712:	59 0b       	sbc	r21, r25
     714:	61 e0       	ldi	r22, 0x01	; 1
     716:	8b e4       	ldi	r24, 0x4B	; 75
     718:	90 e4       	ldi	r25, 0x40	; 64
     71a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7mcp48225writeE17mln_spi_channel_sj>
     71e:	e9 cf       	rjmp	.-46     	; 0x6f2 <main+0x8e>

00000720 <_GLOBAL__sub_I_uart>:
    }
}
     720:	6f ef       	ldi	r22, 0xFF	; 255
     722:	7f ef       	ldi	r23, 0xFF	; 255
     724:	81 e0       	ldi	r24, 0x01	; 1
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <_Z41__static_initialization_and_destruction_0ii>
     72c:	08 95       	ret

0000072e <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s>:
		*buffer = spi->DATA;
		buffer++;
	}

	cs.clear();
}
     72e:	6f 92       	push	r6
     730:	7f 92       	push	r7
     732:	8f 92       	push	r8
     734:	cf 92       	push	r12
     736:	df 92       	push	r13
     738:	ef 92       	push	r14
     73a:	ff 92       	push	r15
     73c:	0f 93       	push	r16
     73e:	1f 93       	push	r17
     740:	cf 93       	push	r28
     742:	df 93       	push	r29
     744:	cd b7       	in	r28, 0x3d	; 61
     746:	de b7       	in	r29, 0x3e	; 62
     748:	64 97       	sbiw	r28, 0x14	; 20
     74a:	cd bf       	out	0x3d, r28	; 61
     74c:	de bf       	out	0x3e, r29	; 62
     74e:	7c 01       	movw	r14, r24
     750:	8b 01       	movw	r16, r22
     752:	39 01       	movw	r6, r18
     754:	84 2e       	mov	r8, r20
     756:	6c 01       	movw	r12, r24
     758:	22 e0       	ldi	r18, 0x02	; 2
     75a:	c2 0e       	add	r12, r18
     75c:	d1 1c       	adc	r13, r1
     75e:	c6 01       	movw	r24, r12
     760:	0e 94 ef 01 	call	0x3de	; 0x3de <_ZN8mln_gpioC1Ev>
     764:	d7 01       	movw	r26, r14
     766:	0d 93       	st	X+, r16
     768:	1c 93       	st	X, r17
     76a:	00 e0       	ldi	r16, 0x00	; 0
     76c:	20 e0       	ldi	r18, 0x00	; 0
     76e:	68 2d       	mov	r22, r8
     770:	a3 01       	movw	r20, r6
     772:	ce 01       	movw	r24, r28
     774:	40 96       	adiw	r24, 0x10	; 16
     776:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     77a:	85 e0       	ldi	r24, 0x05	; 5
     77c:	fe 01       	movw	r30, r28
     77e:	70 96       	adiw	r30, 0x10	; 16
     780:	d6 01       	movw	r26, r12
     782:	01 90       	ld	r0, Z+
     784:	0d 92       	st	X+, r0
     786:	8a 95       	dec	r24
     788:	e1 f7       	brne	.-8      	; 0x782 <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0x54>
     78a:	f7 01       	movw	r30, r14
     78c:	80 81       	ld	r24, Z
     78e:	91 81       	ldd	r25, Z+1	; 0x01
     790:	80 34       	cpi	r24, 0x40	; 64
     792:	99 40       	sbci	r25, 0x09	; 9
     794:	21 f4       	brne	.+8      	; 0x79e <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0x70>
     796:	40 e0       	ldi	r20, 0x00	; 0
     798:	54 e0       	ldi	r21, 0x04	; 4
     79a:	64 e0       	ldi	r22, 0x04	; 4
     79c:	03 c0       	rjmp	.+6      	; 0x7a4 <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0x76>
     79e:	40 e4       	ldi	r20, 0x40	; 64
     7a0:	54 e0       	ldi	r21, 0x04	; 4
     7a2:	60 e0       	ldi	r22, 0x00	; 0
     7a4:	00 e0       	ldi	r16, 0x00	; 0
     7a6:	20 e0       	ldi	r18, 0x00	; 0
     7a8:	ce 01       	movw	r24, r28
     7aa:	0b 96       	adiw	r24, 0x0b	; 11
     7ac:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     7b0:	d7 01       	movw	r26, r14
     7b2:	8d 91       	ld	r24, X+
     7b4:	9c 91       	ld	r25, X
     7b6:	80 34       	cpi	r24, 0x40	; 64
     7b8:	99 40       	sbci	r25, 0x09	; 9
     7ba:	21 f4       	brne	.+8      	; 0x7c4 <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0x96>
     7bc:	40 e0       	ldi	r20, 0x00	; 0
     7be:	54 e0       	ldi	r21, 0x04	; 4
     7c0:	65 e0       	ldi	r22, 0x05	; 5
     7c2:	03 c0       	rjmp	.+6      	; 0x7ca <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0x9c>
     7c4:	40 e4       	ldi	r20, 0x40	; 64
     7c6:	54 e0       	ldi	r21, 0x04	; 4
     7c8:	61 e0       	ldi	r22, 0x01	; 1
     7ca:	00 e0       	ldi	r16, 0x00	; 0
     7cc:	21 e0       	ldi	r18, 0x01	; 1
     7ce:	ce 01       	movw	r24, r28
     7d0:	06 96       	adiw	r24, 0x06	; 6
     7d2:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     7d6:	f7 01       	movw	r30, r14
     7d8:	80 81       	ld	r24, Z
     7da:	91 81       	ldd	r25, Z+1	; 0x01
     7dc:	80 34       	cpi	r24, 0x40	; 64
     7de:	99 40       	sbci	r25, 0x09	; 9
     7e0:	21 f4       	brne	.+8      	; 0x7ea <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0xbc>
     7e2:	40 e0       	ldi	r20, 0x00	; 0
     7e4:	54 e0       	ldi	r21, 0x04	; 4
     7e6:	66 e0       	ldi	r22, 0x06	; 6
     7e8:	03 c0       	rjmp	.+6      	; 0x7f0 <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0xc2>
     7ea:	40 e4       	ldi	r20, 0x40	; 64
     7ec:	54 e0       	ldi	r21, 0x04	; 4
     7ee:	62 e0       	ldi	r22, 0x02	; 2
     7f0:	00 e0       	ldi	r16, 0x00	; 0
     7f2:	20 e0       	ldi	r18, 0x00	; 0
     7f4:	ce 01       	movw	r24, r28
     7f6:	01 96       	adiw	r24, 0x01	; 1
     7f8:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     7fc:	d7 01       	movw	r26, r14
     7fe:	ed 91       	ld	r30, X+
     800:	fc 91       	ld	r31, X
     802:	81 e3       	ldi	r24, 0x31	; 49
     804:	80 83       	st	Z, r24
     806:	64 96       	adiw	r28, 0x14	; 20
     808:	cd bf       	out	0x3d, r28	; 61
     80a:	de bf       	out	0x3e, r29	; 62
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	1f 91       	pop	r17
     812:	0f 91       	pop	r16
     814:	ff 90       	pop	r15
     816:	ef 90       	pop	r14
     818:	df 90       	pop	r13
     81a:	cf 90       	pop	r12
     81c:	8f 90       	pop	r8
     81e:	7f 90       	pop	r7
     820:	6f 90       	pop	r6
     822:	08 95       	ret

00000824 <_ZN7mln_spiC1Ev>:
     824:	02 96       	adiw	r24, 0x02	; 2
     826:	0e 94 ef 01 	call	0x3de	; 0x3de <_ZN8mln_gpioC1Ev>
     82a:	08 95       	ret

0000082c <_ZN7mln_spi5writeEPhh>:

void mln_spi::write(uint8_t *buffer, uint8_t length)
{
     82c:	cf 92       	push	r12
     82e:	df 92       	push	r13
     830:	ef 92       	push	r14
     832:	ff 92       	push	r15
     834:	1f 93       	push	r17
     836:	cf 93       	push	r28
     838:	df 93       	push	r29
     83a:	ec 01       	movw	r28, r24
     83c:	7b 01       	movw	r14, r22
     83e:	14 2f       	mov	r17, r20
	cs.clear();
     840:	6c 01       	movw	r12, r24
     842:	82 e0       	ldi	r24, 0x02	; 2
     844:	c8 0e       	add	r12, r24
     846:	d1 1c       	adc	r13, r1
     848:	c6 01       	movw	r24, r12
     84a:	0e 94 56 02 	call	0x4ac	; 0x4ac <_ZN8mln_gpio5clearEv>

	while (length--)
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	91 0f       	add	r25, r17
     852:	11 23       	and	r17, r17
     854:	69 f0       	breq	.+26     	; 0x870 <_ZN7mln_spi5writeEPhh+0x44>
	{
		spi->DATA = *buffer;
     856:	e8 81       	ld	r30, Y
     858:	f9 81       	ldd	r31, Y+1	; 0x01
     85a:	d7 01       	movw	r26, r14
     85c:	8d 91       	ld	r24, X+
     85e:	7d 01       	movw	r14, r26
     860:	84 83       	std	Z+4, r24	; 0x04
		buffer++;
		while (!(spi->INTFLAGS & SPI_RXCIF_bm))
     862:	e8 81       	ld	r30, Y
     864:	f9 81       	ldd	r31, Y+1	; 0x01
     866:	83 81       	ldd	r24, Z+3	; 0x03
     868:	88 23       	and	r24, r24
     86a:	dc f7       	brge	.-10     	; 0x862 <_ZN7mln_spi5writeEPhh+0x36>

void mln_spi::write(uint8_t *buffer, uint8_t length)
{
	cs.clear();

	while (length--)
     86c:	19 2f       	mov	r17, r25
     86e:	ef cf       	rjmp	.-34     	; 0x84e <_ZN7mln_spi5writeEPhh+0x22>
		buffer++;
		while (!(spi->INTFLAGS & SPI_RXCIF_bm))
			;
	}

	cs.set();
     870:	c6 01       	movw	r24, r12
     872:	0e 94 38 02 	call	0x470	; 0x470 <_ZN8mln_gpio3setEv>
}
     876:	df 91       	pop	r29
     878:	cf 91       	pop	r28
     87a:	1f 91       	pop	r17
     87c:	ff 90       	pop	r15
     87e:	ef 90       	pop	r14
     880:	df 90       	pop	r13
     882:	cf 90       	pop	r12
     884:	08 95       	ret

00000886 <_Z17MLN_TIMER_GET_DIVj>:
}

float mln_timer::get_period(void)
{
	return actual_period;
}
     886:	0f 93       	push	r16
     888:	1f 93       	push	r17
     88a:	cf 93       	push	r28
     88c:	8c 01       	movw	r16, r24
     88e:	c0 e0       	ldi	r28, 0x00	; 0
     890:	ec 2f       	mov	r30, r28
     892:	f0 e0       	ldi	r31, 0x00	; 0
     894:	ee 0f       	add	r30, r30
     896:	ff 1f       	adc	r31, r31
     898:	e1 5d       	subi	r30, 0xD1	; 209
     89a:	ff 4b       	sbci	r31, 0xBF	; 191
     89c:	a0 81       	ld	r26, Z
     89e:	b1 81       	ldd	r27, Z+1	; 0x01
     8a0:	28 e1       	ldi	r18, 0x18	; 24
     8a2:	3c ef       	ldi	r19, 0xFC	; 252
     8a4:	47 ee       	ldi	r20, 0xE7	; 231
     8a6:	53 e0       	ldi	r21, 0x03	; 3
     8a8:	0e 94 b9 09 	call	0x1372	; 0x1372 <__muluhisi3>
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	39 e0       	ldi	r19, 0x09	; 9
     8b0:	4d e3       	ldi	r20, 0x3D	; 61
     8b2:	50 e0       	ldi	r21, 0x00	; 0
     8b4:	0e 94 97 09 	call	0x132e	; 0x132e <__udivmodsi4>
     8b8:	c8 01       	movw	r24, r16
     8ba:	a0 e0       	ldi	r26, 0x00	; 0
     8bc:	b0 e0       	ldi	r27, 0x00	; 0
     8be:	28 17       	cp	r18, r24
     8c0:	39 07       	cpc	r19, r25
     8c2:	4a 07       	cpc	r20, r26
     8c4:	5b 07       	cpc	r21, r27
     8c6:	28 f4       	brcc	.+10     	; 0x8d2 <_Z17MLN_TIMER_GET_DIVj+0x4c>
     8c8:	cf 5f       	subi	r28, 0xFF	; 255
     8ca:	c8 30       	cpi	r28, 0x08	; 8
     8cc:	09 f7       	brne	.-62     	; 0x890 <_Z17MLN_TIMER_GET_DIVj+0xa>
     8ce:	8f ef       	ldi	r24, 0xFF	; 255
     8d0:	01 c0       	rjmp	.+2      	; 0x8d4 <_Z17MLN_TIMER_GET_DIVj+0x4e>
     8d2:	8c 2f       	mov	r24, r28
     8d4:	cf 91       	pop	r28
     8d6:	1f 91       	pop	r17
     8d8:	0f 91       	pop	r16
     8da:	08 95       	ret

000008dc <_ZN9mln_timerC1E16mln_timer_inst_ej>:
     8dc:	8f 92       	push	r8
     8de:	9f 92       	push	r9
     8e0:	af 92       	push	r10
     8e2:	bf 92       	push	r11
     8e4:	ff 92       	push	r15
     8e6:	0f 93       	push	r16
     8e8:	1f 93       	push	r17
     8ea:	cf 93       	push	r28
     8ec:	df 93       	push	r29
     8ee:	ec 01       	movw	r28, r24
     8f0:	8a 01       	movw	r16, r20
     8f2:	61 11       	cpse	r22, r1
     8f4:	05 c0       	rjmp	.+10     	; 0x900 <_ZN9mln_timerC1E16mln_timer_inst_ej+0x24>
     8f6:	80 e0       	ldi	r24, 0x00	; 0
     8f8:	9a e0       	ldi	r25, 0x0A	; 10
     8fa:	88 83       	st	Y, r24
     8fc:	99 83       	std	Y+1, r25	; 0x01
     8fe:	04 c0       	rjmp	.+8      	; 0x908 <_ZN9mln_timerC1E16mln_timer_inst_ej+0x2c>
     900:	80 e4       	ldi	r24, 0x40	; 64
     902:	9a e0       	ldi	r25, 0x0A	; 10
     904:	88 83       	st	Y, r24
     906:	99 83       	std	Y+1, r25	; 0x01
     908:	c8 01       	movw	r24, r16
     90a:	0e 94 43 04 	call	0x886	; 0x886 <_Z17MLN_TIMER_GET_DIVj>
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	fc 01       	movw	r30, r24
     912:	e9 5d       	subi	r30, 0xD9	; 217
     914:	ff 4b       	sbci	r31, 0xBF	; 191
     916:	f0 80       	ld	r15, Z
     918:	88 0f       	add	r24, r24
     91a:	99 1f       	adc	r25, r25
     91c:	fc 01       	movw	r30, r24
     91e:	e1 5d       	subi	r30, 0xD1	; 209
     920:	ff 4b       	sbci	r31, 0xBF	; 191
     922:	a0 81       	ld	r26, Z
     924:	b1 81       	ldd	r27, Z+1	; 0x01
     926:	28 e1       	ldi	r18, 0x18	; 24
     928:	3c ef       	ldi	r19, 0xFC	; 252
     92a:	47 ee       	ldi	r20, 0xE7	; 231
     92c:	53 e0       	ldi	r21, 0x03	; 3
     92e:	0e 94 b9 09 	call	0x1372	; 0x1372 <__muluhisi3>
     932:	20 e0       	ldi	r18, 0x00	; 0
     934:	39 e0       	ldi	r19, 0x09	; 9
     936:	4d e3       	ldi	r20, 0x3D	; 61
     938:	50 e0       	ldi	r21, 0x00	; 0
     93a:	0e 94 97 09 	call	0x132e	; 0x132e <__udivmodsi4>
     93e:	ca 01       	movw	r24, r20
     940:	b9 01       	movw	r22, r18
     942:	0e 94 9c 08 	call	0x1138	; 0x1138 <__floatunsisf>
     946:	4b 01       	movw	r8, r22
     948:	5c 01       	movw	r10, r24
     94a:	b8 01       	movw	r22, r16
     94c:	80 e0       	ldi	r24, 0x00	; 0
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	0e 94 9c 08 	call	0x1138	; 0x1138 <__floatunsisf>
     954:	a5 01       	movw	r20, r10
     956:	94 01       	movw	r18, r8
     958:	0e 94 fb 07 	call	0xff6	; 0xff6 <__divsf3>
     95c:	20 e0       	ldi	r18, 0x00	; 0
     95e:	3f ef       	ldi	r19, 0xFF	; 255
     960:	4f e7       	ldi	r20, 0x7F	; 127
     962:	57 e4       	ldi	r21, 0x47	; 71
     964:	0e 94 2a 09 	call	0x1254	; 0x1254 <__mulsf3>
     968:	0e 94 6d 08 	call	0x10da	; 0x10da <__fixunssfsi>
     96c:	e8 81       	ld	r30, Y
     96e:	f9 81       	ldd	r31, Y+1	; 0x01
     970:	21 e0       	ldi	r18, 0x01	; 1
     972:	22 87       	std	Z+10, r18	; 0x0a
     974:	e8 81       	ld	r30, Y
     976:	f9 81       	ldd	r31, Y+1	; 0x01
     978:	66 a3       	std	Z+38, r22	; 0x26
     97a:	77 a3       	std	Z+39, r23	; 0x27
     97c:	e8 81       	ld	r30, Y
     97e:	f9 81       	ldd	r31, Y+1	; 0x01
     980:	20 e8       	ldi	r18, 0x80	; 128
     982:	20 83       	st	Z, r18
     984:	e8 81       	ld	r30, Y
     986:	f9 81       	ldd	r31, Y+1	; 0x01
     988:	20 81       	ld	r18, Z
     98a:	f2 2a       	or	r15, r18
     98c:	f0 82       	st	Z, r15
     98e:	80 e0       	ldi	r24, 0x00	; 0
     990:	90 e0       	ldi	r25, 0x00	; 0
     992:	0e 94 9c 08 	call	0x1138	; 0x1138 <__floatunsisf>
     996:	20 e0       	ldi	r18, 0x00	; 0
     998:	3f ef       	ldi	r19, 0xFF	; 255
     99a:	4f e7       	ldi	r20, 0x7F	; 127
     99c:	57 e4       	ldi	r21, 0x47	; 71
     99e:	0e 94 fb 07 	call	0xff6	; 0xff6 <__divsf3>
     9a2:	9b 01       	movw	r18, r22
     9a4:	ac 01       	movw	r20, r24
     9a6:	c5 01       	movw	r24, r10
     9a8:	b4 01       	movw	r22, r8
     9aa:	0e 94 2a 09 	call	0x1254	; 0x1254 <__mulsf3>
     9ae:	6a 83       	std	Y+2, r22	; 0x02
     9b0:	7b 83       	std	Y+3, r23	; 0x03
     9b2:	8c 83       	std	Y+4, r24	; 0x04
     9b4:	9d 83       	std	Y+5, r25	; 0x05
     9b6:	df 91       	pop	r29
     9b8:	cf 91       	pop	r28
     9ba:	1f 91       	pop	r17
     9bc:	0f 91       	pop	r16
     9be:	ff 90       	pop	r15
     9c0:	bf 90       	pop	r11
     9c2:	af 90       	pop	r10
     9c4:	9f 90       	pop	r9
     9c6:	8f 90       	pop	r8
     9c8:	08 95       	ret

000009ca <_ZN9mln_timer7set_isrEPFvvE>:
     9ca:	fc 01       	movw	r30, r24
     9cc:	66 83       	std	Z+6, r22	; 0x06
     9ce:	77 83       	std	Z+7, r23	; 0x07
     9d0:	20 81       	ld	r18, Z
     9d2:	31 81       	ldd	r19, Z+1	; 0x01
     9d4:	21 15       	cp	r18, r1
     9d6:	3a 40       	sbci	r19, 0x0A	; 10
     9d8:	29 f4       	brne	.+10     	; 0x9e4 <_ZN9mln_timer7set_isrEPFvvE+0x1a>
     9da:	80 93 a7 40 	sts	0x40A7, r24	; 0x8040a7 <timer0_isr>
     9de:	90 93 a8 40 	sts	0x40A8, r25	; 0x8040a8 <timer0_isr+0x1>
     9e2:	08 95       	ret
     9e4:	80 93 a5 40 	sts	0x40A5, r24	; 0x8040a5 <timer1_isr>
     9e8:	90 93 a6 40 	sts	0x40A6, r25	; 0x8040a6 <timer1_isr+0x1>
     9ec:	08 95       	ret

000009ee <_ZN9mln_timer5startEv>:
     9ee:	dc 01       	movw	r26, r24
     9f0:	ed 91       	ld	r30, X+
     9f2:	fc 91       	ld	r31, X
     9f4:	80 81       	ld	r24, Z
     9f6:	81 60       	ori	r24, 0x01	; 1
     9f8:	80 83       	st	Z, r24
     9fa:	08 95       	ret

000009fc <__vector_9>:

ISR(TCA0_OVF_vect)
{
     9fc:	1f 92       	push	r1
     9fe:	0f 92       	push	r0
     a00:	0f b6       	in	r0, 0x3f	; 63
     a02:	0f 92       	push	r0
     a04:	11 24       	eor	r1, r1
     a06:	0b b6       	in	r0, 0x3b	; 59
     a08:	0f 92       	push	r0
     a0a:	2f 93       	push	r18
     a0c:	3f 93       	push	r19
     a0e:	4f 93       	push	r20
     a10:	5f 93       	push	r21
     a12:	6f 93       	push	r22
     a14:	7f 93       	push	r23
     a16:	8f 93       	push	r24
     a18:	9f 93       	push	r25
     a1a:	af 93       	push	r26
     a1c:	bf 93       	push	r27
     a1e:	ef 93       	push	r30
     a20:	ff 93       	push	r31
	if(timer0_isr->isr)
     a22:	e0 91 a7 40 	lds	r30, 0x40A7	; 0x8040a7 <timer0_isr>
     a26:	f0 91 a8 40 	lds	r31, 0x40A8	; 0x8040a8 <timer0_isr+0x1>
     a2a:	06 80       	ldd	r0, Z+6	; 0x06
     a2c:	f7 81       	ldd	r31, Z+7	; 0x07
     a2e:	e0 2d       	mov	r30, r0
     a30:	30 97       	sbiw	r30, 0x00	; 0
     a32:	09 f0       	breq	.+2      	; 0xa36 <__vector_9+0x3a>
		timer0_isr->isr();
     a34:	09 95       	icall
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
     a36:	81 e0       	ldi	r24, 0x01	; 1
     a38:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
}
     a3c:	ff 91       	pop	r31
     a3e:	ef 91       	pop	r30
     a40:	bf 91       	pop	r27
     a42:	af 91       	pop	r26
     a44:	9f 91       	pop	r25
     a46:	8f 91       	pop	r24
     a48:	7f 91       	pop	r23
     a4a:	6f 91       	pop	r22
     a4c:	5f 91       	pop	r21
     a4e:	4f 91       	pop	r20
     a50:	3f 91       	pop	r19
     a52:	2f 91       	pop	r18
     a54:	0f 90       	pop	r0
     a56:	0b be       	out	0x3b, r0	; 59
     a58:	0f 90       	pop	r0
     a5a:	0f be       	out	0x3f, r0	; 63
     a5c:	0f 90       	pop	r0
     a5e:	1f 90       	pop	r1
     a60:	18 95       	reti

00000a62 <__vector_47>:

#ifdef TCA1
ISR(TCA1_OVF_vect)
{
     a62:	1f 92       	push	r1
     a64:	0f 92       	push	r0
     a66:	0f b6       	in	r0, 0x3f	; 63
     a68:	0f 92       	push	r0
     a6a:	11 24       	eor	r1, r1
     a6c:	0b b6       	in	r0, 0x3b	; 59
     a6e:	0f 92       	push	r0
     a70:	2f 93       	push	r18
     a72:	3f 93       	push	r19
     a74:	4f 93       	push	r20
     a76:	5f 93       	push	r21
     a78:	6f 93       	push	r22
     a7a:	7f 93       	push	r23
     a7c:	8f 93       	push	r24
     a7e:	9f 93       	push	r25
     a80:	af 93       	push	r26
     a82:	bf 93       	push	r27
     a84:	ef 93       	push	r30
     a86:	ff 93       	push	r31
	if(timer1_isr->isr)
     a88:	e0 91 a5 40 	lds	r30, 0x40A5	; 0x8040a5 <timer1_isr>
     a8c:	f0 91 a6 40 	lds	r31, 0x40A6	; 0x8040a6 <timer1_isr+0x1>
     a90:	06 80       	ldd	r0, Z+6	; 0x06
     a92:	f7 81       	ldd	r31, Z+7	; 0x07
     a94:	e0 2d       	mov	r30, r0
     a96:	30 97       	sbiw	r30, 0x00	; 0
     a98:	09 f0       	breq	.+2      	; 0xa9c <__vector_47+0x3a>
		timer1_isr->isr();
     a9a:	09 95       	icall
		
	TCA1.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
     a9c:	81 e0       	ldi	r24, 0x01	; 1
     a9e:	80 93 4b 0a 	sts	0x0A4B, r24	; 0x800a4b <__TEXT_REGION_LENGTH__+0x7e0a4b>
}
     aa2:	ff 91       	pop	r31
     aa4:	ef 91       	pop	r30
     aa6:	bf 91       	pop	r27
     aa8:	af 91       	pop	r26
     aaa:	9f 91       	pop	r25
     aac:	8f 91       	pop	r24
     aae:	7f 91       	pop	r23
     ab0:	6f 91       	pop	r22
     ab2:	5f 91       	pop	r21
     ab4:	4f 91       	pop	r20
     ab6:	3f 91       	pop	r19
     ab8:	2f 91       	pop	r18
     aba:	0f 90       	pop	r0
     abc:	0b be       	out	0x3b, r0	; 59
     abe:	0f 90       	pop	r0
     ac0:	0f be       	out	0x3f, r0	; 63
     ac2:	0f 90       	pop	r0
     ac4:	1f 90       	pop	r1
     ac6:	18 95       	reti

00000ac8 <_Z17MLN_UART_TO_USART15mln_uart_inst_e>:

//////////////////////////////////////////////////////////////////////////

void mln_uart::set_isr(void (*new_isr)(void))
{
	isr = new_isr;
     ac8:	82 30       	cpi	r24, 0x02	; 2
     aca:	59 f0       	breq	.+22     	; 0xae2 <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0x1a>
     acc:	18 f4       	brcc	.+6      	; 0xad4 <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0xc>
     ace:	81 30       	cpi	r24, 0x01	; 1
     ad0:	89 f0       	breq	.+34     	; 0xaf4 <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0x2c>
     ad2:	04 c0       	rjmp	.+8      	; 0xadc <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0x14>
     ad4:	83 30       	cpi	r24, 0x03	; 3
     ad6:	41 f0       	breq	.+16     	; 0xae8 <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0x20>
     ad8:	84 30       	cpi	r24, 0x04	; 4
     ada:	49 f0       	breq	.+18     	; 0xaee <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0x26>
     adc:	80 e0       	ldi	r24, 0x00	; 0
     ade:	98 e0       	ldi	r25, 0x08	; 8
     ae0:	08 95       	ret
     ae2:	80 e4       	ldi	r24, 0x40	; 64
     ae4:	98 e0       	ldi	r25, 0x08	; 8
     ae6:	08 95       	ret
     ae8:	80 e6       	ldi	r24, 0x60	; 96
     aea:	98 e0       	ldi	r25, 0x08	; 8
     aec:	08 95       	ret
     aee:	80 e8       	ldi	r24, 0x80	; 128
     af0:	98 e0       	ldi	r25, 0x08	; 8
     af2:	08 95       	ret
     af4:	80 e2       	ldi	r24, 0x20	; 32
     af6:	98 e0       	ldi	r25, 0x08	; 8
     af8:	08 95       	ret

00000afa <_ZN8mln_uart9init_pinsE15mln_uart_inst_e>:
     afa:	ef 92       	push	r14
     afc:	ff 92       	push	r15
     afe:	0f 93       	push	r16
     b00:	cf 93       	push	r28
     b02:	df 93       	push	r29
     b04:	cd b7       	in	r28, 0x3d	; 61
     b06:	de b7       	in	r29, 0x3e	; 62
     b08:	e2 97       	sbiw	r28, 0x32	; 50
     b0a:	cd bf       	out	0x3d, r28	; 61
     b0c:	de bf       	out	0x3e, r29	; 62
     b0e:	7c 01       	movw	r14, r24
     b10:	62 30       	cpi	r22, 0x02	; 2
     b12:	09 f4       	brne	.+2      	; 0xb16 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x1c>
     b14:	55 c0       	rjmp	.+170    	; 0xbc0 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0xc6>
     b16:	28 f4       	brcc	.+10     	; 0xb22 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x28>
     b18:	66 23       	and	r22, r22
     b1a:	51 f0       	breq	.+20     	; 0xb30 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x36>
     b1c:	61 30       	cpi	r22, 0x01	; 1
     b1e:	61 f1       	breq	.+88     	; 0xb78 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x7e>
     b20:	ba c0       	rjmp	.+372    	; 0xc96 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     b22:	63 30       	cpi	r22, 0x03	; 3
     b24:	09 f4       	brne	.+2      	; 0xb28 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x2e>
     b26:	70 c0       	rjmp	.+224    	; 0xc08 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x10e>
     b28:	64 30       	cpi	r22, 0x04	; 4
     b2a:	09 f4       	brne	.+2      	; 0xb2e <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x34>
     b2c:	91 c0       	rjmp	.+290    	; 0xc50 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x156>
     b2e:	b3 c0       	rjmp	.+358    	; 0xc96 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     b30:	00 e0       	ldi	r16, 0x00	; 0
     b32:	20 e0       	ldi	r18, 0x00	; 0
     b34:	40 e0       	ldi	r20, 0x00	; 0
     b36:	54 e0       	ldi	r21, 0x04	; 4
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	ce 01       	movw	r24, r28
     b3c:	8e 96       	adiw	r24, 0x2e	; 46
     b3e:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     b42:	85 e0       	ldi	r24, 0x05	; 5
     b44:	fe 01       	movw	r30, r28
     b46:	be 96       	adiw	r30, 0x2e	; 46
     b48:	d7 01       	movw	r26, r14
     b4a:	12 96       	adiw	r26, 0x02	; 2
     b4c:	01 90       	ld	r0, Z+
     b4e:	0d 92       	st	X+, r0
     b50:	8a 95       	dec	r24
     b52:	e1 f7       	brne	.-8      	; 0xb4c <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x52>
     b54:	21 e0       	ldi	r18, 0x01	; 1
     b56:	40 e0       	ldi	r20, 0x00	; 0
     b58:	54 e0       	ldi	r21, 0x04	; 4
     b5a:	61 e0       	ldi	r22, 0x01	; 1
     b5c:	ce 01       	movw	r24, r28
     b5e:	89 96       	adiw	r24, 0x29	; 41
     b60:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     b64:	85 e0       	ldi	r24, 0x05	; 5
     b66:	fe 01       	movw	r30, r28
     b68:	b9 96       	adiw	r30, 0x29	; 41
     b6a:	d7 01       	movw	r26, r14
     b6c:	17 96       	adiw	r26, 0x07	; 7
     b6e:	01 90       	ld	r0, Z+
     b70:	0d 92       	st	X+, r0
     b72:	8a 95       	dec	r24
     b74:	e1 f7       	brne	.-8      	; 0xb6e <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x74>
     b76:	8f c0       	rjmp	.+286    	; 0xc96 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     b78:	00 e0       	ldi	r16, 0x00	; 0
     b7a:	20 e0       	ldi	r18, 0x00	; 0
     b7c:	40 e4       	ldi	r20, 0x40	; 64
     b7e:	54 e0       	ldi	r21, 0x04	; 4
     b80:	60 e0       	ldi	r22, 0x00	; 0
     b82:	ce 01       	movw	r24, r28
     b84:	84 96       	adiw	r24, 0x24	; 36
     b86:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     b8a:	85 e0       	ldi	r24, 0x05	; 5
     b8c:	fe 01       	movw	r30, r28
     b8e:	b4 96       	adiw	r30, 0x24	; 36
     b90:	d7 01       	movw	r26, r14
     b92:	12 96       	adiw	r26, 0x02	; 2
     b94:	01 90       	ld	r0, Z+
     b96:	0d 92       	st	X+, r0
     b98:	8a 95       	dec	r24
     b9a:	e1 f7       	brne	.-8      	; 0xb94 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x9a>
     b9c:	21 e0       	ldi	r18, 0x01	; 1
     b9e:	40 e4       	ldi	r20, 0x40	; 64
     ba0:	54 e0       	ldi	r21, 0x04	; 4
     ba2:	61 e0       	ldi	r22, 0x01	; 1
     ba4:	ce 01       	movw	r24, r28
     ba6:	4f 96       	adiw	r24, 0x1f	; 31
     ba8:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     bac:	85 e0       	ldi	r24, 0x05	; 5
     bae:	fe 01       	movw	r30, r28
     bb0:	7f 96       	adiw	r30, 0x1f	; 31
     bb2:	d7 01       	movw	r26, r14
     bb4:	17 96       	adiw	r26, 0x07	; 7
     bb6:	01 90       	ld	r0, Z+
     bb8:	0d 92       	st	X+, r0
     bba:	8a 95       	dec	r24
     bbc:	e1 f7       	brne	.-8      	; 0xbb6 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0xbc>
     bbe:	6b c0       	rjmp	.+214    	; 0xc96 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     bc0:	00 e0       	ldi	r16, 0x00	; 0
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	40 ea       	ldi	r20, 0xA0	; 160
     bc6:	54 e0       	ldi	r21, 0x04	; 4
     bc8:	60 e0       	ldi	r22, 0x00	; 0
     bca:	ce 01       	movw	r24, r28
     bcc:	4a 96       	adiw	r24, 0x1a	; 26
     bce:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     bd2:	85 e0       	ldi	r24, 0x05	; 5
     bd4:	fe 01       	movw	r30, r28
     bd6:	7a 96       	adiw	r30, 0x1a	; 26
     bd8:	d7 01       	movw	r26, r14
     bda:	12 96       	adiw	r26, 0x02	; 2
     bdc:	01 90       	ld	r0, Z+
     bde:	0d 92       	st	X+, r0
     be0:	8a 95       	dec	r24
     be2:	e1 f7       	brne	.-8      	; 0xbdc <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0xe2>
     be4:	21 e0       	ldi	r18, 0x01	; 1
     be6:	40 ea       	ldi	r20, 0xA0	; 160
     be8:	54 e0       	ldi	r21, 0x04	; 4
     bea:	61 e0       	ldi	r22, 0x01	; 1
     bec:	ce 01       	movw	r24, r28
     bee:	45 96       	adiw	r24, 0x15	; 21
     bf0:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     bf4:	85 e0       	ldi	r24, 0x05	; 5
     bf6:	fe 01       	movw	r30, r28
     bf8:	75 96       	adiw	r30, 0x15	; 21
     bfa:	d7 01       	movw	r26, r14
     bfc:	17 96       	adiw	r26, 0x07	; 7
     bfe:	01 90       	ld	r0, Z+
     c00:	0d 92       	st	X+, r0
     c02:	8a 95       	dec	r24
     c04:	e1 f7       	brne	.-8      	; 0xbfe <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x104>
     c06:	47 c0       	rjmp	.+142    	; 0xc96 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     c08:	00 e0       	ldi	r16, 0x00	; 0
     c0a:	20 e0       	ldi	r18, 0x00	; 0
     c0c:	40 e2       	ldi	r20, 0x20	; 32
     c0e:	54 e0       	ldi	r21, 0x04	; 4
     c10:	60 e0       	ldi	r22, 0x00	; 0
     c12:	ce 01       	movw	r24, r28
     c14:	40 96       	adiw	r24, 0x10	; 16
     c16:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     c1a:	85 e0       	ldi	r24, 0x05	; 5
     c1c:	fe 01       	movw	r30, r28
     c1e:	70 96       	adiw	r30, 0x10	; 16
     c20:	d7 01       	movw	r26, r14
     c22:	12 96       	adiw	r26, 0x02	; 2
     c24:	01 90       	ld	r0, Z+
     c26:	0d 92       	st	X+, r0
     c28:	8a 95       	dec	r24
     c2a:	e1 f7       	brne	.-8      	; 0xc24 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x12a>
     c2c:	21 e0       	ldi	r18, 0x01	; 1
     c2e:	40 e2       	ldi	r20, 0x20	; 32
     c30:	54 e0       	ldi	r21, 0x04	; 4
     c32:	61 e0       	ldi	r22, 0x01	; 1
     c34:	ce 01       	movw	r24, r28
     c36:	0b 96       	adiw	r24, 0x0b	; 11
     c38:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     c3c:	85 e0       	ldi	r24, 0x05	; 5
     c3e:	fe 01       	movw	r30, r28
     c40:	3b 96       	adiw	r30, 0x0b	; 11
     c42:	d7 01       	movw	r26, r14
     c44:	17 96       	adiw	r26, 0x07	; 7
     c46:	01 90       	ld	r0, Z+
     c48:	0d 92       	st	X+, r0
     c4a:	8a 95       	dec	r24
     c4c:	e1 f7       	brne	.-8      	; 0xc46 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x14c>
     c4e:	23 c0       	rjmp	.+70     	; 0xc96 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     c50:	00 e0       	ldi	r16, 0x00	; 0
     c52:	20 e0       	ldi	r18, 0x00	; 0
     c54:	40 e8       	ldi	r20, 0x80	; 128
     c56:	54 e0       	ldi	r21, 0x04	; 4
     c58:	60 e0       	ldi	r22, 0x00	; 0
     c5a:	ce 01       	movw	r24, r28
     c5c:	06 96       	adiw	r24, 0x06	; 6
     c5e:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     c62:	85 e0       	ldi	r24, 0x05	; 5
     c64:	fe 01       	movw	r30, r28
     c66:	36 96       	adiw	r30, 0x06	; 6
     c68:	d7 01       	movw	r26, r14
     c6a:	12 96       	adiw	r26, 0x02	; 2
     c6c:	01 90       	ld	r0, Z+
     c6e:	0d 92       	st	X+, r0
     c70:	8a 95       	dec	r24
     c72:	e1 f7       	brne	.-8      	; 0xc6c <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x172>
     c74:	21 e0       	ldi	r18, 0x01	; 1
     c76:	40 e8       	ldi	r20, 0x80	; 128
     c78:	54 e0       	ldi	r21, 0x04	; 4
     c7a:	61 e0       	ldi	r22, 0x01	; 1
     c7c:	ce 01       	movw	r24, r28
     c7e:	01 96       	adiw	r24, 0x01	; 1
     c80:	0e 94 2d 02 	call	0x45a	; 0x45a <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     c84:	85 e0       	ldi	r24, 0x05	; 5
     c86:	fe 01       	movw	r30, r28
     c88:	31 96       	adiw	r30, 0x01	; 1
     c8a:	d7 01       	movw	r26, r14
     c8c:	17 96       	adiw	r26, 0x07	; 7
     c8e:	01 90       	ld	r0, Z+
     c90:	0d 92       	st	X+, r0
     c92:	8a 95       	dec	r24
     c94:	e1 f7       	brne	.-8      	; 0xc8e <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x194>
     c96:	e2 96       	adiw	r28, 0x32	; 50
     c98:	cd bf       	out	0x3d, r28	; 61
     c9a:	de bf       	out	0x3e, r29	; 62
     c9c:	df 91       	pop	r29
     c9e:	cf 91       	pop	r28
     ca0:	0f 91       	pop	r16
     ca2:	ff 90       	pop	r15
     ca4:	ef 90       	pop	r14
     ca6:	08 95       	ret

00000ca8 <_ZN8mln_uart11init_streamEv>:
     ca8:	fc 01       	movw	r30, r24
     caa:	80 93 a9 40 	sts	0x40A9, r24	; 0x8040a9 <mln_uart_stream_uart>
     cae:	90 93 aa 40 	sts	0x40AA, r25	; 0x8040aa <mln_uart_stream_uart+0x1>
     cb2:	86 e2       	ldi	r24, 0x26	; 38
     cb4:	97 e0       	ldi	r25, 0x07	; 7
     cb6:	87 ab       	std	Z+55, r24	; 0x37
     cb8:	90 af       	std	Z+56, r25	; 0x38
     cba:	84 e0       	ldi	r24, 0x04	; 4
     cbc:	97 e0       	ldi	r25, 0x07	; 7
     cbe:	85 ab       	std	Z+53, r24	; 0x35
     cc0:	96 ab       	std	Z+54, r25	; 0x36
     cc2:	83 e0       	ldi	r24, 0x03	; 3
     cc4:	80 ab       	std	Z+48, r24	; 0x30
     cc6:	bd 96       	adiw	r30, 0x2d	; 45
     cc8:	ab ea       	ldi	r26, 0xAB	; 171
     cca:	b0 e4       	ldi	r27, 0x40	; 64
     ccc:	12 96       	adiw	r26, 0x02	; 2
     cce:	ed 93       	st	X+, r30
     cd0:	fc 93       	st	X, r31
     cd2:	13 97       	sbiw	r26, 0x03	; 3
     cd4:	ed 93       	st	X+, r30
     cd6:	fc 93       	st	X, r31
     cd8:	08 95       	ret

00000cda <_ZN8mln_uartC1E15mln_uart_inst_em>:
     cda:	cf 92       	push	r12
     cdc:	df 92       	push	r13
     cde:	ef 92       	push	r14
     ce0:	ff 92       	push	r15
     ce2:	0f 93       	push	r16
     ce4:	1f 93       	push	r17
     ce6:	cf 93       	push	r28
     ce8:	df 93       	push	r29
     cea:	ec 01       	movw	r28, r24
     cec:	16 2f       	mov	r17, r22
     cee:	69 01       	movw	r12, r18
     cf0:	7a 01       	movw	r14, r20
     cf2:	02 96       	adiw	r24, 0x02	; 2
     cf4:	0e 94 ef 01 	call	0x3de	; 0x3de <_ZN8mln_gpioC1Ev>
     cf8:	ce 01       	movw	r24, r28
     cfa:	07 96       	adiw	r24, 0x07	; 7
     cfc:	0e 94 ef 01 	call	0x3de	; 0x3de <_ZN8mln_gpioC1Ev>
     d00:	16 30       	cpi	r17, 0x06	; 6
     d02:	d8 f5       	brcc	.+118    	; 0xd7a <_ZN8mln_uartC1E15mln_uart_inst_em+0xa0>
     d04:	fe 01       	movw	r30, r28
     d06:	3c 96       	adiw	r30, 0x0c	; 12
     d08:	80 e2       	ldi	r24, 0x20	; 32
     d0a:	df 01       	movw	r26, r30
     d0c:	1d 92       	st	X+, r1
     d0e:	8a 95       	dec	r24
     d10:	e9 f7       	brne	.-6      	; 0xd0c <_ZN8mln_uartC1E15mln_uart_inst_em+0x32>
     d12:	1c a6       	std	Y+44, r1	; 0x2c
     d14:	81 2f       	mov	r24, r17
     d16:	0e 94 64 05 	call	0xac8	; 0xac8 <_Z17MLN_UART_TO_USART15mln_uart_inst_e>
     d1a:	88 83       	st	Y, r24
     d1c:	99 83       	std	Y+1, r25	; 0x01
     d1e:	61 2f       	mov	r22, r17
     d20:	ce 01       	movw	r24, r28
     d22:	0e 94 7d 05 	call	0xafa	; 0xafa <_ZN8mln_uart9init_pinsE15mln_uart_inst_e>
     d26:	08 81       	ld	r16, Y
     d28:	19 81       	ldd	r17, Y+1	; 0x01
     d2a:	c7 01       	movw	r24, r14
     d2c:	b6 01       	movw	r22, r12
     d2e:	0e 94 9c 08 	call	0x1138	; 0x1138 <__floatunsisf>
     d32:	20 e0       	ldi	r18, 0x00	; 0
     d34:	30 e0       	ldi	r19, 0x00	; 0
     d36:	40 e8       	ldi	r20, 0x80	; 128
     d38:	51 e4       	ldi	r21, 0x41	; 65
     d3a:	0e 94 2a 09 	call	0x1254	; 0x1254 <__mulsf3>
     d3e:	9b 01       	movw	r18, r22
     d40:	ac 01       	movw	r20, r24
     d42:	60 e0       	ldi	r22, 0x00	; 0
     d44:	74 e2       	ldi	r23, 0x24	; 36
     d46:	84 e7       	ldi	r24, 0x74	; 116
     d48:	9d e4       	ldi	r25, 0x4D	; 77
     d4a:	0e 94 fb 07 	call	0xff6	; 0xff6 <__divsf3>
     d4e:	20 e0       	ldi	r18, 0x00	; 0
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	40 e0       	ldi	r20, 0x00	; 0
     d54:	5f e3       	ldi	r21, 0x3F	; 63
     d56:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__addsf3>
     d5a:	0e 94 6d 08 	call	0x10da	; 0x10da <__fixunssfsi>
     d5e:	f8 01       	movw	r30, r16
     d60:	60 87       	std	Z+8, r22	; 0x08
     d62:	71 87       	std	Z+9, r23	; 0x09
     d64:	e8 81       	ld	r30, Y
     d66:	f9 81       	ldd	r31, Y+1	; 0x01
     d68:	80 e8       	ldi	r24, 0x80	; 128
     d6a:	85 83       	std	Z+5, r24	; 0x05
     d6c:	e8 81       	ld	r30, Y
     d6e:	f9 81       	ldd	r31, Y+1	; 0x01
     d70:	80 ec       	ldi	r24, 0xC0	; 192
     d72:	86 83       	std	Z+6, r24	; 0x06
     d74:	ce 01       	movw	r24, r28
     d76:	0e 94 54 06 	call	0xca8	; 0xca8 <_ZN8mln_uart11init_streamEv>
     d7a:	df 91       	pop	r29
     d7c:	cf 91       	pop	r28
     d7e:	1f 91       	pop	r17
     d80:	0f 91       	pop	r16
     d82:	ff 90       	pop	r15
     d84:	ef 90       	pop	r14
     d86:	df 90       	pop	r13
     d88:	cf 90       	pop	r12
     d8a:	08 95       	ret

00000d8c <_ZN8mln_uart4pullEPh>:
	buffer[index] = read();
	index = (index + 1) % MLN_UART_BUF_SIZE;
}

void mln_uart::pull(uint8_t* new_buffer)
{
     d8c:	0f 93       	push	r16
     d8e:	1f 93       	push	r17
     d90:	cf 93       	push	r28
     d92:	df 93       	push	r29
     d94:	8c 01       	movw	r16, r24
     d96:	cb 01       	movw	r24, r22
	memccpy(new_buffer, buffer, 0, MLN_UART_BUF_SIZE);
     d98:	e8 01       	movw	r28, r16
     d9a:	2c 96       	adiw	r28, 0x0c	; 12
     d9c:	20 e2       	ldi	r18, 0x20	; 32
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	40 e0       	ldi	r20, 0x00	; 0
     da2:	50 e0       	ldi	r21, 0x00	; 0
     da4:	be 01       	movw	r22, r28
     da6:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <memccpy>
	index = 0;
     daa:	f8 01       	movw	r30, r16
     dac:	14 a6       	std	Z+44, r1	; 0x2c
	memset(buffer, 0, sizeof(buffer));
     dae:	80 e2       	ldi	r24, 0x20	; 32
     db0:	fe 01       	movw	r30, r28
     db2:	11 92       	st	Z+, r1
     db4:	8a 95       	dec	r24
     db6:	e9 f7       	brne	.-6      	; 0xdb2 <_ZN8mln_uart4pullEPh+0x26>
}
     db8:	df 91       	pop	r29
     dba:	cf 91       	pop	r28
     dbc:	1f 91       	pop	r17
     dbe:	0f 91       	pop	r16
     dc0:	08 95       	ret

00000dc2 <_ZN8mln_uart7run_isrEv>:

void mln_uart::run_isr(void)
{
	isr();
     dc2:	dc 01       	movw	r26, r24
     dc4:	db 96       	adiw	r26, 0x3b	; 59
     dc6:	ed 91       	ld	r30, X+
     dc8:	fc 91       	ld	r31, X
     dca:	dc 97       	sbiw	r26, 0x3c	; 60
     dcc:	09 95       	icall
     dce:	08 95       	ret

00000dd0 <_ZN8mln_uart10is_busy_txEv>:

//////////////////////////////////////////////////////////////////////////

bool mln_uart::is_busy_tx(void)
{
	return !(inst->STATUS & USART_DREIF_bm);
     dd0:	dc 01       	movw	r26, r24
     dd2:	ed 91       	ld	r30, X+
     dd4:	fc 91       	ld	r31, X
     dd6:	84 81       	ldd	r24, Z+4	; 0x04
     dd8:	82 95       	swap	r24
     dda:	86 95       	lsr	r24
     ddc:	87 70       	andi	r24, 0x07	; 7
     dde:	91 e0       	ldi	r25, 0x01	; 1
     de0:	89 27       	eor	r24, r25
}
     de2:	81 70       	andi	r24, 0x01	; 1
     de4:	08 95       	ret

00000de6 <_ZN8mln_uart5writeEh>:
}

//////////////////////////////////////////////////////////////////////////

void mln_uart::write(const uint8_t data)
{
     de6:	1f 93       	push	r17
     de8:	cf 93       	push	r28
     dea:	df 93       	push	r29
     dec:	ec 01       	movw	r28, r24
     dee:	16 2f       	mov	r17, r22
	while(is_busy_tx());
     df0:	ce 01       	movw	r24, r28
     df2:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <_ZN8mln_uart10is_busy_txEv>
     df6:	81 11       	cpse	r24, r1
     df8:	fb cf       	rjmp	.-10     	; 0xdf0 <_ZN8mln_uart5writeEh+0xa>
	
	inst->TXDATAL = data;
     dfa:	e8 81       	ld	r30, Y
     dfc:	f9 81       	ldd	r31, Y+1	; 0x01
     dfe:	12 83       	std	Z+2, r17	; 0x02
}
     e00:	df 91       	pop	r29
     e02:	cf 91       	pop	r28
     e04:	1f 91       	pop	r17
     e06:	08 95       	ret

00000e08 <_Z21mln_uart_stream_writecP6__file>:
	return &USART0;
}

int mln_uart_stream_write(char character, FILE *f)
{
	mln_uart_stream_uart->write(character);
     e08:	68 2f       	mov	r22, r24
     e0a:	80 91 a9 40 	lds	r24, 0x40A9	; 0x8040a9 <mln_uart_stream_uart>
     e0e:	90 91 aa 40 	lds	r25, 0x40AA	; 0x8040aa <mln_uart_stream_uart+0x1>
     e12:	0e 94 f3 06 	call	0xde6	; 0xde6 <_ZN8mln_uart5writeEh>
	return 0;
}
     e16:	80 e0       	ldi	r24, 0x00	; 0
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	08 95       	ret

00000e1c <_ZN8mln_uart10is_busy_rxEv>:
	return !(inst->STATUS & USART_DREIF_bm);
}

bool mln_uart::is_busy_rx(void)
{
	return !(inst->STATUS & USART_RXCIF_bm);
     e1c:	dc 01       	movw	r26, r24
     e1e:	ed 91       	ld	r30, X+
     e20:	fc 91       	ld	r31, X
     e22:	84 81       	ldd	r24, Z+4	; 0x04
     e24:	80 95       	com	r24
}
     e26:	88 1f       	adc	r24, r24
     e28:	88 27       	eor	r24, r24
     e2a:	88 1f       	adc	r24, r24
     e2c:	08 95       	ret

00000e2e <_ZN8mln_uart4readEv>:
	
	inst->TXDATAL = data;
}

uint8_t mln_uart::read(void)
{
     e2e:	cf 93       	push	r28
     e30:	df 93       	push	r29
     e32:	ec 01       	movw	r28, r24
	while (is_busy_rx());
     e34:	ce 01       	movw	r24, r28
     e36:	0e 94 0e 07 	call	0xe1c	; 0xe1c <_ZN8mln_uart10is_busy_rxEv>
     e3a:	81 11       	cpse	r24, r1
     e3c:	fb cf       	rjmp	.-10     	; 0xe34 <_ZN8mln_uart4readEv+0x6>
	
	return ((inst->RXDATAH & 0x1) << 8) | inst->RXDATAL;
     e3e:	e8 81       	ld	r30, Y
     e40:	f9 81       	ldd	r31, Y+1	; 0x01
     e42:	81 81       	ldd	r24, Z+1	; 0x01
     e44:	80 81       	ld	r24, Z
}
     e46:	df 91       	pop	r29
     e48:	cf 91       	pop	r28
     e4a:	08 95       	ret

00000e4c <_Z20mln_uart_stream_readP6__file>:
	return 0;
}

int mln_uart_stream_read(FILE *f)
{
	return mln_uart_stream_uart->read();
     e4c:	80 91 a9 40 	lds	r24, 0x40A9	; 0x8040a9 <mln_uart_stream_uart>
     e50:	90 91 aa 40 	lds	r25, 0x40AA	; 0x8040aa <mln_uart_stream_uart+0x1>
     e54:	0e 94 17 07 	call	0xe2e	; 0xe2e <_ZN8mln_uart4readEv>
}
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	08 95       	ret

00000e5c <_ZN8mln_uart4pushEv>:
	
	return ((inst->RXDATAH & 0x1) << 8) | inst->RXDATAL;
}

void mln_uart::push(void)
{
     e5c:	0f 93       	push	r16
     e5e:	1f 93       	push	r17
     e60:	cf 93       	push	r28
     e62:	df 93       	push	r29
     e64:	ec 01       	movw	r28, r24
	buffer[index] = read();
     e66:	0c a5       	ldd	r16, Y+44	; 0x2c
     e68:	10 e0       	ldi	r17, 0x00	; 0
     e6a:	0e 94 17 07 	call	0xe2e	; 0xe2e <_ZN8mln_uart4readEv>
     e6e:	fe 01       	movw	r30, r28
     e70:	e0 0f       	add	r30, r16
     e72:	f1 1f       	adc	r31, r17
     e74:	84 87       	std	Z+12, r24	; 0x0c
	index = (index + 1) % MLN_UART_BUF_SIZE;
     e76:	8c a5       	ldd	r24, Y+44	; 0x2c
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	01 96       	adiw	r24, 0x01	; 1
     e7c:	8f 71       	andi	r24, 0x1F	; 31
     e7e:	90 78       	andi	r25, 0x80	; 128
     e80:	99 23       	and	r25, r25
     e82:	24 f4       	brge	.+8      	; 0xe8c <_ZN8mln_uart4pushEv+0x30>
     e84:	01 97       	sbiw	r24, 0x01	; 1
     e86:	80 6e       	ori	r24, 0xE0	; 224
     e88:	9f 6f       	ori	r25, 0xFF	; 255
     e8a:	01 96       	adiw	r24, 0x01	; 1
     e8c:	8c a7       	std	Y+44, r24	; 0x2c
}
     e8e:	df 91       	pop	r29
     e90:	cf 91       	pop	r28
     e92:	1f 91       	pop	r17
     e94:	0f 91       	pop	r16
     e96:	08 95       	ret

00000e98 <_ZN8mln_uart14data_availableEv>:
{
	return !(inst->STATUS & USART_RXCIF_bm);
}
bool mln_uart::data_available(void)
{
	return index;
     e98:	21 e0       	ldi	r18, 0x01	; 1
     e9a:	fc 01       	movw	r30, r24
     e9c:	84 a5       	ldd	r24, Z+44	; 0x2c
     e9e:	81 11       	cpse	r24, r1
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <_ZN8mln_uart14data_availableEv+0xc>
     ea2:	20 e0       	ldi	r18, 0x00	; 0
}
     ea4:	82 2f       	mov	r24, r18
     ea6:	08 95       	ret

00000ea8 <__vector_53>:



ISR(USART3_RXC_vect)
{
     ea8:	1f 92       	push	r1
     eaa:	0f 92       	push	r0
     eac:	0f b6       	in	r0, 0x3f	; 63
     eae:	0f 92       	push	r0
     eb0:	11 24       	eor	r1, r1
     eb2:	0b b6       	in	r0, 0x3b	; 59
     eb4:	0f 92       	push	r0
     eb6:	2f 93       	push	r18
     eb8:	3f 93       	push	r19
     eba:	4f 93       	push	r20
     ebc:	5f 93       	push	r21
     ebe:	6f 93       	push	r22
     ec0:	7f 93       	push	r23
     ec2:	8f 93       	push	r24
     ec4:	9f 93       	push	r25
     ec6:	af 93       	push	r26
     ec8:	bf 93       	push	r27
     eca:	ef 93       	push	r30
     ecc:	ff 93       	push	r31
	mln_uart_stream_uart->push();
     ece:	80 91 a9 40 	lds	r24, 0x40A9	; 0x8040a9 <mln_uart_stream_uart>
     ed2:	90 91 aa 40 	lds	r25, 0x40AA	; 0x8040aa <mln_uart_stream_uart+0x1>
     ed6:	0e 94 2e 07 	call	0xe5c	; 0xe5c <_ZN8mln_uart4pushEv>
	if(!mln_uart_stream_uart->is_busy_rx())
     eda:	80 91 a9 40 	lds	r24, 0x40A9	; 0x8040a9 <mln_uart_stream_uart>
     ede:	90 91 aa 40 	lds	r25, 0x40AA	; 0x8040aa <mln_uart_stream_uart+0x1>
     ee2:	0e 94 0e 07 	call	0xe1c	; 0xe1c <_ZN8mln_uart10is_busy_rxEv>
     ee6:	81 11       	cpse	r24, r1
     ee8:	06 c0       	rjmp	.+12     	; 0xef6 <__vector_53+0x4e>
		mln_uart_stream_uart->run_isr();
     eea:	80 91 a9 40 	lds	r24, 0x40A9	; 0x8040a9 <mln_uart_stream_uart>
     eee:	90 91 aa 40 	lds	r25, 0x40AA	; 0x8040aa <mln_uart_stream_uart+0x1>
     ef2:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <_ZN8mln_uart7run_isrEv>
     ef6:	ff 91       	pop	r31
     ef8:	ef 91       	pop	r30
     efa:	bf 91       	pop	r27
     efc:	af 91       	pop	r26
     efe:	9f 91       	pop	r25
     f00:	8f 91       	pop	r24
     f02:	7f 91       	pop	r23
     f04:	6f 91       	pop	r22
     f06:	5f 91       	pop	r21
     f08:	4f 91       	pop	r20
     f0a:	3f 91       	pop	r19
     f0c:	2f 91       	pop	r18
     f0e:	0f 90       	pop	r0
     f10:	0b be       	out	0x3b, r0	; 59
     f12:	0f 90       	pop	r0
     f14:	0f be       	out	0x3f, r0	; 63
     f16:	0f 90       	pop	r0
     f18:	1f 90       	pop	r1
     f1a:	18 95       	reti

00000f1c <__subsf3>:
     f1c:	50 58       	subi	r21, 0x80	; 128

00000f1e <__addsf3>:
     f1e:	bb 27       	eor	r27, r27
     f20:	aa 27       	eor	r26, r26
     f22:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__addsf3x>
     f26:	0c 94 f0 08 	jmp	0x11e0	; 0x11e0 <__fp_round>
     f2a:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <__fp_pscA>
     f2e:	38 f0       	brcs	.+14     	; 0xf3e <__addsf3+0x20>
     f30:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__fp_pscB>
     f34:	20 f0       	brcs	.+8      	; 0xf3e <__addsf3+0x20>
     f36:	39 f4       	brne	.+14     	; 0xf46 <__addsf3+0x28>
     f38:	9f 3f       	cpi	r25, 0xFF	; 255
     f3a:	19 f4       	brne	.+6      	; 0xf42 <__addsf3+0x24>
     f3c:	26 f4       	brtc	.+8      	; 0xf46 <__addsf3+0x28>
     f3e:	0c 94 df 08 	jmp	0x11be	; 0x11be <__fp_nan>
     f42:	0e f4       	brtc	.+2      	; 0xf46 <__addsf3+0x28>
     f44:	e0 95       	com	r30
     f46:	e7 fb       	bst	r30, 7
     f48:	0c 94 d9 08 	jmp	0x11b2	; 0x11b2 <__fp_inf>

00000f4c <__addsf3x>:
     f4c:	e9 2f       	mov	r30, r25
     f4e:	0e 94 01 09 	call	0x1202	; 0x1202 <__fp_split3>
     f52:	58 f3       	brcs	.-42     	; 0xf2a <__addsf3+0xc>
     f54:	ba 17       	cp	r27, r26
     f56:	62 07       	cpc	r22, r18
     f58:	73 07       	cpc	r23, r19
     f5a:	84 07       	cpc	r24, r20
     f5c:	95 07       	cpc	r25, r21
     f5e:	20 f0       	brcs	.+8      	; 0xf68 <__addsf3x+0x1c>
     f60:	79 f4       	brne	.+30     	; 0xf80 <__addsf3x+0x34>
     f62:	a6 f5       	brtc	.+104    	; 0xfcc <__addsf3x+0x80>
     f64:	0c 94 23 09 	jmp	0x1246	; 0x1246 <__fp_zero>
     f68:	0e f4       	brtc	.+2      	; 0xf6c <__addsf3x+0x20>
     f6a:	e0 95       	com	r30
     f6c:	0b 2e       	mov	r0, r27
     f6e:	ba 2f       	mov	r27, r26
     f70:	a0 2d       	mov	r26, r0
     f72:	0b 01       	movw	r0, r22
     f74:	b9 01       	movw	r22, r18
     f76:	90 01       	movw	r18, r0
     f78:	0c 01       	movw	r0, r24
     f7a:	ca 01       	movw	r24, r20
     f7c:	a0 01       	movw	r20, r0
     f7e:	11 24       	eor	r1, r1
     f80:	ff 27       	eor	r31, r31
     f82:	59 1b       	sub	r21, r25
     f84:	99 f0       	breq	.+38     	; 0xfac <__addsf3x+0x60>
     f86:	59 3f       	cpi	r21, 0xF9	; 249
     f88:	50 f4       	brcc	.+20     	; 0xf9e <__addsf3x+0x52>
     f8a:	50 3e       	cpi	r21, 0xE0	; 224
     f8c:	68 f1       	brcs	.+90     	; 0xfe8 <__addsf3x+0x9c>
     f8e:	1a 16       	cp	r1, r26
     f90:	f0 40       	sbci	r31, 0x00	; 0
     f92:	a2 2f       	mov	r26, r18
     f94:	23 2f       	mov	r18, r19
     f96:	34 2f       	mov	r19, r20
     f98:	44 27       	eor	r20, r20
     f9a:	58 5f       	subi	r21, 0xF8	; 248
     f9c:	f3 cf       	rjmp	.-26     	; 0xf84 <__addsf3x+0x38>
     f9e:	46 95       	lsr	r20
     fa0:	37 95       	ror	r19
     fa2:	27 95       	ror	r18
     fa4:	a7 95       	ror	r26
     fa6:	f0 40       	sbci	r31, 0x00	; 0
     fa8:	53 95       	inc	r21
     faa:	c9 f7       	brne	.-14     	; 0xf9e <__addsf3x+0x52>
     fac:	7e f4       	brtc	.+30     	; 0xfcc <__addsf3x+0x80>
     fae:	1f 16       	cp	r1, r31
     fb0:	ba 0b       	sbc	r27, r26
     fb2:	62 0b       	sbc	r22, r18
     fb4:	73 0b       	sbc	r23, r19
     fb6:	84 0b       	sbc	r24, r20
     fb8:	ba f0       	brmi	.+46     	; 0xfe8 <__addsf3x+0x9c>
     fba:	91 50       	subi	r25, 0x01	; 1
     fbc:	a1 f0       	breq	.+40     	; 0xfe6 <__addsf3x+0x9a>
     fbe:	ff 0f       	add	r31, r31
     fc0:	bb 1f       	adc	r27, r27
     fc2:	66 1f       	adc	r22, r22
     fc4:	77 1f       	adc	r23, r23
     fc6:	88 1f       	adc	r24, r24
     fc8:	c2 f7       	brpl	.-16     	; 0xfba <__addsf3x+0x6e>
     fca:	0e c0       	rjmp	.+28     	; 0xfe8 <__addsf3x+0x9c>
     fcc:	ba 0f       	add	r27, r26
     fce:	62 1f       	adc	r22, r18
     fd0:	73 1f       	adc	r23, r19
     fd2:	84 1f       	adc	r24, r20
     fd4:	48 f4       	brcc	.+18     	; 0xfe8 <__addsf3x+0x9c>
     fd6:	87 95       	ror	r24
     fd8:	77 95       	ror	r23
     fda:	67 95       	ror	r22
     fdc:	b7 95       	ror	r27
     fde:	f7 95       	ror	r31
     fe0:	9e 3f       	cpi	r25, 0xFE	; 254
     fe2:	08 f0       	brcs	.+2      	; 0xfe6 <__addsf3x+0x9a>
     fe4:	b0 cf       	rjmp	.-160    	; 0xf46 <__addsf3+0x28>
     fe6:	93 95       	inc	r25
     fe8:	88 0f       	add	r24, r24
     fea:	08 f0       	brcs	.+2      	; 0xfee <__addsf3x+0xa2>
     fec:	99 27       	eor	r25, r25
     fee:	ee 0f       	add	r30, r30
     ff0:	97 95       	ror	r25
     ff2:	87 95       	ror	r24
     ff4:	08 95       	ret

00000ff6 <__divsf3>:
     ff6:	0e 94 0f 08 	call	0x101e	; 0x101e <__divsf3x>
     ffa:	0c 94 f0 08 	jmp	0x11e0	; 0x11e0 <__fp_round>
     ffe:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__fp_pscB>
    1002:	58 f0       	brcs	.+22     	; 0x101a <__divsf3+0x24>
    1004:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <__fp_pscA>
    1008:	40 f0       	brcs	.+16     	; 0x101a <__divsf3+0x24>
    100a:	29 f4       	brne	.+10     	; 0x1016 <__divsf3+0x20>
    100c:	5f 3f       	cpi	r21, 0xFF	; 255
    100e:	29 f0       	breq	.+10     	; 0x101a <__divsf3+0x24>
    1010:	0c 94 d9 08 	jmp	0x11b2	; 0x11b2 <__fp_inf>
    1014:	51 11       	cpse	r21, r1
    1016:	0c 94 24 09 	jmp	0x1248	; 0x1248 <__fp_szero>
    101a:	0c 94 df 08 	jmp	0x11be	; 0x11be <__fp_nan>

0000101e <__divsf3x>:
    101e:	0e 94 01 09 	call	0x1202	; 0x1202 <__fp_split3>
    1022:	68 f3       	brcs	.-38     	; 0xffe <__divsf3+0x8>

00001024 <__divsf3_pse>:
    1024:	99 23       	and	r25, r25
    1026:	b1 f3       	breq	.-20     	; 0x1014 <__divsf3+0x1e>
    1028:	55 23       	and	r21, r21
    102a:	91 f3       	breq	.-28     	; 0x1010 <__divsf3+0x1a>
    102c:	95 1b       	sub	r25, r21
    102e:	55 0b       	sbc	r21, r21
    1030:	bb 27       	eor	r27, r27
    1032:	aa 27       	eor	r26, r26
    1034:	62 17       	cp	r22, r18
    1036:	73 07       	cpc	r23, r19
    1038:	84 07       	cpc	r24, r20
    103a:	38 f0       	brcs	.+14     	; 0x104a <__divsf3_pse+0x26>
    103c:	9f 5f       	subi	r25, 0xFF	; 255
    103e:	5f 4f       	sbci	r21, 0xFF	; 255
    1040:	22 0f       	add	r18, r18
    1042:	33 1f       	adc	r19, r19
    1044:	44 1f       	adc	r20, r20
    1046:	aa 1f       	adc	r26, r26
    1048:	a9 f3       	breq	.-22     	; 0x1034 <__divsf3_pse+0x10>
    104a:	35 d0       	rcall	.+106    	; 0x10b6 <__divsf3_pse+0x92>
    104c:	0e 2e       	mov	r0, r30
    104e:	3a f0       	brmi	.+14     	; 0x105e <__divsf3_pse+0x3a>
    1050:	e0 e8       	ldi	r30, 0x80	; 128
    1052:	32 d0       	rcall	.+100    	; 0x10b8 <__divsf3_pse+0x94>
    1054:	91 50       	subi	r25, 0x01	; 1
    1056:	50 40       	sbci	r21, 0x00	; 0
    1058:	e6 95       	lsr	r30
    105a:	00 1c       	adc	r0, r0
    105c:	ca f7       	brpl	.-14     	; 0x1050 <__divsf3_pse+0x2c>
    105e:	2b d0       	rcall	.+86     	; 0x10b6 <__divsf3_pse+0x92>
    1060:	fe 2f       	mov	r31, r30
    1062:	29 d0       	rcall	.+82     	; 0x10b6 <__divsf3_pse+0x92>
    1064:	66 0f       	add	r22, r22
    1066:	77 1f       	adc	r23, r23
    1068:	88 1f       	adc	r24, r24
    106a:	bb 1f       	adc	r27, r27
    106c:	26 17       	cp	r18, r22
    106e:	37 07       	cpc	r19, r23
    1070:	48 07       	cpc	r20, r24
    1072:	ab 07       	cpc	r26, r27
    1074:	b0 e8       	ldi	r27, 0x80	; 128
    1076:	09 f0       	breq	.+2      	; 0x107a <__divsf3_pse+0x56>
    1078:	bb 0b       	sbc	r27, r27
    107a:	80 2d       	mov	r24, r0
    107c:	bf 01       	movw	r22, r30
    107e:	ff 27       	eor	r31, r31
    1080:	93 58       	subi	r25, 0x83	; 131
    1082:	5f 4f       	sbci	r21, 0xFF	; 255
    1084:	3a f0       	brmi	.+14     	; 0x1094 <__divsf3_pse+0x70>
    1086:	9e 3f       	cpi	r25, 0xFE	; 254
    1088:	51 05       	cpc	r21, r1
    108a:	78 f0       	brcs	.+30     	; 0x10aa <__divsf3_pse+0x86>
    108c:	0c 94 d9 08 	jmp	0x11b2	; 0x11b2 <__fp_inf>
    1090:	0c 94 24 09 	jmp	0x1248	; 0x1248 <__fp_szero>
    1094:	5f 3f       	cpi	r21, 0xFF	; 255
    1096:	e4 f3       	brlt	.-8      	; 0x1090 <__divsf3_pse+0x6c>
    1098:	98 3e       	cpi	r25, 0xE8	; 232
    109a:	d4 f3       	brlt	.-12     	; 0x1090 <__divsf3_pse+0x6c>
    109c:	86 95       	lsr	r24
    109e:	77 95       	ror	r23
    10a0:	67 95       	ror	r22
    10a2:	b7 95       	ror	r27
    10a4:	f7 95       	ror	r31
    10a6:	9f 5f       	subi	r25, 0xFF	; 255
    10a8:	c9 f7       	brne	.-14     	; 0x109c <__divsf3_pse+0x78>
    10aa:	88 0f       	add	r24, r24
    10ac:	91 1d       	adc	r25, r1
    10ae:	96 95       	lsr	r25
    10b0:	87 95       	ror	r24
    10b2:	97 f9       	bld	r25, 7
    10b4:	08 95       	ret
    10b6:	e1 e0       	ldi	r30, 0x01	; 1
    10b8:	66 0f       	add	r22, r22
    10ba:	77 1f       	adc	r23, r23
    10bc:	88 1f       	adc	r24, r24
    10be:	bb 1f       	adc	r27, r27
    10c0:	62 17       	cp	r22, r18
    10c2:	73 07       	cpc	r23, r19
    10c4:	84 07       	cpc	r24, r20
    10c6:	ba 07       	cpc	r27, r26
    10c8:	20 f0       	brcs	.+8      	; 0x10d2 <__divsf3_pse+0xae>
    10ca:	62 1b       	sub	r22, r18
    10cc:	73 0b       	sbc	r23, r19
    10ce:	84 0b       	sbc	r24, r20
    10d0:	ba 0b       	sbc	r27, r26
    10d2:	ee 1f       	adc	r30, r30
    10d4:	88 f7       	brcc	.-30     	; 0x10b8 <__divsf3_pse+0x94>
    10d6:	e0 95       	com	r30
    10d8:	08 95       	ret

000010da <__fixunssfsi>:
    10da:	0e 94 09 09 	call	0x1212	; 0x1212 <__fp_splitA>
    10de:	88 f0       	brcs	.+34     	; 0x1102 <__fixunssfsi+0x28>
    10e0:	9f 57       	subi	r25, 0x7F	; 127
    10e2:	98 f0       	brcs	.+38     	; 0x110a <__fixunssfsi+0x30>
    10e4:	b9 2f       	mov	r27, r25
    10e6:	99 27       	eor	r25, r25
    10e8:	b7 51       	subi	r27, 0x17	; 23
    10ea:	b0 f0       	brcs	.+44     	; 0x1118 <__fixunssfsi+0x3e>
    10ec:	e1 f0       	breq	.+56     	; 0x1126 <__fixunssfsi+0x4c>
    10ee:	66 0f       	add	r22, r22
    10f0:	77 1f       	adc	r23, r23
    10f2:	88 1f       	adc	r24, r24
    10f4:	99 1f       	adc	r25, r25
    10f6:	1a f0       	brmi	.+6      	; 0x10fe <__fixunssfsi+0x24>
    10f8:	ba 95       	dec	r27
    10fa:	c9 f7       	brne	.-14     	; 0x10ee <__fixunssfsi+0x14>
    10fc:	14 c0       	rjmp	.+40     	; 0x1126 <__fixunssfsi+0x4c>
    10fe:	b1 30       	cpi	r27, 0x01	; 1
    1100:	91 f0       	breq	.+36     	; 0x1126 <__fixunssfsi+0x4c>
    1102:	0e 94 23 09 	call	0x1246	; 0x1246 <__fp_zero>
    1106:	b1 e0       	ldi	r27, 0x01	; 1
    1108:	08 95       	ret
    110a:	0c 94 23 09 	jmp	0x1246	; 0x1246 <__fp_zero>
    110e:	67 2f       	mov	r22, r23
    1110:	78 2f       	mov	r23, r24
    1112:	88 27       	eor	r24, r24
    1114:	b8 5f       	subi	r27, 0xF8	; 248
    1116:	39 f0       	breq	.+14     	; 0x1126 <__fixunssfsi+0x4c>
    1118:	b9 3f       	cpi	r27, 0xF9	; 249
    111a:	cc f3       	brlt	.-14     	; 0x110e <__fixunssfsi+0x34>
    111c:	86 95       	lsr	r24
    111e:	77 95       	ror	r23
    1120:	67 95       	ror	r22
    1122:	b3 95       	inc	r27
    1124:	d9 f7       	brne	.-10     	; 0x111c <__fixunssfsi+0x42>
    1126:	3e f4       	brtc	.+14     	; 0x1136 <__fixunssfsi+0x5c>
    1128:	90 95       	com	r25
    112a:	80 95       	com	r24
    112c:	70 95       	com	r23
    112e:	61 95       	neg	r22
    1130:	7f 4f       	sbci	r23, 0xFF	; 255
    1132:	8f 4f       	sbci	r24, 0xFF	; 255
    1134:	9f 4f       	sbci	r25, 0xFF	; 255
    1136:	08 95       	ret

00001138 <__floatunsisf>:
    1138:	e8 94       	clt
    113a:	09 c0       	rjmp	.+18     	; 0x114e <__floatsisf+0x12>

0000113c <__floatsisf>:
    113c:	97 fb       	bst	r25, 7
    113e:	3e f4       	brtc	.+14     	; 0x114e <__floatsisf+0x12>
    1140:	90 95       	com	r25
    1142:	80 95       	com	r24
    1144:	70 95       	com	r23
    1146:	61 95       	neg	r22
    1148:	7f 4f       	sbci	r23, 0xFF	; 255
    114a:	8f 4f       	sbci	r24, 0xFF	; 255
    114c:	9f 4f       	sbci	r25, 0xFF	; 255
    114e:	99 23       	and	r25, r25
    1150:	a9 f0       	breq	.+42     	; 0x117c <__floatsisf+0x40>
    1152:	f9 2f       	mov	r31, r25
    1154:	96 e9       	ldi	r25, 0x96	; 150
    1156:	bb 27       	eor	r27, r27
    1158:	93 95       	inc	r25
    115a:	f6 95       	lsr	r31
    115c:	87 95       	ror	r24
    115e:	77 95       	ror	r23
    1160:	67 95       	ror	r22
    1162:	b7 95       	ror	r27
    1164:	f1 11       	cpse	r31, r1
    1166:	f8 cf       	rjmp	.-16     	; 0x1158 <__floatsisf+0x1c>
    1168:	fa f4       	brpl	.+62     	; 0x11a8 <__floatsisf+0x6c>
    116a:	bb 0f       	add	r27, r27
    116c:	11 f4       	brne	.+4      	; 0x1172 <__floatsisf+0x36>
    116e:	60 ff       	sbrs	r22, 0
    1170:	1b c0       	rjmp	.+54     	; 0x11a8 <__floatsisf+0x6c>
    1172:	6f 5f       	subi	r22, 0xFF	; 255
    1174:	7f 4f       	sbci	r23, 0xFF	; 255
    1176:	8f 4f       	sbci	r24, 0xFF	; 255
    1178:	9f 4f       	sbci	r25, 0xFF	; 255
    117a:	16 c0       	rjmp	.+44     	; 0x11a8 <__floatsisf+0x6c>
    117c:	88 23       	and	r24, r24
    117e:	11 f0       	breq	.+4      	; 0x1184 <__floatsisf+0x48>
    1180:	96 e9       	ldi	r25, 0x96	; 150
    1182:	11 c0       	rjmp	.+34     	; 0x11a6 <__floatsisf+0x6a>
    1184:	77 23       	and	r23, r23
    1186:	21 f0       	breq	.+8      	; 0x1190 <__floatsisf+0x54>
    1188:	9e e8       	ldi	r25, 0x8E	; 142
    118a:	87 2f       	mov	r24, r23
    118c:	76 2f       	mov	r23, r22
    118e:	05 c0       	rjmp	.+10     	; 0x119a <__floatsisf+0x5e>
    1190:	66 23       	and	r22, r22
    1192:	71 f0       	breq	.+28     	; 0x11b0 <__floatsisf+0x74>
    1194:	96 e8       	ldi	r25, 0x86	; 134
    1196:	86 2f       	mov	r24, r22
    1198:	70 e0       	ldi	r23, 0x00	; 0
    119a:	60 e0       	ldi	r22, 0x00	; 0
    119c:	2a f0       	brmi	.+10     	; 0x11a8 <__floatsisf+0x6c>
    119e:	9a 95       	dec	r25
    11a0:	66 0f       	add	r22, r22
    11a2:	77 1f       	adc	r23, r23
    11a4:	88 1f       	adc	r24, r24
    11a6:	da f7       	brpl	.-10     	; 0x119e <__floatsisf+0x62>
    11a8:	88 0f       	add	r24, r24
    11aa:	96 95       	lsr	r25
    11ac:	87 95       	ror	r24
    11ae:	97 f9       	bld	r25, 7
    11b0:	08 95       	ret

000011b2 <__fp_inf>:
    11b2:	97 f9       	bld	r25, 7
    11b4:	9f 67       	ori	r25, 0x7F	; 127
    11b6:	80 e8       	ldi	r24, 0x80	; 128
    11b8:	70 e0       	ldi	r23, 0x00	; 0
    11ba:	60 e0       	ldi	r22, 0x00	; 0
    11bc:	08 95       	ret

000011be <__fp_nan>:
    11be:	9f ef       	ldi	r25, 0xFF	; 255
    11c0:	80 ec       	ldi	r24, 0xC0	; 192
    11c2:	08 95       	ret

000011c4 <__fp_pscA>:
    11c4:	00 24       	eor	r0, r0
    11c6:	0a 94       	dec	r0
    11c8:	16 16       	cp	r1, r22
    11ca:	17 06       	cpc	r1, r23
    11cc:	18 06       	cpc	r1, r24
    11ce:	09 06       	cpc	r0, r25
    11d0:	08 95       	ret

000011d2 <__fp_pscB>:
    11d2:	00 24       	eor	r0, r0
    11d4:	0a 94       	dec	r0
    11d6:	12 16       	cp	r1, r18
    11d8:	13 06       	cpc	r1, r19
    11da:	14 06       	cpc	r1, r20
    11dc:	05 06       	cpc	r0, r21
    11de:	08 95       	ret

000011e0 <__fp_round>:
    11e0:	09 2e       	mov	r0, r25
    11e2:	03 94       	inc	r0
    11e4:	00 0c       	add	r0, r0
    11e6:	11 f4       	brne	.+4      	; 0x11ec <__fp_round+0xc>
    11e8:	88 23       	and	r24, r24
    11ea:	52 f0       	brmi	.+20     	; 0x1200 <__fp_round+0x20>
    11ec:	bb 0f       	add	r27, r27
    11ee:	40 f4       	brcc	.+16     	; 0x1200 <__fp_round+0x20>
    11f0:	bf 2b       	or	r27, r31
    11f2:	11 f4       	brne	.+4      	; 0x11f8 <__fp_round+0x18>
    11f4:	60 ff       	sbrs	r22, 0
    11f6:	04 c0       	rjmp	.+8      	; 0x1200 <__fp_round+0x20>
    11f8:	6f 5f       	subi	r22, 0xFF	; 255
    11fa:	7f 4f       	sbci	r23, 0xFF	; 255
    11fc:	8f 4f       	sbci	r24, 0xFF	; 255
    11fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1200:	08 95       	ret

00001202 <__fp_split3>:
    1202:	57 fd       	sbrc	r21, 7
    1204:	90 58       	subi	r25, 0x80	; 128
    1206:	44 0f       	add	r20, r20
    1208:	55 1f       	adc	r21, r21
    120a:	59 f0       	breq	.+22     	; 0x1222 <__fp_splitA+0x10>
    120c:	5f 3f       	cpi	r21, 0xFF	; 255
    120e:	71 f0       	breq	.+28     	; 0x122c <__fp_splitA+0x1a>
    1210:	47 95       	ror	r20

00001212 <__fp_splitA>:
    1212:	88 0f       	add	r24, r24
    1214:	97 fb       	bst	r25, 7
    1216:	99 1f       	adc	r25, r25
    1218:	61 f0       	breq	.+24     	; 0x1232 <__fp_splitA+0x20>
    121a:	9f 3f       	cpi	r25, 0xFF	; 255
    121c:	79 f0       	breq	.+30     	; 0x123c <__fp_splitA+0x2a>
    121e:	87 95       	ror	r24
    1220:	08 95       	ret
    1222:	12 16       	cp	r1, r18
    1224:	13 06       	cpc	r1, r19
    1226:	14 06       	cpc	r1, r20
    1228:	55 1f       	adc	r21, r21
    122a:	f2 cf       	rjmp	.-28     	; 0x1210 <__fp_split3+0xe>
    122c:	46 95       	lsr	r20
    122e:	f1 df       	rcall	.-30     	; 0x1212 <__fp_splitA>
    1230:	08 c0       	rjmp	.+16     	; 0x1242 <__fp_splitA+0x30>
    1232:	16 16       	cp	r1, r22
    1234:	17 06       	cpc	r1, r23
    1236:	18 06       	cpc	r1, r24
    1238:	99 1f       	adc	r25, r25
    123a:	f1 cf       	rjmp	.-30     	; 0x121e <__fp_splitA+0xc>
    123c:	86 95       	lsr	r24
    123e:	71 05       	cpc	r23, r1
    1240:	61 05       	cpc	r22, r1
    1242:	08 94       	sec
    1244:	08 95       	ret

00001246 <__fp_zero>:
    1246:	e8 94       	clt

00001248 <__fp_szero>:
    1248:	bb 27       	eor	r27, r27
    124a:	66 27       	eor	r22, r22
    124c:	77 27       	eor	r23, r23
    124e:	cb 01       	movw	r24, r22
    1250:	97 f9       	bld	r25, 7
    1252:	08 95       	ret

00001254 <__mulsf3>:
    1254:	0e 94 3d 09 	call	0x127a	; 0x127a <__mulsf3x>
    1258:	0c 94 f0 08 	jmp	0x11e0	; 0x11e0 <__fp_round>
    125c:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <__fp_pscA>
    1260:	38 f0       	brcs	.+14     	; 0x1270 <__mulsf3+0x1c>
    1262:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__fp_pscB>
    1266:	20 f0       	brcs	.+8      	; 0x1270 <__mulsf3+0x1c>
    1268:	95 23       	and	r25, r21
    126a:	11 f0       	breq	.+4      	; 0x1270 <__mulsf3+0x1c>
    126c:	0c 94 d9 08 	jmp	0x11b2	; 0x11b2 <__fp_inf>
    1270:	0c 94 df 08 	jmp	0x11be	; 0x11be <__fp_nan>
    1274:	11 24       	eor	r1, r1
    1276:	0c 94 24 09 	jmp	0x1248	; 0x1248 <__fp_szero>

0000127a <__mulsf3x>:
    127a:	0e 94 01 09 	call	0x1202	; 0x1202 <__fp_split3>
    127e:	70 f3       	brcs	.-36     	; 0x125c <__mulsf3+0x8>

00001280 <__mulsf3_pse>:
    1280:	95 9f       	mul	r25, r21
    1282:	c1 f3       	breq	.-16     	; 0x1274 <__mulsf3+0x20>
    1284:	95 0f       	add	r25, r21
    1286:	50 e0       	ldi	r21, 0x00	; 0
    1288:	55 1f       	adc	r21, r21
    128a:	62 9f       	mul	r22, r18
    128c:	f0 01       	movw	r30, r0
    128e:	72 9f       	mul	r23, r18
    1290:	bb 27       	eor	r27, r27
    1292:	f0 0d       	add	r31, r0
    1294:	b1 1d       	adc	r27, r1
    1296:	63 9f       	mul	r22, r19
    1298:	aa 27       	eor	r26, r26
    129a:	f0 0d       	add	r31, r0
    129c:	b1 1d       	adc	r27, r1
    129e:	aa 1f       	adc	r26, r26
    12a0:	64 9f       	mul	r22, r20
    12a2:	66 27       	eor	r22, r22
    12a4:	b0 0d       	add	r27, r0
    12a6:	a1 1d       	adc	r26, r1
    12a8:	66 1f       	adc	r22, r22
    12aa:	82 9f       	mul	r24, r18
    12ac:	22 27       	eor	r18, r18
    12ae:	b0 0d       	add	r27, r0
    12b0:	a1 1d       	adc	r26, r1
    12b2:	62 1f       	adc	r22, r18
    12b4:	73 9f       	mul	r23, r19
    12b6:	b0 0d       	add	r27, r0
    12b8:	a1 1d       	adc	r26, r1
    12ba:	62 1f       	adc	r22, r18
    12bc:	83 9f       	mul	r24, r19
    12be:	a0 0d       	add	r26, r0
    12c0:	61 1d       	adc	r22, r1
    12c2:	22 1f       	adc	r18, r18
    12c4:	74 9f       	mul	r23, r20
    12c6:	33 27       	eor	r19, r19
    12c8:	a0 0d       	add	r26, r0
    12ca:	61 1d       	adc	r22, r1
    12cc:	23 1f       	adc	r18, r19
    12ce:	84 9f       	mul	r24, r20
    12d0:	60 0d       	add	r22, r0
    12d2:	21 1d       	adc	r18, r1
    12d4:	82 2f       	mov	r24, r18
    12d6:	76 2f       	mov	r23, r22
    12d8:	6a 2f       	mov	r22, r26
    12da:	11 24       	eor	r1, r1
    12dc:	9f 57       	subi	r25, 0x7F	; 127
    12de:	50 40       	sbci	r21, 0x00	; 0
    12e0:	9a f0       	brmi	.+38     	; 0x1308 <__mulsf3_pse+0x88>
    12e2:	f1 f0       	breq	.+60     	; 0x1320 <__mulsf3_pse+0xa0>
    12e4:	88 23       	and	r24, r24
    12e6:	4a f0       	brmi	.+18     	; 0x12fa <__mulsf3_pse+0x7a>
    12e8:	ee 0f       	add	r30, r30
    12ea:	ff 1f       	adc	r31, r31
    12ec:	bb 1f       	adc	r27, r27
    12ee:	66 1f       	adc	r22, r22
    12f0:	77 1f       	adc	r23, r23
    12f2:	88 1f       	adc	r24, r24
    12f4:	91 50       	subi	r25, 0x01	; 1
    12f6:	50 40       	sbci	r21, 0x00	; 0
    12f8:	a9 f7       	brne	.-22     	; 0x12e4 <__mulsf3_pse+0x64>
    12fa:	9e 3f       	cpi	r25, 0xFE	; 254
    12fc:	51 05       	cpc	r21, r1
    12fe:	80 f0       	brcs	.+32     	; 0x1320 <__mulsf3_pse+0xa0>
    1300:	0c 94 d9 08 	jmp	0x11b2	; 0x11b2 <__fp_inf>
    1304:	0c 94 24 09 	jmp	0x1248	; 0x1248 <__fp_szero>
    1308:	5f 3f       	cpi	r21, 0xFF	; 255
    130a:	e4 f3       	brlt	.-8      	; 0x1304 <__mulsf3_pse+0x84>
    130c:	98 3e       	cpi	r25, 0xE8	; 232
    130e:	d4 f3       	brlt	.-12     	; 0x1304 <__mulsf3_pse+0x84>
    1310:	86 95       	lsr	r24
    1312:	77 95       	ror	r23
    1314:	67 95       	ror	r22
    1316:	b7 95       	ror	r27
    1318:	f7 95       	ror	r31
    131a:	e7 95       	ror	r30
    131c:	9f 5f       	subi	r25, 0xFF	; 255
    131e:	c1 f7       	brne	.-16     	; 0x1310 <__mulsf3_pse+0x90>
    1320:	fe 2b       	or	r31, r30
    1322:	88 0f       	add	r24, r24
    1324:	91 1d       	adc	r25, r1
    1326:	96 95       	lsr	r25
    1328:	87 95       	ror	r24
    132a:	97 f9       	bld	r25, 7
    132c:	08 95       	ret

0000132e <__udivmodsi4>:
    132e:	a1 e2       	ldi	r26, 0x21	; 33
    1330:	1a 2e       	mov	r1, r26
    1332:	aa 1b       	sub	r26, r26
    1334:	bb 1b       	sub	r27, r27
    1336:	fd 01       	movw	r30, r26
    1338:	0d c0       	rjmp	.+26     	; 0x1354 <__udivmodsi4_ep>

0000133a <__udivmodsi4_loop>:
    133a:	aa 1f       	adc	r26, r26
    133c:	bb 1f       	adc	r27, r27
    133e:	ee 1f       	adc	r30, r30
    1340:	ff 1f       	adc	r31, r31
    1342:	a2 17       	cp	r26, r18
    1344:	b3 07       	cpc	r27, r19
    1346:	e4 07       	cpc	r30, r20
    1348:	f5 07       	cpc	r31, r21
    134a:	20 f0       	brcs	.+8      	; 0x1354 <__udivmodsi4_ep>
    134c:	a2 1b       	sub	r26, r18
    134e:	b3 0b       	sbc	r27, r19
    1350:	e4 0b       	sbc	r30, r20
    1352:	f5 0b       	sbc	r31, r21

00001354 <__udivmodsi4_ep>:
    1354:	66 1f       	adc	r22, r22
    1356:	77 1f       	adc	r23, r23
    1358:	88 1f       	adc	r24, r24
    135a:	99 1f       	adc	r25, r25
    135c:	1a 94       	dec	r1
    135e:	69 f7       	brne	.-38     	; 0x133a <__udivmodsi4_loop>
    1360:	60 95       	com	r22
    1362:	70 95       	com	r23
    1364:	80 95       	com	r24
    1366:	90 95       	com	r25
    1368:	9b 01       	movw	r18, r22
    136a:	ac 01       	movw	r20, r24
    136c:	bd 01       	movw	r22, r26
    136e:	cf 01       	movw	r24, r30
    1370:	08 95       	ret

00001372 <__muluhisi3>:
    1372:	0e 94 cd 09 	call	0x139a	; 0x139a <__umulhisi3>
    1376:	a5 9f       	mul	r26, r21
    1378:	90 0d       	add	r25, r0
    137a:	b4 9f       	mul	r27, r20
    137c:	90 0d       	add	r25, r0
    137e:	a4 9f       	mul	r26, r20
    1380:	80 0d       	add	r24, r0
    1382:	91 1d       	adc	r25, r1
    1384:	11 24       	eor	r1, r1
    1386:	08 95       	ret

00001388 <__tablejump2__>:
    1388:	ee 0f       	add	r30, r30
    138a:	ff 1f       	adc	r31, r31
    138c:	00 24       	eor	r0, r0
    138e:	00 1c       	adc	r0, r0
    1390:	0b be       	out	0x3b, r0	; 59
    1392:	07 90       	elpm	r0, Z+
    1394:	f6 91       	elpm	r31, Z
    1396:	e0 2d       	mov	r30, r0
    1398:	09 94       	ijmp

0000139a <__umulhisi3>:
    139a:	a2 9f       	mul	r26, r18
    139c:	b0 01       	movw	r22, r0
    139e:	b3 9f       	mul	r27, r19
    13a0:	c0 01       	movw	r24, r0
    13a2:	a3 9f       	mul	r26, r19
    13a4:	70 0d       	add	r23, r0
    13a6:	81 1d       	adc	r24, r1
    13a8:	11 24       	eor	r1, r1
    13aa:	91 1d       	adc	r25, r1
    13ac:	b2 9f       	mul	r27, r18
    13ae:	70 0d       	add	r23, r0
    13b0:	81 1d       	adc	r24, r1
    13b2:	11 24       	eor	r1, r1
    13b4:	91 1d       	adc	r25, r1
    13b6:	08 95       	ret

000013b8 <memccpy>:
    13b8:	fb 01       	movw	r30, r22
    13ba:	dc 01       	movw	r26, r24
    13bc:	21 50       	subi	r18, 0x01	; 1
    13be:	30 40       	sbci	r19, 0x00	; 0
    13c0:	30 f0       	brcs	.+12     	; 0x13ce <memccpy+0x16>
    13c2:	01 90       	ld	r0, Z+
    13c4:	0d 92       	st	X+, r0
    13c6:	04 16       	cp	r0, r20
    13c8:	c9 f7       	brne	.-14     	; 0x13bc <memccpy+0x4>
    13ca:	cd 01       	movw	r24, r26
    13cc:	08 95       	ret
    13ce:	88 27       	eor	r24, r24
    13d0:	99 27       	eor	r25, r25
    13d2:	08 95       	ret

000013d4 <printf>:
    13d4:	cf 93       	push	r28
    13d6:	df 93       	push	r29
    13d8:	cd b7       	in	r28, 0x3d	; 61
    13da:	de b7       	in	r29, 0x3e	; 62
    13dc:	ae 01       	movw	r20, r28
    13de:	4b 5f       	subi	r20, 0xFB	; 251
    13e0:	5f 4f       	sbci	r21, 0xFF	; 255
    13e2:	fa 01       	movw	r30, r20
    13e4:	61 91       	ld	r22, Z+
    13e6:	71 91       	ld	r23, Z+
    13e8:	af 01       	movw	r20, r30
    13ea:	80 91 ad 40 	lds	r24, 0x40AD	; 0x8040ad <__iob+0x2>
    13ee:	90 91 ae 40 	lds	r25, 0x40AE	; 0x8040ae <__iob+0x3>
    13f2:	0e 94 fe 09 	call	0x13fc	; 0x13fc <vfprintf>
    13f6:	df 91       	pop	r29
    13f8:	cf 91       	pop	r28
    13fa:	08 95       	ret

000013fc <vfprintf>:
    13fc:	2f 92       	push	r2
    13fe:	3f 92       	push	r3
    1400:	4f 92       	push	r4
    1402:	5f 92       	push	r5
    1404:	6f 92       	push	r6
    1406:	7f 92       	push	r7
    1408:	8f 92       	push	r8
    140a:	9f 92       	push	r9
    140c:	af 92       	push	r10
    140e:	bf 92       	push	r11
    1410:	cf 92       	push	r12
    1412:	df 92       	push	r13
    1414:	ef 92       	push	r14
    1416:	ff 92       	push	r15
    1418:	0f 93       	push	r16
    141a:	1f 93       	push	r17
    141c:	cf 93       	push	r28
    141e:	df 93       	push	r29
    1420:	cd b7       	in	r28, 0x3d	; 61
    1422:	de b7       	in	r29, 0x3e	; 62
    1424:	2b 97       	sbiw	r28, 0x0b	; 11
    1426:	cd bf       	out	0x3d, r28	; 61
    1428:	de bf       	out	0x3e, r29	; 62
    142a:	6c 01       	movw	r12, r24
    142c:	7b 01       	movw	r14, r22
    142e:	8a 01       	movw	r16, r20
    1430:	fc 01       	movw	r30, r24
    1432:	16 82       	std	Z+6, r1	; 0x06
    1434:	17 82       	std	Z+7, r1	; 0x07
    1436:	83 81       	ldd	r24, Z+3	; 0x03
    1438:	81 ff       	sbrs	r24, 1
    143a:	cc c1       	rjmp	.+920    	; 0x17d4 <vfprintf+0x3d8>
    143c:	ce 01       	movw	r24, r28
    143e:	01 96       	adiw	r24, 0x01	; 1
    1440:	3c 01       	movw	r6, r24
    1442:	f6 01       	movw	r30, r12
    1444:	93 81       	ldd	r25, Z+3	; 0x03
    1446:	f7 01       	movw	r30, r14
    1448:	93 fd       	sbrc	r25, 3
    144a:	85 91       	lpm	r24, Z+
    144c:	93 ff       	sbrs	r25, 3
    144e:	81 91       	ld	r24, Z+
    1450:	7f 01       	movw	r14, r30
    1452:	88 23       	and	r24, r24
    1454:	09 f4       	brne	.+2      	; 0x1458 <vfprintf+0x5c>
    1456:	ba c1       	rjmp	.+884    	; 0x17cc <vfprintf+0x3d0>
    1458:	85 32       	cpi	r24, 0x25	; 37
    145a:	39 f4       	brne	.+14     	; 0x146a <vfprintf+0x6e>
    145c:	93 fd       	sbrc	r25, 3
    145e:	85 91       	lpm	r24, Z+
    1460:	93 ff       	sbrs	r25, 3
    1462:	81 91       	ld	r24, Z+
    1464:	7f 01       	movw	r14, r30
    1466:	85 32       	cpi	r24, 0x25	; 37
    1468:	29 f4       	brne	.+10     	; 0x1474 <vfprintf+0x78>
    146a:	b6 01       	movw	r22, r12
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	0e 94 18 0c 	call	0x1830	; 0x1830 <fputc>
    1472:	e7 cf       	rjmp	.-50     	; 0x1442 <vfprintf+0x46>
    1474:	91 2c       	mov	r9, r1
    1476:	21 2c       	mov	r2, r1
    1478:	31 2c       	mov	r3, r1
    147a:	ff e1       	ldi	r31, 0x1F	; 31
    147c:	f3 15       	cp	r31, r3
    147e:	d8 f0       	brcs	.+54     	; 0x14b6 <vfprintf+0xba>
    1480:	8b 32       	cpi	r24, 0x2B	; 43
    1482:	79 f0       	breq	.+30     	; 0x14a2 <vfprintf+0xa6>
    1484:	38 f4       	brcc	.+14     	; 0x1494 <vfprintf+0x98>
    1486:	80 32       	cpi	r24, 0x20	; 32
    1488:	79 f0       	breq	.+30     	; 0x14a8 <vfprintf+0xac>
    148a:	83 32       	cpi	r24, 0x23	; 35
    148c:	a1 f4       	brne	.+40     	; 0x14b6 <vfprintf+0xba>
    148e:	23 2d       	mov	r18, r3
    1490:	20 61       	ori	r18, 0x10	; 16
    1492:	1d c0       	rjmp	.+58     	; 0x14ce <vfprintf+0xd2>
    1494:	8d 32       	cpi	r24, 0x2D	; 45
    1496:	61 f0       	breq	.+24     	; 0x14b0 <vfprintf+0xb4>
    1498:	80 33       	cpi	r24, 0x30	; 48
    149a:	69 f4       	brne	.+26     	; 0x14b6 <vfprintf+0xba>
    149c:	23 2d       	mov	r18, r3
    149e:	21 60       	ori	r18, 0x01	; 1
    14a0:	16 c0       	rjmp	.+44     	; 0x14ce <vfprintf+0xd2>
    14a2:	83 2d       	mov	r24, r3
    14a4:	82 60       	ori	r24, 0x02	; 2
    14a6:	38 2e       	mov	r3, r24
    14a8:	e3 2d       	mov	r30, r3
    14aa:	e4 60       	ori	r30, 0x04	; 4
    14ac:	3e 2e       	mov	r3, r30
    14ae:	2a c0       	rjmp	.+84     	; 0x1504 <vfprintf+0x108>
    14b0:	f3 2d       	mov	r31, r3
    14b2:	f8 60       	ori	r31, 0x08	; 8
    14b4:	1d c0       	rjmp	.+58     	; 0x14f0 <vfprintf+0xf4>
    14b6:	37 fc       	sbrc	r3, 7
    14b8:	2d c0       	rjmp	.+90     	; 0x1514 <vfprintf+0x118>
    14ba:	20 ed       	ldi	r18, 0xD0	; 208
    14bc:	28 0f       	add	r18, r24
    14be:	2a 30       	cpi	r18, 0x0A	; 10
    14c0:	40 f0       	brcs	.+16     	; 0x14d2 <vfprintf+0xd6>
    14c2:	8e 32       	cpi	r24, 0x2E	; 46
    14c4:	b9 f4       	brne	.+46     	; 0x14f4 <vfprintf+0xf8>
    14c6:	36 fc       	sbrc	r3, 6
    14c8:	81 c1       	rjmp	.+770    	; 0x17cc <vfprintf+0x3d0>
    14ca:	23 2d       	mov	r18, r3
    14cc:	20 64       	ori	r18, 0x40	; 64
    14ce:	32 2e       	mov	r3, r18
    14d0:	19 c0       	rjmp	.+50     	; 0x1504 <vfprintf+0x108>
    14d2:	36 fe       	sbrs	r3, 6
    14d4:	06 c0       	rjmp	.+12     	; 0x14e2 <vfprintf+0xe6>
    14d6:	8a e0       	ldi	r24, 0x0A	; 10
    14d8:	98 9e       	mul	r9, r24
    14da:	20 0d       	add	r18, r0
    14dc:	11 24       	eor	r1, r1
    14de:	92 2e       	mov	r9, r18
    14e0:	11 c0       	rjmp	.+34     	; 0x1504 <vfprintf+0x108>
    14e2:	ea e0       	ldi	r30, 0x0A	; 10
    14e4:	2e 9e       	mul	r2, r30
    14e6:	20 0d       	add	r18, r0
    14e8:	11 24       	eor	r1, r1
    14ea:	22 2e       	mov	r2, r18
    14ec:	f3 2d       	mov	r31, r3
    14ee:	f0 62       	ori	r31, 0x20	; 32
    14f0:	3f 2e       	mov	r3, r31
    14f2:	08 c0       	rjmp	.+16     	; 0x1504 <vfprintf+0x108>
    14f4:	8c 36       	cpi	r24, 0x6C	; 108
    14f6:	21 f4       	brne	.+8      	; 0x1500 <vfprintf+0x104>
    14f8:	83 2d       	mov	r24, r3
    14fa:	80 68       	ori	r24, 0x80	; 128
    14fc:	38 2e       	mov	r3, r24
    14fe:	02 c0       	rjmp	.+4      	; 0x1504 <vfprintf+0x108>
    1500:	88 36       	cpi	r24, 0x68	; 104
    1502:	41 f4       	brne	.+16     	; 0x1514 <vfprintf+0x118>
    1504:	f7 01       	movw	r30, r14
    1506:	93 fd       	sbrc	r25, 3
    1508:	85 91       	lpm	r24, Z+
    150a:	93 ff       	sbrs	r25, 3
    150c:	81 91       	ld	r24, Z+
    150e:	7f 01       	movw	r14, r30
    1510:	81 11       	cpse	r24, r1
    1512:	b3 cf       	rjmp	.-154    	; 0x147a <vfprintf+0x7e>
    1514:	98 2f       	mov	r25, r24
    1516:	9f 7d       	andi	r25, 0xDF	; 223
    1518:	95 54       	subi	r25, 0x45	; 69
    151a:	93 30       	cpi	r25, 0x03	; 3
    151c:	28 f4       	brcc	.+10     	; 0x1528 <vfprintf+0x12c>
    151e:	0c 5f       	subi	r16, 0xFC	; 252
    1520:	1f 4f       	sbci	r17, 0xFF	; 255
    1522:	9f e3       	ldi	r25, 0x3F	; 63
    1524:	99 83       	std	Y+1, r25	; 0x01
    1526:	0d c0       	rjmp	.+26     	; 0x1542 <vfprintf+0x146>
    1528:	83 36       	cpi	r24, 0x63	; 99
    152a:	31 f0       	breq	.+12     	; 0x1538 <vfprintf+0x13c>
    152c:	83 37       	cpi	r24, 0x73	; 115
    152e:	71 f0       	breq	.+28     	; 0x154c <vfprintf+0x150>
    1530:	83 35       	cpi	r24, 0x53	; 83
    1532:	09 f0       	breq	.+2      	; 0x1536 <vfprintf+0x13a>
    1534:	59 c0       	rjmp	.+178    	; 0x15e8 <vfprintf+0x1ec>
    1536:	21 c0       	rjmp	.+66     	; 0x157a <vfprintf+0x17e>
    1538:	f8 01       	movw	r30, r16
    153a:	80 81       	ld	r24, Z
    153c:	89 83       	std	Y+1, r24	; 0x01
    153e:	0e 5f       	subi	r16, 0xFE	; 254
    1540:	1f 4f       	sbci	r17, 0xFF	; 255
    1542:	88 24       	eor	r8, r8
    1544:	83 94       	inc	r8
    1546:	91 2c       	mov	r9, r1
    1548:	53 01       	movw	r10, r6
    154a:	13 c0       	rjmp	.+38     	; 0x1572 <vfprintf+0x176>
    154c:	28 01       	movw	r4, r16
    154e:	f2 e0       	ldi	r31, 0x02	; 2
    1550:	4f 0e       	add	r4, r31
    1552:	51 1c       	adc	r5, r1
    1554:	f8 01       	movw	r30, r16
    1556:	a0 80       	ld	r10, Z
    1558:	b1 80       	ldd	r11, Z+1	; 0x01
    155a:	36 fe       	sbrs	r3, 6
    155c:	03 c0       	rjmp	.+6      	; 0x1564 <vfprintf+0x168>
    155e:	69 2d       	mov	r22, r9
    1560:	70 e0       	ldi	r23, 0x00	; 0
    1562:	02 c0       	rjmp	.+4      	; 0x1568 <vfprintf+0x16c>
    1564:	6f ef       	ldi	r22, 0xFF	; 255
    1566:	7f ef       	ldi	r23, 0xFF	; 255
    1568:	c5 01       	movw	r24, r10
    156a:	0e 94 0d 0c 	call	0x181a	; 0x181a <strnlen>
    156e:	4c 01       	movw	r8, r24
    1570:	82 01       	movw	r16, r4
    1572:	f3 2d       	mov	r31, r3
    1574:	ff 77       	andi	r31, 0x7F	; 127
    1576:	3f 2e       	mov	r3, r31
    1578:	16 c0       	rjmp	.+44     	; 0x15a6 <vfprintf+0x1aa>
    157a:	28 01       	movw	r4, r16
    157c:	22 e0       	ldi	r18, 0x02	; 2
    157e:	42 0e       	add	r4, r18
    1580:	51 1c       	adc	r5, r1
    1582:	f8 01       	movw	r30, r16
    1584:	a0 80       	ld	r10, Z
    1586:	b1 80       	ldd	r11, Z+1	; 0x01
    1588:	36 fe       	sbrs	r3, 6
    158a:	03 c0       	rjmp	.+6      	; 0x1592 <vfprintf+0x196>
    158c:	69 2d       	mov	r22, r9
    158e:	70 e0       	ldi	r23, 0x00	; 0
    1590:	02 c0       	rjmp	.+4      	; 0x1596 <vfprintf+0x19a>
    1592:	6f ef       	ldi	r22, 0xFF	; 255
    1594:	7f ef       	ldi	r23, 0xFF	; 255
    1596:	c5 01       	movw	r24, r10
    1598:	0e 94 02 0c 	call	0x1804	; 0x1804 <strnlen_P>
    159c:	4c 01       	movw	r8, r24
    159e:	f3 2d       	mov	r31, r3
    15a0:	f0 68       	ori	r31, 0x80	; 128
    15a2:	3f 2e       	mov	r3, r31
    15a4:	82 01       	movw	r16, r4
    15a6:	33 fc       	sbrc	r3, 3
    15a8:	1b c0       	rjmp	.+54     	; 0x15e0 <vfprintf+0x1e4>
    15aa:	82 2d       	mov	r24, r2
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	88 16       	cp	r8, r24
    15b0:	99 06       	cpc	r9, r25
    15b2:	b0 f4       	brcc	.+44     	; 0x15e0 <vfprintf+0x1e4>
    15b4:	b6 01       	movw	r22, r12
    15b6:	80 e2       	ldi	r24, 0x20	; 32
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	0e 94 18 0c 	call	0x1830	; 0x1830 <fputc>
    15be:	2a 94       	dec	r2
    15c0:	f4 cf       	rjmp	.-24     	; 0x15aa <vfprintf+0x1ae>
    15c2:	f5 01       	movw	r30, r10
    15c4:	37 fc       	sbrc	r3, 7
    15c6:	85 91       	lpm	r24, Z+
    15c8:	37 fe       	sbrs	r3, 7
    15ca:	81 91       	ld	r24, Z+
    15cc:	5f 01       	movw	r10, r30
    15ce:	b6 01       	movw	r22, r12
    15d0:	90 e0       	ldi	r25, 0x00	; 0
    15d2:	0e 94 18 0c 	call	0x1830	; 0x1830 <fputc>
    15d6:	21 10       	cpse	r2, r1
    15d8:	2a 94       	dec	r2
    15da:	21 e0       	ldi	r18, 0x01	; 1
    15dc:	82 1a       	sub	r8, r18
    15de:	91 08       	sbc	r9, r1
    15e0:	81 14       	cp	r8, r1
    15e2:	91 04       	cpc	r9, r1
    15e4:	71 f7       	brne	.-36     	; 0x15c2 <vfprintf+0x1c6>
    15e6:	e8 c0       	rjmp	.+464    	; 0x17b8 <vfprintf+0x3bc>
    15e8:	84 36       	cpi	r24, 0x64	; 100
    15ea:	11 f0       	breq	.+4      	; 0x15f0 <vfprintf+0x1f4>
    15ec:	89 36       	cpi	r24, 0x69	; 105
    15ee:	41 f5       	brne	.+80     	; 0x1640 <vfprintf+0x244>
    15f0:	f8 01       	movw	r30, r16
    15f2:	37 fe       	sbrs	r3, 7
    15f4:	07 c0       	rjmp	.+14     	; 0x1604 <vfprintf+0x208>
    15f6:	60 81       	ld	r22, Z
    15f8:	71 81       	ldd	r23, Z+1	; 0x01
    15fa:	82 81       	ldd	r24, Z+2	; 0x02
    15fc:	93 81       	ldd	r25, Z+3	; 0x03
    15fe:	0c 5f       	subi	r16, 0xFC	; 252
    1600:	1f 4f       	sbci	r17, 0xFF	; 255
    1602:	08 c0       	rjmp	.+16     	; 0x1614 <vfprintf+0x218>
    1604:	60 81       	ld	r22, Z
    1606:	71 81       	ldd	r23, Z+1	; 0x01
    1608:	07 2e       	mov	r0, r23
    160a:	00 0c       	add	r0, r0
    160c:	88 0b       	sbc	r24, r24
    160e:	99 0b       	sbc	r25, r25
    1610:	0e 5f       	subi	r16, 0xFE	; 254
    1612:	1f 4f       	sbci	r17, 0xFF	; 255
    1614:	f3 2d       	mov	r31, r3
    1616:	ff 76       	andi	r31, 0x6F	; 111
    1618:	3f 2e       	mov	r3, r31
    161a:	97 ff       	sbrs	r25, 7
    161c:	09 c0       	rjmp	.+18     	; 0x1630 <vfprintf+0x234>
    161e:	90 95       	com	r25
    1620:	80 95       	com	r24
    1622:	70 95       	com	r23
    1624:	61 95       	neg	r22
    1626:	7f 4f       	sbci	r23, 0xFF	; 255
    1628:	8f 4f       	sbci	r24, 0xFF	; 255
    162a:	9f 4f       	sbci	r25, 0xFF	; 255
    162c:	f0 68       	ori	r31, 0x80	; 128
    162e:	3f 2e       	mov	r3, r31
    1630:	2a e0       	ldi	r18, 0x0A	; 10
    1632:	30 e0       	ldi	r19, 0x00	; 0
    1634:	a3 01       	movw	r20, r6
    1636:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__ultoa_invert>
    163a:	88 2e       	mov	r8, r24
    163c:	86 18       	sub	r8, r6
    163e:	45 c0       	rjmp	.+138    	; 0x16ca <vfprintf+0x2ce>
    1640:	85 37       	cpi	r24, 0x75	; 117
    1642:	31 f4       	brne	.+12     	; 0x1650 <vfprintf+0x254>
    1644:	23 2d       	mov	r18, r3
    1646:	2f 7e       	andi	r18, 0xEF	; 239
    1648:	b2 2e       	mov	r11, r18
    164a:	2a e0       	ldi	r18, 0x0A	; 10
    164c:	30 e0       	ldi	r19, 0x00	; 0
    164e:	25 c0       	rjmp	.+74     	; 0x169a <vfprintf+0x29e>
    1650:	93 2d       	mov	r25, r3
    1652:	99 7f       	andi	r25, 0xF9	; 249
    1654:	b9 2e       	mov	r11, r25
    1656:	8f 36       	cpi	r24, 0x6F	; 111
    1658:	c1 f0       	breq	.+48     	; 0x168a <vfprintf+0x28e>
    165a:	18 f4       	brcc	.+6      	; 0x1662 <vfprintf+0x266>
    165c:	88 35       	cpi	r24, 0x58	; 88
    165e:	79 f0       	breq	.+30     	; 0x167e <vfprintf+0x282>
    1660:	b5 c0       	rjmp	.+362    	; 0x17cc <vfprintf+0x3d0>
    1662:	80 37       	cpi	r24, 0x70	; 112
    1664:	19 f0       	breq	.+6      	; 0x166c <vfprintf+0x270>
    1666:	88 37       	cpi	r24, 0x78	; 120
    1668:	21 f0       	breq	.+8      	; 0x1672 <vfprintf+0x276>
    166a:	b0 c0       	rjmp	.+352    	; 0x17cc <vfprintf+0x3d0>
    166c:	e9 2f       	mov	r30, r25
    166e:	e0 61       	ori	r30, 0x10	; 16
    1670:	be 2e       	mov	r11, r30
    1672:	b4 fe       	sbrs	r11, 4
    1674:	0d c0       	rjmp	.+26     	; 0x1690 <vfprintf+0x294>
    1676:	fb 2d       	mov	r31, r11
    1678:	f4 60       	ori	r31, 0x04	; 4
    167a:	bf 2e       	mov	r11, r31
    167c:	09 c0       	rjmp	.+18     	; 0x1690 <vfprintf+0x294>
    167e:	34 fe       	sbrs	r3, 4
    1680:	0a c0       	rjmp	.+20     	; 0x1696 <vfprintf+0x29a>
    1682:	29 2f       	mov	r18, r25
    1684:	26 60       	ori	r18, 0x06	; 6
    1686:	b2 2e       	mov	r11, r18
    1688:	06 c0       	rjmp	.+12     	; 0x1696 <vfprintf+0x29a>
    168a:	28 e0       	ldi	r18, 0x08	; 8
    168c:	30 e0       	ldi	r19, 0x00	; 0
    168e:	05 c0       	rjmp	.+10     	; 0x169a <vfprintf+0x29e>
    1690:	20 e1       	ldi	r18, 0x10	; 16
    1692:	30 e0       	ldi	r19, 0x00	; 0
    1694:	02 c0       	rjmp	.+4      	; 0x169a <vfprintf+0x29e>
    1696:	20 e1       	ldi	r18, 0x10	; 16
    1698:	32 e0       	ldi	r19, 0x02	; 2
    169a:	f8 01       	movw	r30, r16
    169c:	b7 fe       	sbrs	r11, 7
    169e:	07 c0       	rjmp	.+14     	; 0x16ae <vfprintf+0x2b2>
    16a0:	60 81       	ld	r22, Z
    16a2:	71 81       	ldd	r23, Z+1	; 0x01
    16a4:	82 81       	ldd	r24, Z+2	; 0x02
    16a6:	93 81       	ldd	r25, Z+3	; 0x03
    16a8:	0c 5f       	subi	r16, 0xFC	; 252
    16aa:	1f 4f       	sbci	r17, 0xFF	; 255
    16ac:	06 c0       	rjmp	.+12     	; 0x16ba <vfprintf+0x2be>
    16ae:	60 81       	ld	r22, Z
    16b0:	71 81       	ldd	r23, Z+1	; 0x01
    16b2:	80 e0       	ldi	r24, 0x00	; 0
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	0e 5f       	subi	r16, 0xFE	; 254
    16b8:	1f 4f       	sbci	r17, 0xFF	; 255
    16ba:	a3 01       	movw	r20, r6
    16bc:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <__ultoa_invert>
    16c0:	88 2e       	mov	r8, r24
    16c2:	86 18       	sub	r8, r6
    16c4:	fb 2d       	mov	r31, r11
    16c6:	ff 77       	andi	r31, 0x7F	; 127
    16c8:	3f 2e       	mov	r3, r31
    16ca:	36 fe       	sbrs	r3, 6
    16cc:	0d c0       	rjmp	.+26     	; 0x16e8 <vfprintf+0x2ec>
    16ce:	23 2d       	mov	r18, r3
    16d0:	2e 7f       	andi	r18, 0xFE	; 254
    16d2:	a2 2e       	mov	r10, r18
    16d4:	89 14       	cp	r8, r9
    16d6:	58 f4       	brcc	.+22     	; 0x16ee <vfprintf+0x2f2>
    16d8:	34 fe       	sbrs	r3, 4
    16da:	0b c0       	rjmp	.+22     	; 0x16f2 <vfprintf+0x2f6>
    16dc:	32 fc       	sbrc	r3, 2
    16de:	09 c0       	rjmp	.+18     	; 0x16f2 <vfprintf+0x2f6>
    16e0:	83 2d       	mov	r24, r3
    16e2:	8e 7e       	andi	r24, 0xEE	; 238
    16e4:	a8 2e       	mov	r10, r24
    16e6:	05 c0       	rjmp	.+10     	; 0x16f2 <vfprintf+0x2f6>
    16e8:	b8 2c       	mov	r11, r8
    16ea:	a3 2c       	mov	r10, r3
    16ec:	03 c0       	rjmp	.+6      	; 0x16f4 <vfprintf+0x2f8>
    16ee:	b8 2c       	mov	r11, r8
    16f0:	01 c0       	rjmp	.+2      	; 0x16f4 <vfprintf+0x2f8>
    16f2:	b9 2c       	mov	r11, r9
    16f4:	a4 fe       	sbrs	r10, 4
    16f6:	0f c0       	rjmp	.+30     	; 0x1716 <vfprintf+0x31a>
    16f8:	fe 01       	movw	r30, r28
    16fa:	e8 0d       	add	r30, r8
    16fc:	f1 1d       	adc	r31, r1
    16fe:	80 81       	ld	r24, Z
    1700:	80 33       	cpi	r24, 0x30	; 48
    1702:	21 f4       	brne	.+8      	; 0x170c <vfprintf+0x310>
    1704:	9a 2d       	mov	r25, r10
    1706:	99 7e       	andi	r25, 0xE9	; 233
    1708:	a9 2e       	mov	r10, r25
    170a:	09 c0       	rjmp	.+18     	; 0x171e <vfprintf+0x322>
    170c:	a2 fe       	sbrs	r10, 2
    170e:	06 c0       	rjmp	.+12     	; 0x171c <vfprintf+0x320>
    1710:	b3 94       	inc	r11
    1712:	b3 94       	inc	r11
    1714:	04 c0       	rjmp	.+8      	; 0x171e <vfprintf+0x322>
    1716:	8a 2d       	mov	r24, r10
    1718:	86 78       	andi	r24, 0x86	; 134
    171a:	09 f0       	breq	.+2      	; 0x171e <vfprintf+0x322>
    171c:	b3 94       	inc	r11
    171e:	a3 fc       	sbrc	r10, 3
    1720:	11 c0       	rjmp	.+34     	; 0x1744 <vfprintf+0x348>
    1722:	a0 fe       	sbrs	r10, 0
    1724:	06 c0       	rjmp	.+12     	; 0x1732 <vfprintf+0x336>
    1726:	b2 14       	cp	r11, r2
    1728:	88 f4       	brcc	.+34     	; 0x174c <vfprintf+0x350>
    172a:	28 0c       	add	r2, r8
    172c:	92 2c       	mov	r9, r2
    172e:	9b 18       	sub	r9, r11
    1730:	0e c0       	rjmp	.+28     	; 0x174e <vfprintf+0x352>
    1732:	b2 14       	cp	r11, r2
    1734:	60 f4       	brcc	.+24     	; 0x174e <vfprintf+0x352>
    1736:	b6 01       	movw	r22, r12
    1738:	80 e2       	ldi	r24, 0x20	; 32
    173a:	90 e0       	ldi	r25, 0x00	; 0
    173c:	0e 94 18 0c 	call	0x1830	; 0x1830 <fputc>
    1740:	b3 94       	inc	r11
    1742:	f7 cf       	rjmp	.-18     	; 0x1732 <vfprintf+0x336>
    1744:	b2 14       	cp	r11, r2
    1746:	18 f4       	brcc	.+6      	; 0x174e <vfprintf+0x352>
    1748:	2b 18       	sub	r2, r11
    174a:	02 c0       	rjmp	.+4      	; 0x1750 <vfprintf+0x354>
    174c:	98 2c       	mov	r9, r8
    174e:	21 2c       	mov	r2, r1
    1750:	a4 fe       	sbrs	r10, 4
    1752:	10 c0       	rjmp	.+32     	; 0x1774 <vfprintf+0x378>
    1754:	b6 01       	movw	r22, r12
    1756:	80 e3       	ldi	r24, 0x30	; 48
    1758:	90 e0       	ldi	r25, 0x00	; 0
    175a:	0e 94 18 0c 	call	0x1830	; 0x1830 <fputc>
    175e:	a2 fe       	sbrs	r10, 2
    1760:	17 c0       	rjmp	.+46     	; 0x1790 <vfprintf+0x394>
    1762:	a1 fc       	sbrc	r10, 1
    1764:	03 c0       	rjmp	.+6      	; 0x176c <vfprintf+0x370>
    1766:	88 e7       	ldi	r24, 0x78	; 120
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	02 c0       	rjmp	.+4      	; 0x1770 <vfprintf+0x374>
    176c:	88 e5       	ldi	r24, 0x58	; 88
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	b6 01       	movw	r22, r12
    1772:	0c c0       	rjmp	.+24     	; 0x178c <vfprintf+0x390>
    1774:	8a 2d       	mov	r24, r10
    1776:	86 78       	andi	r24, 0x86	; 134
    1778:	59 f0       	breq	.+22     	; 0x1790 <vfprintf+0x394>
    177a:	a1 fe       	sbrs	r10, 1
    177c:	02 c0       	rjmp	.+4      	; 0x1782 <vfprintf+0x386>
    177e:	8b e2       	ldi	r24, 0x2B	; 43
    1780:	01 c0       	rjmp	.+2      	; 0x1784 <vfprintf+0x388>
    1782:	80 e2       	ldi	r24, 0x20	; 32
    1784:	a7 fc       	sbrc	r10, 7
    1786:	8d e2       	ldi	r24, 0x2D	; 45
    1788:	b6 01       	movw	r22, r12
    178a:	90 e0       	ldi	r25, 0x00	; 0
    178c:	0e 94 18 0c 	call	0x1830	; 0x1830 <fputc>
    1790:	89 14       	cp	r8, r9
    1792:	38 f4       	brcc	.+14     	; 0x17a2 <vfprintf+0x3a6>
    1794:	b6 01       	movw	r22, r12
    1796:	80 e3       	ldi	r24, 0x30	; 48
    1798:	90 e0       	ldi	r25, 0x00	; 0
    179a:	0e 94 18 0c 	call	0x1830	; 0x1830 <fputc>
    179e:	9a 94       	dec	r9
    17a0:	f7 cf       	rjmp	.-18     	; 0x1790 <vfprintf+0x394>
    17a2:	8a 94       	dec	r8
    17a4:	f3 01       	movw	r30, r6
    17a6:	e8 0d       	add	r30, r8
    17a8:	f1 1d       	adc	r31, r1
    17aa:	80 81       	ld	r24, Z
    17ac:	b6 01       	movw	r22, r12
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	0e 94 18 0c 	call	0x1830	; 0x1830 <fputc>
    17b4:	81 10       	cpse	r8, r1
    17b6:	f5 cf       	rjmp	.-22     	; 0x17a2 <vfprintf+0x3a6>
    17b8:	22 20       	and	r2, r2
    17ba:	09 f4       	brne	.+2      	; 0x17be <vfprintf+0x3c2>
    17bc:	42 ce       	rjmp	.-892    	; 0x1442 <vfprintf+0x46>
    17be:	b6 01       	movw	r22, r12
    17c0:	80 e2       	ldi	r24, 0x20	; 32
    17c2:	90 e0       	ldi	r25, 0x00	; 0
    17c4:	0e 94 18 0c 	call	0x1830	; 0x1830 <fputc>
    17c8:	2a 94       	dec	r2
    17ca:	f6 cf       	rjmp	.-20     	; 0x17b8 <vfprintf+0x3bc>
    17cc:	f6 01       	movw	r30, r12
    17ce:	86 81       	ldd	r24, Z+6	; 0x06
    17d0:	97 81       	ldd	r25, Z+7	; 0x07
    17d2:	02 c0       	rjmp	.+4      	; 0x17d8 <vfprintf+0x3dc>
    17d4:	8f ef       	ldi	r24, 0xFF	; 255
    17d6:	9f ef       	ldi	r25, 0xFF	; 255
    17d8:	2b 96       	adiw	r28, 0x0b	; 11
    17da:	cd bf       	out	0x3d, r28	; 61
    17dc:	de bf       	out	0x3e, r29	; 62
    17de:	df 91       	pop	r29
    17e0:	cf 91       	pop	r28
    17e2:	1f 91       	pop	r17
    17e4:	0f 91       	pop	r16
    17e6:	ff 90       	pop	r15
    17e8:	ef 90       	pop	r14
    17ea:	df 90       	pop	r13
    17ec:	cf 90       	pop	r12
    17ee:	bf 90       	pop	r11
    17f0:	af 90       	pop	r10
    17f2:	9f 90       	pop	r9
    17f4:	8f 90       	pop	r8
    17f6:	7f 90       	pop	r7
    17f8:	6f 90       	pop	r6
    17fa:	5f 90       	pop	r5
    17fc:	4f 90       	pop	r4
    17fe:	3f 90       	pop	r3
    1800:	2f 90       	pop	r2
    1802:	08 95       	ret

00001804 <strnlen_P>:
    1804:	fc 01       	movw	r30, r24
    1806:	05 90       	lpm	r0, Z+
    1808:	61 50       	subi	r22, 0x01	; 1
    180a:	70 40       	sbci	r23, 0x00	; 0
    180c:	01 10       	cpse	r0, r1
    180e:	d8 f7       	brcc	.-10     	; 0x1806 <strnlen_P+0x2>
    1810:	80 95       	com	r24
    1812:	90 95       	com	r25
    1814:	8e 0f       	add	r24, r30
    1816:	9f 1f       	adc	r25, r31
    1818:	08 95       	ret

0000181a <strnlen>:
    181a:	fc 01       	movw	r30, r24
    181c:	61 50       	subi	r22, 0x01	; 1
    181e:	70 40       	sbci	r23, 0x00	; 0
    1820:	01 90       	ld	r0, Z+
    1822:	01 10       	cpse	r0, r1
    1824:	d8 f7       	brcc	.-10     	; 0x181c <strnlen+0x2>
    1826:	80 95       	com	r24
    1828:	90 95       	com	r25
    182a:	8e 0f       	add	r24, r30
    182c:	9f 1f       	adc	r25, r31
    182e:	08 95       	ret

00001830 <fputc>:
    1830:	0f 93       	push	r16
    1832:	1f 93       	push	r17
    1834:	cf 93       	push	r28
    1836:	df 93       	push	r29
    1838:	fb 01       	movw	r30, r22
    183a:	23 81       	ldd	r18, Z+3	; 0x03
    183c:	21 fd       	sbrc	r18, 1
    183e:	03 c0       	rjmp	.+6      	; 0x1846 <fputc+0x16>
    1840:	8f ef       	ldi	r24, 0xFF	; 255
    1842:	9f ef       	ldi	r25, 0xFF	; 255
    1844:	2c c0       	rjmp	.+88     	; 0x189e <fputc+0x6e>
    1846:	22 ff       	sbrs	r18, 2
    1848:	16 c0       	rjmp	.+44     	; 0x1876 <fputc+0x46>
    184a:	46 81       	ldd	r20, Z+6	; 0x06
    184c:	57 81       	ldd	r21, Z+7	; 0x07
    184e:	24 81       	ldd	r18, Z+4	; 0x04
    1850:	35 81       	ldd	r19, Z+5	; 0x05
    1852:	42 17       	cp	r20, r18
    1854:	53 07       	cpc	r21, r19
    1856:	44 f4       	brge	.+16     	; 0x1868 <fputc+0x38>
    1858:	a0 81       	ld	r26, Z
    185a:	b1 81       	ldd	r27, Z+1	; 0x01
    185c:	9d 01       	movw	r18, r26
    185e:	2f 5f       	subi	r18, 0xFF	; 255
    1860:	3f 4f       	sbci	r19, 0xFF	; 255
    1862:	20 83       	st	Z, r18
    1864:	31 83       	std	Z+1, r19	; 0x01
    1866:	8c 93       	st	X, r24
    1868:	26 81       	ldd	r18, Z+6	; 0x06
    186a:	37 81       	ldd	r19, Z+7	; 0x07
    186c:	2f 5f       	subi	r18, 0xFF	; 255
    186e:	3f 4f       	sbci	r19, 0xFF	; 255
    1870:	26 83       	std	Z+6, r18	; 0x06
    1872:	37 83       	std	Z+7, r19	; 0x07
    1874:	14 c0       	rjmp	.+40     	; 0x189e <fputc+0x6e>
    1876:	8b 01       	movw	r16, r22
    1878:	ec 01       	movw	r28, r24
    187a:	fb 01       	movw	r30, r22
    187c:	00 84       	ldd	r0, Z+8	; 0x08
    187e:	f1 85       	ldd	r31, Z+9	; 0x09
    1880:	e0 2d       	mov	r30, r0
    1882:	09 95       	icall
    1884:	89 2b       	or	r24, r25
    1886:	e1 f6       	brne	.-72     	; 0x1840 <fputc+0x10>
    1888:	d8 01       	movw	r26, r16
    188a:	16 96       	adiw	r26, 0x06	; 6
    188c:	8d 91       	ld	r24, X+
    188e:	9c 91       	ld	r25, X
    1890:	17 97       	sbiw	r26, 0x07	; 7
    1892:	01 96       	adiw	r24, 0x01	; 1
    1894:	16 96       	adiw	r26, 0x06	; 6
    1896:	8d 93       	st	X+, r24
    1898:	9c 93       	st	X, r25
    189a:	17 97       	sbiw	r26, 0x07	; 7
    189c:	ce 01       	movw	r24, r28
    189e:	df 91       	pop	r29
    18a0:	cf 91       	pop	r28
    18a2:	1f 91       	pop	r17
    18a4:	0f 91       	pop	r16
    18a6:	08 95       	ret

000018a8 <__ultoa_invert>:
    18a8:	fa 01       	movw	r30, r20
    18aa:	aa 27       	eor	r26, r26
    18ac:	28 30       	cpi	r18, 0x08	; 8
    18ae:	51 f1       	breq	.+84     	; 0x1904 <__ultoa_invert+0x5c>
    18b0:	20 31       	cpi	r18, 0x10	; 16
    18b2:	81 f1       	breq	.+96     	; 0x1914 <__ultoa_invert+0x6c>
    18b4:	e8 94       	clt
    18b6:	6f 93       	push	r22
    18b8:	6e 7f       	andi	r22, 0xFE	; 254
    18ba:	6e 5f       	subi	r22, 0xFE	; 254
    18bc:	7f 4f       	sbci	r23, 0xFF	; 255
    18be:	8f 4f       	sbci	r24, 0xFF	; 255
    18c0:	9f 4f       	sbci	r25, 0xFF	; 255
    18c2:	af 4f       	sbci	r26, 0xFF	; 255
    18c4:	b1 e0       	ldi	r27, 0x01	; 1
    18c6:	3e d0       	rcall	.+124    	; 0x1944 <__ultoa_invert+0x9c>
    18c8:	b4 e0       	ldi	r27, 0x04	; 4
    18ca:	3c d0       	rcall	.+120    	; 0x1944 <__ultoa_invert+0x9c>
    18cc:	67 0f       	add	r22, r23
    18ce:	78 1f       	adc	r23, r24
    18d0:	89 1f       	adc	r24, r25
    18d2:	9a 1f       	adc	r25, r26
    18d4:	a1 1d       	adc	r26, r1
    18d6:	68 0f       	add	r22, r24
    18d8:	79 1f       	adc	r23, r25
    18da:	8a 1f       	adc	r24, r26
    18dc:	91 1d       	adc	r25, r1
    18de:	a1 1d       	adc	r26, r1
    18e0:	6a 0f       	add	r22, r26
    18e2:	71 1d       	adc	r23, r1
    18e4:	81 1d       	adc	r24, r1
    18e6:	91 1d       	adc	r25, r1
    18e8:	a1 1d       	adc	r26, r1
    18ea:	20 d0       	rcall	.+64     	; 0x192c <__ultoa_invert+0x84>
    18ec:	09 f4       	brne	.+2      	; 0x18f0 <__ultoa_invert+0x48>
    18ee:	68 94       	set
    18f0:	3f 91       	pop	r19
    18f2:	2a e0       	ldi	r18, 0x0A	; 10
    18f4:	26 9f       	mul	r18, r22
    18f6:	11 24       	eor	r1, r1
    18f8:	30 19       	sub	r19, r0
    18fa:	30 5d       	subi	r19, 0xD0	; 208
    18fc:	31 93       	st	Z+, r19
    18fe:	de f6       	brtc	.-74     	; 0x18b6 <__ultoa_invert+0xe>
    1900:	cf 01       	movw	r24, r30
    1902:	08 95       	ret
    1904:	46 2f       	mov	r20, r22
    1906:	47 70       	andi	r20, 0x07	; 7
    1908:	40 5d       	subi	r20, 0xD0	; 208
    190a:	41 93       	st	Z+, r20
    190c:	b3 e0       	ldi	r27, 0x03	; 3
    190e:	0f d0       	rcall	.+30     	; 0x192e <__ultoa_invert+0x86>
    1910:	c9 f7       	brne	.-14     	; 0x1904 <__ultoa_invert+0x5c>
    1912:	f6 cf       	rjmp	.-20     	; 0x1900 <__ultoa_invert+0x58>
    1914:	46 2f       	mov	r20, r22
    1916:	4f 70       	andi	r20, 0x0F	; 15
    1918:	40 5d       	subi	r20, 0xD0	; 208
    191a:	4a 33       	cpi	r20, 0x3A	; 58
    191c:	18 f0       	brcs	.+6      	; 0x1924 <__ultoa_invert+0x7c>
    191e:	49 5d       	subi	r20, 0xD9	; 217
    1920:	31 fd       	sbrc	r19, 1
    1922:	40 52       	subi	r20, 0x20	; 32
    1924:	41 93       	st	Z+, r20
    1926:	02 d0       	rcall	.+4      	; 0x192c <__ultoa_invert+0x84>
    1928:	a9 f7       	brne	.-22     	; 0x1914 <__ultoa_invert+0x6c>
    192a:	ea cf       	rjmp	.-44     	; 0x1900 <__ultoa_invert+0x58>
    192c:	b4 e0       	ldi	r27, 0x04	; 4
    192e:	a6 95       	lsr	r26
    1930:	97 95       	ror	r25
    1932:	87 95       	ror	r24
    1934:	77 95       	ror	r23
    1936:	67 95       	ror	r22
    1938:	ba 95       	dec	r27
    193a:	c9 f7       	brne	.-14     	; 0x192e <__ultoa_invert+0x86>
    193c:	00 97       	sbiw	r24, 0x00	; 0
    193e:	61 05       	cpc	r22, r1
    1940:	71 05       	cpc	r23, r1
    1942:	08 95       	ret
    1944:	9b 01       	movw	r18, r22
    1946:	ac 01       	movw	r20, r24
    1948:	0a 2e       	mov	r0, r26
    194a:	06 94       	lsr	r0
    194c:	57 95       	ror	r21
    194e:	47 95       	ror	r20
    1950:	37 95       	ror	r19
    1952:	27 95       	ror	r18
    1954:	ba 95       	dec	r27
    1956:	c9 f7       	brne	.-14     	; 0x194a <__ultoa_invert+0xa2>
    1958:	62 0f       	add	r22, r18
    195a:	73 1f       	adc	r23, r19
    195c:	84 1f       	adc	r24, r20
    195e:	95 1f       	adc	r25, r21
    1960:	a0 1d       	adc	r26, r0
    1962:	08 95       	ret

00001964 <_exit>:
    1964:	f8 94       	cli

00001966 <__stop_program>:
    1966:	ff cf       	rjmp	.-2      	; 0x1966 <__stop_program>
