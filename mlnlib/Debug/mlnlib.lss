
mlnlib.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00804000  000010c0  00001154  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000067  0080401a  0080401a  0000116e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000116e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  000011e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007a81  00000000  00000000  00001400  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003d92  00000000  00000000  00008e81  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013b0  00000000  00000000  0000cc13  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006f4  00000000  00000000  0000dfc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000255e  00000000  00000000  0000e6b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001953  00000000  00000000  00010c16  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  00012569  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__ctors_end>
       4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
       8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
       c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      10:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      14:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      18:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      1c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      20:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      24:	0c 94 a3 03 	jmp	0x746	; 0x746 <__vector_9>
      28:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      2c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      30:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      34:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      38:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      3c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      40:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      44:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      48:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      4c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      50:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      54:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      58:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      5c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      60:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      64:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      68:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      6c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      70:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      74:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      78:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      7c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      80:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      84:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      88:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      8c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      90:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      94:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      98:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      9c:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      a0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      a4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      a8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      ac:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      b0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      b4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      b8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      bc:	0c 94 d6 03 	jmp	0x7ac	; 0x7ac <__vector_47>
      c0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      c4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      c8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      cc:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      d0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      d4:	0c 94 d6 05 	jmp	0xbac	; 0xbac <__vector_53>
      d8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      dc:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      e0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      e4:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      e8:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      ec:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>
      f0:	0c 94 a5 00 	jmp	0x14a	; 0x14a <__bad_interrupt>

000000f4 <__ctors_start>:
      f4:	35 02       	muls	r19, r21

000000f6 <__ctors_end>:
      f6:	11 24       	eor	r1, r1
      f8:	1f be       	out	0x3f, r1	; 63
      fa:	cf ef       	ldi	r28, 0xFF	; 255
      fc:	cd bf       	out	0x3d, r28	; 61
      fe:	df e7       	ldi	r29, 0x7F	; 127
     100:	de bf       	out	0x3e, r29	; 62

00000102 <__do_copy_data>:
     102:	10 e4       	ldi	r17, 0x40	; 64
     104:	a0 e0       	ldi	r26, 0x00	; 0
     106:	b0 e4       	ldi	r27, 0x40	; 64
     108:	e0 ec       	ldi	r30, 0xC0	; 192
     10a:	f0 e1       	ldi	r31, 0x10	; 16
     10c:	00 e0       	ldi	r16, 0x00	; 0
     10e:	0b bf       	out	0x3b, r16	; 59
     110:	02 c0       	rjmp	.+4      	; 0x116 <__do_copy_data+0x14>
     112:	07 90       	elpm	r0, Z+
     114:	0d 92       	st	X+, r0
     116:	aa 31       	cpi	r26, 0x1A	; 26
     118:	b1 07       	cpc	r27, r17
     11a:	d9 f7       	brne	.-10     	; 0x112 <__do_copy_data+0x10>

0000011c <__do_clear_bss>:
     11c:	20 e4       	ldi	r18, 0x40	; 64
     11e:	aa e1       	ldi	r26, 0x1A	; 26
     120:	b0 e4       	ldi	r27, 0x40	; 64
     122:	01 c0       	rjmp	.+2      	; 0x126 <.do_clear_bss_start>

00000124 <.do_clear_bss_loop>:
     124:	1d 92       	st	X+, r1

00000126 <.do_clear_bss_start>:
     126:	a1 38       	cpi	r26, 0x81	; 129
     128:	b2 07       	cpc	r27, r18
     12a:	e1 f7       	brne	.-8      	; 0x124 <.do_clear_bss_loop>

0000012c <__do_global_ctors>:
     12c:	10 e0       	ldi	r17, 0x00	; 0
     12e:	cb e7       	ldi	r28, 0x7B	; 123
     130:	d0 e0       	ldi	r29, 0x00	; 0
     132:	04 c0       	rjmp	.+8      	; 0x13c <__do_global_ctors+0x10>
     134:	21 97       	sbiw	r28, 0x01	; 1
     136:	fe 01       	movw	r30, r28
     138:	0e 94 46 08 	call	0x108c	; 0x108c <__tablejump2__>
     13c:	ca 37       	cpi	r28, 0x7A	; 122
     13e:	d1 07       	cpc	r29, r17
     140:	c9 f7       	brne	.-14     	; 0x134 <__do_global_ctors+0x8>
     142:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <main>
     146:	0c 94 5e 08 	jmp	0x10bc	; 0x10bc <_exit>

0000014a <__bad_interrupt>:
     14a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014e <_ZN7mcp4822C1EP10SPI_struct14mln_gpio_pin_sS2_>:
*/


#include "mcp4822.h"

mcp4822::mcp4822(SPI_t *new_spi, PIN_t cs, PIN_t new_ldac)
     14e:	8f 92       	push	r8
     150:	9f 92       	push	r9
     152:	af 92       	push	r10
     154:	bf 92       	push	r11
     156:	cf 92       	push	r12
     158:	df 92       	push	r13
     15a:	ef 92       	push	r14
     15c:	ff 92       	push	r15
     15e:	0f 93       	push	r16
     160:	cf 93       	push	r28
     162:	df 93       	push	r29
     164:	cd b7       	in	r28, 0x3d	; 61
     166:	de b7       	in	r29, 0x3e	; 62
     168:	62 97       	sbiw	r28, 0x12	; 18
     16a:	cd bf       	out	0x3d, r28	; 61
     16c:	de bf       	out	0x3e, r29	; 62
     16e:	5c 01       	movw	r10, r24
     170:	4b 01       	movw	r8, r22
     172:	2d 87       	std	Y+13, r18	; 0x0d
     174:	3e 87       	std	Y+14, r19	; 0x0e
     176:	4f 87       	std	Y+15, r20	; 0x0f
     178:	e8 8a       	std	Y+16, r14	; 0x10
     17a:	f9 8a       	std	Y+17, r15	; 0x11
     17c:	0a 8b       	std	Y+18, r16	; 0x12
     17e:	0e 94 b7 02 	call	0x56e	; 0x56e <_ZN7mln_spiC1Ev>
     182:	65 01       	movw	r12, r10
     184:	87 e0       	ldi	r24, 0x07	; 7
     186:	c8 0e       	add	r12, r24
     188:	d1 1c       	adc	r13, r1
     18a:	c6 01       	movw	r24, r12
     18c:	0e 94 22 01 	call	0x244	; 0x244 <_ZN8mln_gpioC1Ev>
{
	spi = mln_spi(new_spi, cs);
     190:	2d 85       	ldd	r18, Y+13	; 0x0d
     192:	3e 85       	ldd	r19, Y+14	; 0x0e
     194:	4f 85       	ldd	r20, Y+15	; 0x0f
     196:	b4 01       	movw	r22, r8
     198:	ce 01       	movw	r24, r28
     19a:	06 96       	adiw	r24, 0x06	; 6
     19c:	0e 94 3c 02 	call	0x478	; 0x478 <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s>
     1a0:	87 e0       	ldi	r24, 0x07	; 7
     1a2:	fe 01       	movw	r30, r28
     1a4:	36 96       	adiw	r30, 0x06	; 6
     1a6:	d5 01       	movw	r26, r10
     1a8:	01 90       	ld	r0, Z+
     1aa:	0d 92       	st	X+, r0
     1ac:	8a 95       	dec	r24
     1ae:	e1 f7       	brne	.-8      	; 0x1a8 <_ZN7mcp4822C1EP10SPI_struct14mln_gpio_pin_sS2_+0x5a>
	ldac = mln_gpio(new_ldac, OUTPUT);
     1b0:	00 e0       	ldi	r16, 0x00	; 0
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	48 89       	ldd	r20, Y+16	; 0x10
     1b6:	59 89       	ldd	r21, Y+17	; 0x11
     1b8:	6a 89       	ldd	r22, Y+18	; 0x12
     1ba:	ce 01       	movw	r24, r28
     1bc:	01 96       	adiw	r24, 0x01	; 1
     1be:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     1c2:	85 e0       	ldi	r24, 0x05	; 5
     1c4:	fe 01       	movw	r30, r28
     1c6:	31 96       	adiw	r30, 0x01	; 1
     1c8:	d6 01       	movw	r26, r12
     1ca:	01 90       	ld	r0, Z+
     1cc:	0d 92       	st	X+, r0
     1ce:	8a 95       	dec	r24
     1d0:	e1 f7       	brne	.-8      	; 0x1ca <_ZN7mcp4822C1EP10SPI_struct14mln_gpio_pin_sS2_+0x7c>

	ldac.set();
     1d2:	c6 01       	movw	r24, r12
     1d4:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <_ZN8mln_gpio3setEv>
} //mcp4822
     1d8:	62 96       	adiw	r28, 0x12	; 18
     1da:	cd bf       	out	0x3d, r28	; 61
     1dc:	de bf       	out	0x3e, r29	; 62
     1de:	df 91       	pop	r29
     1e0:	cf 91       	pop	r28
     1e2:	0f 91       	pop	r16
     1e4:	ff 90       	pop	r15
     1e6:	ef 90       	pop	r14
     1e8:	df 90       	pop	r13
     1ea:	cf 90       	pop	r12
     1ec:	bf 90       	pop	r11
     1ee:	af 90       	pop	r10
     1f0:	9f 90       	pop	r9
     1f2:	8f 90       	pop	r8
     1f4:	08 95       	ret

000001f6 <_ZN7mcp48228set_gainE14mln_spi_gain_s>:

void mcp4822::set_gain(MCP4822_GAIN_t new_gain)
{
	gain = new_gain;
     1f6:	fc 01       	movw	r30, r24
     1f8:	64 87       	std	Z+12, r22	; 0x0c
     1fa:	08 95       	ret

000001fc <_ZN7mcp48225writeE17mln_spi_channel_sj>:
}

void mcp4822::write(MCP4822_CHANNEL_t channel, uint16_t	value)
{
     1fc:	cf 93       	push	r28
     1fe:	df 93       	push	r29
     200:	ec 01       	movw	r28, r24
     202:	85 2f       	mov	r24, r21
	buffer[0] = (channel << 7) | (gain << 5) | MCP4822_ENABLE_bm | (uint8_t)(value >> 8);
     204:	50 e8       	ldi	r21, 0x80	; 128
     206:	65 9f       	mul	r22, r21
     208:	b0 01       	movw	r22, r0
     20a:	11 24       	eor	r1, r1
     20c:	9c 85       	ldd	r25, Y+12	; 0x0c
     20e:	50 e2       	ldi	r21, 0x20	; 32
     210:	95 9f       	mul	r25, r21
     212:	90 01       	movw	r18, r0
     214:	11 24       	eor	r1, r1
     216:	56 2f       	mov	r21, r22
     218:	52 2b       	or	r21, r18
     21a:	58 2b       	or	r21, r24
     21c:	50 61       	ori	r21, 0x10	; 16
     21e:	5d 87       	std	Y+13, r21	; 0x0d
	buffer[1] = (uint8_t)(value & 0xFF);
     220:	4e 87       	std	Y+14, r20	; 0x0e

	spi.write(buffer, 2);
     222:	be 01       	movw	r22, r28
     224:	63 5f       	subi	r22, 0xF3	; 243
     226:	7f 4f       	sbci	r23, 0xFF	; 255
     228:	42 e0       	ldi	r20, 0x02	; 2
     22a:	ce 01       	movw	r24, r28
     22c:	0e 94 bb 02 	call	0x576	; 0x576 <_ZN7mln_spi5writeEPhh>
	ldac.clear();
     230:	27 96       	adiw	r28, 0x07	; 7
     232:	ce 01       	movw	r24, r28
     234:	0e 94 89 01 	call	0x312	; 0x312 <_ZN8mln_gpio5clearEv>
	ldac.set();
     238:	ce 01       	movw	r24, r28
     23a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <_ZN8mln_gpio3setEv>
     23e:	df 91       	pop	r29
     240:	cf 91       	pop	r28
     242:	08 95       	ret

00000244 <_ZN8mln_gpioC1Ev>:


#define BITMAP(pin) (1 << pin)

// default constructor
mln_gpio::mln_gpio()
     244:	08 95       	ret

00000246 <_ZN8mln_gpio9conf_pullE19mln_gpio_pin_dirs_e>:
	conf_pull(new_dir);
}

void mln_gpio::conf_pull(PIN_DIR_t dir)
{
	uint8_t* port = (uint8_t *)pin.port + 0x10 + pin.pin_num;
     246:	fc 01       	movw	r30, r24
     248:	20 81       	ld	r18, Z
     24a:	31 81       	ldd	r19, Z+1	; 0x01
     24c:	82 81       	ldd	r24, Z+2	; 0x02
     24e:	e8 2f       	mov	r30, r24
     250:	f0 e0       	ldi	r31, 0x00	; 0
     252:	70 96       	adiw	r30, 0x10	; 16
     254:	e2 0f       	add	r30, r18
     256:	f3 1f       	adc	r31, r19
	if(dir == INPUT_PULLUP)
     258:	62 30       	cpi	r22, 0x02	; 2
     25a:	21 f4       	brne	.+8      	; 0x264 <_ZN8mln_gpio9conf_pullE19mln_gpio_pin_dirs_e+0x1e>
		*port |= PORT_PULLUPEN_bm;
     25c:	80 81       	ld	r24, Z
     25e:	88 60       	ori	r24, 0x08	; 8
     260:	80 83       	st	Z, r24
     262:	08 95       	ret
	else
		*port &= ~PORT_PULLUPEN_bm;
     264:	80 81       	ld	r24, Z
     266:	87 7f       	andi	r24, 0xF7	; 247
     268:	80 83       	st	Z, r24
     26a:	08 95       	ret

0000026c <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e>:
	conf_dir(new_dir);
} //mln_gpio

void mln_gpio::conf_dir(PIN_DIR_t new_dir)
{
	dir = new_dir;
     26c:	dc 01       	movw	r26, r24
     26e:	13 96       	adiw	r26, 0x03	; 3
     270:	6c 93       	st	X, r22
     272:	13 97       	sbiw	r26, 0x03	; 3
	
	if(dir == OUTPUT)
     274:	61 11       	cpse	r22, r1
     276:	10 c0       	rjmp	.+32     	; 0x298 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x2c>
		pin.port->DIR |= (1 << pin.pin_num);
     278:	ed 91       	ld	r30, X+
     27a:	fc 91       	ld	r31, X
     27c:	11 97       	sbiw	r26, 0x01	; 1
     27e:	40 81       	ld	r20, Z
     280:	21 e0       	ldi	r18, 0x01	; 1
     282:	30 e0       	ldi	r19, 0x00	; 0
     284:	12 96       	adiw	r26, 0x02	; 2
     286:	0c 90       	ld	r0, X
     288:	02 c0       	rjmp	.+4      	; 0x28e <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x22>
     28a:	22 0f       	add	r18, r18
     28c:	33 1f       	adc	r19, r19
     28e:	0a 94       	dec	r0
     290:	e2 f7       	brpl	.-8      	; 0x28a <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x1e>
     292:	24 2b       	or	r18, r20
     294:	20 83       	st	Z, r18
     296:	11 c0       	rjmp	.+34     	; 0x2ba <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x4e>
	else
		pin.port->DIR &= ~(1 << pin.pin_num);
     298:	dc 01       	movw	r26, r24
     29a:	ed 91       	ld	r30, X+
     29c:	fc 91       	ld	r31, X
     29e:	11 97       	sbiw	r26, 0x01	; 1
     2a0:	40 81       	ld	r20, Z
     2a2:	21 e0       	ldi	r18, 0x01	; 1
     2a4:	30 e0       	ldi	r19, 0x00	; 0
     2a6:	12 96       	adiw	r26, 0x02	; 2
     2a8:	0c 90       	ld	r0, X
     2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x44>
     2ac:	22 0f       	add	r18, r18
     2ae:	33 1f       	adc	r19, r19
     2b0:	0a 94       	dec	r0
     2b2:	e2 f7       	brpl	.-8      	; 0x2ac <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e+0x40>
     2b4:	20 95       	com	r18
     2b6:	24 23       	and	r18, r20
     2b8:	20 83       	st	Z, r18
	
	conf_pull(new_dir);
     2ba:	0e 94 23 01 	call	0x246	; 0x246 <_ZN8mln_gpio9conf_pullE19mln_gpio_pin_dirs_e>
     2be:	08 95       	ret

000002c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>:
mln_gpio::mln_gpio()
{
} //mln_gpio

// constructor
mln_gpio::mln_gpio(PIN_t new_pin, PIN_DIR_t new_dir, uint8_t new_inverted)
     2c0:	0f 93       	push	r16
{
	pin = new_pin;
     2c2:	fc 01       	movw	r30, r24
     2c4:	40 83       	st	Z, r20
     2c6:	51 83       	std	Z+1, r21	; 0x01
     2c8:	62 83       	std	Z+2, r22	; 0x02
	inverted = new_inverted;
     2ca:	04 83       	std	Z+4, r16	; 0x04
	
	conf_dir(new_dir);
     2cc:	62 2f       	mov	r22, r18
     2ce:	0e 94 36 01 	call	0x26c	; 0x26c <_ZN8mln_gpio8conf_dirE19mln_gpio_pin_dirs_e>
} //mln_gpio
     2d2:	0f 91       	pop	r16
     2d4:	08 95       	ret

000002d6 <_ZN8mln_gpio3setEv>:
	else
		*port &= ~PORT_PULLUPEN_bm;
}

void mln_gpio::set(void)
{
     2d6:	fc 01       	movw	r30, r24
	inverted ? pin.port->OUTCLR = BITMAP(pin.pin_num) : pin.port->OUTSET = BITMAP(pin.pin_num);
     2d8:	84 81       	ldd	r24, Z+4	; 0x04
     2da:	88 23       	and	r24, r24
     2dc:	69 f0       	breq	.+26     	; 0x2f8 <_ZN8mln_gpio3setEv+0x22>
     2de:	a0 81       	ld	r26, Z
     2e0:	b1 81       	ldd	r27, Z+1	; 0x01
     2e2:	81 e0       	ldi	r24, 0x01	; 1
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	02 80       	ldd	r0, Z+2	; 0x02
     2e8:	02 c0       	rjmp	.+4      	; 0x2ee <_ZN8mln_gpio3setEv+0x18>
     2ea:	88 0f       	add	r24, r24
     2ec:	99 1f       	adc	r25, r25
     2ee:	0a 94       	dec	r0
     2f0:	e2 f7       	brpl	.-8      	; 0x2ea <_ZN8mln_gpio3setEv+0x14>
     2f2:	16 96       	adiw	r26, 0x06	; 6
     2f4:	8c 93       	st	X, r24
     2f6:	08 95       	ret
     2f8:	a0 81       	ld	r26, Z
     2fa:	b1 81       	ldd	r27, Z+1	; 0x01
     2fc:	81 e0       	ldi	r24, 0x01	; 1
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	02 80       	ldd	r0, Z+2	; 0x02
     302:	02 c0       	rjmp	.+4      	; 0x308 <_ZN8mln_gpio3setEv+0x32>
     304:	88 0f       	add	r24, r24
     306:	99 1f       	adc	r25, r25
     308:	0a 94       	dec	r0
     30a:	e2 f7       	brpl	.-8      	; 0x304 <_ZN8mln_gpio3setEv+0x2e>
     30c:	15 96       	adiw	r26, 0x05	; 5
     30e:	8c 93       	st	X, r24
     310:	08 95       	ret

00000312 <_ZN8mln_gpio5clearEv>:
}

void mln_gpio::clear(void)
{
     312:	fc 01       	movw	r30, r24
	inverted ? pin.port->OUTSET = BITMAP(pin.pin_num) : pin.port->OUTCLR = BITMAP(pin.pin_num);
     314:	84 81       	ldd	r24, Z+4	; 0x04
     316:	88 23       	and	r24, r24
     318:	69 f0       	breq	.+26     	; 0x334 <_ZN8mln_gpio5clearEv+0x22>
     31a:	a0 81       	ld	r26, Z
     31c:	b1 81       	ldd	r27, Z+1	; 0x01
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	02 80       	ldd	r0, Z+2	; 0x02
     324:	02 c0       	rjmp	.+4      	; 0x32a <_ZN8mln_gpio5clearEv+0x18>
     326:	88 0f       	add	r24, r24
     328:	99 1f       	adc	r25, r25
     32a:	0a 94       	dec	r0
     32c:	e2 f7       	brpl	.-8      	; 0x326 <_ZN8mln_gpio5clearEv+0x14>
     32e:	15 96       	adiw	r26, 0x05	; 5
     330:	8c 93       	st	X, r24
     332:	08 95       	ret
     334:	a0 81       	ld	r26, Z
     336:	b1 81       	ldd	r27, Z+1	; 0x01
     338:	81 e0       	ldi	r24, 0x01	; 1
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	02 80       	ldd	r0, Z+2	; 0x02
     33e:	02 c0       	rjmp	.+4      	; 0x344 <_ZN8mln_gpio5clearEv+0x32>
     340:	88 0f       	add	r24, r24
     342:	99 1f       	adc	r25, r25
     344:	0a 94       	dec	r0
     346:	e2 f7       	brpl	.-8      	; 0x340 <_ZN8mln_gpio5clearEv+0x2e>
     348:	16 96       	adiw	r26, 0x06	; 6
     34a:	8c 93       	st	X, r24
     34c:	08 95       	ret

0000034e <_ZN8mln_gpio6toggleEv>:
}

void mln_gpio::toggle(void)
{
     34e:	dc 01       	movw	r26, r24
	pin.port->OUT ^= BITMAP(pin.pin_num);
     350:	ed 91       	ld	r30, X+
     352:	fc 91       	ld	r31, X
     354:	11 97       	sbiw	r26, 0x01	; 1
     356:	44 81       	ldd	r20, Z+4	; 0x04
     358:	21 e0       	ldi	r18, 0x01	; 1
     35a:	30 e0       	ldi	r19, 0x00	; 0
     35c:	c9 01       	movw	r24, r18
     35e:	12 96       	adiw	r26, 0x02	; 2
     360:	0c 90       	ld	r0, X
     362:	02 c0       	rjmp	.+4      	; 0x368 <_ZN8mln_gpio6toggleEv+0x1a>
     364:	88 0f       	add	r24, r24
     366:	99 1f       	adc	r25, r25
     368:	0a 94       	dec	r0
     36a:	e2 f7       	brpl	.-8      	; 0x364 <_ZN8mln_gpio6toggleEv+0x16>
     36c:	84 27       	eor	r24, r20
     36e:	84 83       	std	Z+4, r24	; 0x04
     370:	08 95       	ret

00000372 <_ZZ4mainENUlvE_4_FUNEv>:

MCP4822_GAIN_t gain = GAIN1;

int main(void)
{
	led_timer.set_isr([](void){led_builtin.toggle();});
     372:	83 e3       	ldi	r24, 0x33	; 51
     374:	90 e4       	ldi	r25, 0x40	; 64
     376:	0e 94 a7 01 	call	0x34e	; 0x34e <_ZN8mln_gpio6toggleEv>
     37a:	08 95       	ret

0000037c <_Z41__static_initialization_and_destruction_0ii>:
			dac.set_gain(gain);
			
			// printf("Gain: %u\n", dac.gain);
		}
    }
}
     37c:	ef 92       	push	r14
     37e:	ff 92       	push	r15
     380:	0f 93       	push	r16
     382:	01 97       	sbiw	r24, 0x01	; 1
     384:	61 f5       	brne	.+88     	; 0x3de <_Z41__static_initialization_and_destruction_0ii+0x62>
     386:	6f 3f       	cpi	r22, 0xFF	; 255
     388:	7f 4f       	sbci	r23, 0xFF	; 255
     38a:	49 f5       	brne	.+82     	; 0x3de <_Z41__static_initialization_and_destruction_0ii+0x62>
#include "mln/mln_uart.h"
#include "mln/mln_timer.h"
// #include "mln/mln_spi.h"
#include "devices/mcp4822.h"

mln_uart uart = mln_uart(UART3, 115200);
     38c:	20 e0       	ldi	r18, 0x00	; 0
     38e:	32 ec       	ldi	r19, 0xC2	; 194
     390:	41 e0       	ldi	r20, 0x01	; 1
     392:	50 e0       	ldi	r21, 0x00	; 0
     394:	63 e0       	ldi	r22, 0x03	; 3
     396:	88 e3       	ldi	r24, 0x38	; 56
     398:	90 e4       	ldi	r25, 0x40	; 64
     39a:	0e 94 12 05 	call	0xa24	; 0xa24 <_ZN8mln_uartC1E15mln_uart_inst_em>

// mln_spi spi = mln_spi(&SPI0, PC7);

// mln_gpio ldac = mln_gpio(PC3, OUTPUT);
mln_gpio led_builtin = mln_gpio(PB3, OUTPUT);
     39e:	00 e0       	ldi	r16, 0x00	; 0
     3a0:	20 e0       	ldi	r18, 0x00	; 0
     3a2:	40 e2       	ldi	r20, 0x20	; 32
     3a4:	54 e0       	ldi	r21, 0x04	; 4
     3a6:	63 e0       	ldi	r22, 0x03	; 3
     3a8:	83 e3       	ldi	r24, 0x33	; 51
     3aa:	90 e4       	ldi	r25, 0x40	; 64
     3ac:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>

mln_timer led_timer = mln_timer(TIMER0, 500);
     3b0:	44 ef       	ldi	r20, 0xF4	; 244
     3b2:	51 e0       	ldi	r21, 0x01	; 1
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	8b e2       	ldi	r24, 0x2B	; 43
     3b8:	90 e4       	ldi	r25, 0x40	; 64
     3ba:	0e 94 13 03 	call	0x626	; 0x626 <_ZN9mln_timerC1E16mln_timer_inst_ej>

mcp4822 dac = mcp4822(&SPI0, PC7, PC3);
     3be:	68 94       	set
     3c0:	ee 24       	eor	r14, r14
     3c2:	e6 f8       	bld	r14, 6
     3c4:	68 94       	set
     3c6:	ff 24       	eor	r15, r15
     3c8:	f2 f8       	bld	r15, 2
     3ca:	03 e0       	ldi	r16, 0x03	; 3
     3cc:	20 e4       	ldi	r18, 0x40	; 64
     3ce:	34 e0       	ldi	r19, 0x04	; 4
     3d0:	47 e0       	ldi	r20, 0x07	; 7
     3d2:	60 e4       	ldi	r22, 0x40	; 64
     3d4:	79 e0       	ldi	r23, 0x09	; 9
     3d6:	8c e1       	ldi	r24, 0x1C	; 28
     3d8:	90 e4       	ldi	r25, 0x40	; 64
     3da:	0e 94 a7 00 	call	0x14e	; 0x14e <_ZN7mcp4822C1EP10SPI_struct14mln_gpio_pin_sS2_>
			dac.set_gain(gain);
			
			// printf("Gain: %u\n", dac.gain);
		}
    }
}
     3de:	0f 91       	pop	r16
     3e0:	ff 90       	pop	r15
     3e2:	ef 90       	pop	r14
     3e4:	08 95       	ret

000003e6 <main>:

MCP4822_GAIN_t gain = GAIN1;

int main(void)
{
	led_timer.set_isr([](void){led_builtin.toggle();});
     3e6:	69 eb       	ldi	r22, 0xB9	; 185
     3e8:	71 e0       	ldi	r23, 0x01	; 1
     3ea:	8b e2       	ldi	r24, 0x2B	; 43
     3ec:	90 e4       	ldi	r25, 0x40	; 64
     3ee:	0e 94 8a 03 	call	0x714	; 0x714 <_ZN9mln_timer7set_isrEPFvvE>

	sei();
     3f2:	78 94       	sei

	led_timer.start();
     3f4:	8b e2       	ldi	r24, 0x2B	; 43
     3f6:	90 e4       	ldi	r25, 0x40	; 64
     3f8:	0e 94 9c 03 	call	0x738	; 0x738 <_ZN9mln_timer5startEv>

	while (1)
	{
		dac.write(CHANNELA, dac_value);
     3fc:	40 91 1a 40 	lds	r20, 0x401A	; 0x80401a <__data_end>
     400:	50 91 1b 40 	lds	r21, 0x401B	; 0x80401b <__data_end+0x1>
     404:	60 e0       	ldi	r22, 0x00	; 0
     406:	8c e1       	ldi	r24, 0x1C	; 28
     408:	90 e4       	ldi	r25, 0x40	; 64
     40a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7mcp48225writeE17mln_spi_channel_sj>
		dac.write(CHANNELB, 4095 - dac_value);
     40e:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <__data_end>
     412:	90 91 1b 40 	lds	r25, 0x401B	; 0x80401b <__data_end+0x1>
     416:	4f ef       	ldi	r20, 0xFF	; 255
     418:	5f e0       	ldi	r21, 0x0F	; 15
     41a:	48 1b       	sub	r20, r24
     41c:	59 0b       	sbc	r21, r25
     41e:	61 e0       	ldi	r22, 0x01	; 1
     420:	8c e1       	ldi	r24, 0x1C	; 28
     422:	90 e4       	ldi	r25, 0x40	; 64
     424:	0e 94 fe 00 	call	0x1fc	; 0x1fc <_ZN7mcp48225writeE17mln_spi_channel_sj>

		dac_value += 8;
     428:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <__data_end>
     42c:	90 91 1b 40 	lds	r25, 0x401B	; 0x80401b <__data_end+0x1>
     430:	08 96       	adiw	r24, 0x08	; 8
     432:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <__data_end>
     436:	90 93 1b 40 	sts	0x401B, r25	; 0x80401b <__data_end+0x1>

		if(dac_value > 4095)
     43a:	81 15       	cp	r24, r1
     43c:	90 41       	sbci	r25, 0x10	; 16
     43e:	f0 f2       	brcs	.-68     	; 0x3fc <main+0x16>
		{
			dac_value = 0;
     440:	10 92 1a 40 	sts	0x401A, r1	; 0x80401a <__data_end>
     444:	10 92 1b 40 	sts	0x401B, r1	; 0x80401b <__data_end+0x1>

			(gain == GAIN1) ? (gain = GAIN2) : (gain = GAIN1);
     448:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     44c:	81 30       	cpi	r24, 0x01	; 1
     44e:	19 f4       	brne	.+6      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     450:	10 92 00 40 	sts	0x4000, r1	; 0x804000 <__DATA_REGION_ORIGIN__>
     454:	03 c0       	rjmp	.+6      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     456:	81 e0       	ldi	r24, 0x01	; 1
     458:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>

			dac.set_gain(gain);
     45c:	60 91 00 40 	lds	r22, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     460:	8c e1       	ldi	r24, 0x1C	; 28
     462:	90 e4       	ldi	r25, 0x40	; 64
     464:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <_ZN7mcp48228set_gainE14mln_spi_gain_s>
     468:	c9 cf       	rjmp	.-110    	; 0x3fc <main+0x16>

0000046a <_GLOBAL__sub_I_uart>:
			
			// printf("Gain: %u\n", dac.gain);
		}
    }
}
     46a:	6f ef       	ldi	r22, 0xFF	; 255
     46c:	7f ef       	ldi	r23, 0xFF	; 255
     46e:	81 e0       	ldi	r24, 0x01	; 1
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	0e 94 be 01 	call	0x37c	; 0x37c <_Z41__static_initialization_and_destruction_0ii>
     476:	08 95       	ret

00000478 <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s>:
		*buffer = spi->DATA;
		buffer++;
	}

	cs.clear();
}
     478:	6f 92       	push	r6
     47a:	7f 92       	push	r7
     47c:	8f 92       	push	r8
     47e:	cf 92       	push	r12
     480:	df 92       	push	r13
     482:	ef 92       	push	r14
     484:	ff 92       	push	r15
     486:	0f 93       	push	r16
     488:	1f 93       	push	r17
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	cd b7       	in	r28, 0x3d	; 61
     490:	de b7       	in	r29, 0x3e	; 62
     492:	64 97       	sbiw	r28, 0x14	; 20
     494:	cd bf       	out	0x3d, r28	; 61
     496:	de bf       	out	0x3e, r29	; 62
     498:	7c 01       	movw	r14, r24
     49a:	8b 01       	movw	r16, r22
     49c:	39 01       	movw	r6, r18
     49e:	84 2e       	mov	r8, r20
     4a0:	6c 01       	movw	r12, r24
     4a2:	22 e0       	ldi	r18, 0x02	; 2
     4a4:	c2 0e       	add	r12, r18
     4a6:	d1 1c       	adc	r13, r1
     4a8:	c6 01       	movw	r24, r12
     4aa:	0e 94 22 01 	call	0x244	; 0x244 <_ZN8mln_gpioC1Ev>
     4ae:	d7 01       	movw	r26, r14
     4b0:	0d 93       	st	X+, r16
     4b2:	1c 93       	st	X, r17
     4b4:	00 e0       	ldi	r16, 0x00	; 0
     4b6:	20 e0       	ldi	r18, 0x00	; 0
     4b8:	68 2d       	mov	r22, r8
     4ba:	a3 01       	movw	r20, r6
     4bc:	ce 01       	movw	r24, r28
     4be:	40 96       	adiw	r24, 0x10	; 16
     4c0:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     4c4:	85 e0       	ldi	r24, 0x05	; 5
     4c6:	fe 01       	movw	r30, r28
     4c8:	70 96       	adiw	r30, 0x10	; 16
     4ca:	d6 01       	movw	r26, r12
     4cc:	01 90       	ld	r0, Z+
     4ce:	0d 92       	st	X+, r0
     4d0:	8a 95       	dec	r24
     4d2:	e1 f7       	brne	.-8      	; 0x4cc <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0x54>
     4d4:	f7 01       	movw	r30, r14
     4d6:	80 81       	ld	r24, Z
     4d8:	91 81       	ldd	r25, Z+1	; 0x01
     4da:	80 34       	cpi	r24, 0x40	; 64
     4dc:	99 40       	sbci	r25, 0x09	; 9
     4de:	21 f4       	brne	.+8      	; 0x4e8 <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0x70>
     4e0:	40 e0       	ldi	r20, 0x00	; 0
     4e2:	54 e0       	ldi	r21, 0x04	; 4
     4e4:	64 e0       	ldi	r22, 0x04	; 4
     4e6:	03 c0       	rjmp	.+6      	; 0x4ee <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0x76>
     4e8:	40 e4       	ldi	r20, 0x40	; 64
     4ea:	54 e0       	ldi	r21, 0x04	; 4
     4ec:	60 e0       	ldi	r22, 0x00	; 0
     4ee:	00 e0       	ldi	r16, 0x00	; 0
     4f0:	20 e0       	ldi	r18, 0x00	; 0
     4f2:	ce 01       	movw	r24, r28
     4f4:	0b 96       	adiw	r24, 0x0b	; 11
     4f6:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     4fa:	d7 01       	movw	r26, r14
     4fc:	8d 91       	ld	r24, X+
     4fe:	9c 91       	ld	r25, X
     500:	80 34       	cpi	r24, 0x40	; 64
     502:	99 40       	sbci	r25, 0x09	; 9
     504:	21 f4       	brne	.+8      	; 0x50e <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0x96>
     506:	40 e0       	ldi	r20, 0x00	; 0
     508:	54 e0       	ldi	r21, 0x04	; 4
     50a:	65 e0       	ldi	r22, 0x05	; 5
     50c:	03 c0       	rjmp	.+6      	; 0x514 <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0x9c>
     50e:	40 e4       	ldi	r20, 0x40	; 64
     510:	54 e0       	ldi	r21, 0x04	; 4
     512:	61 e0       	ldi	r22, 0x01	; 1
     514:	00 e0       	ldi	r16, 0x00	; 0
     516:	21 e0       	ldi	r18, 0x01	; 1
     518:	ce 01       	movw	r24, r28
     51a:	06 96       	adiw	r24, 0x06	; 6
     51c:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     520:	f7 01       	movw	r30, r14
     522:	80 81       	ld	r24, Z
     524:	91 81       	ldd	r25, Z+1	; 0x01
     526:	80 34       	cpi	r24, 0x40	; 64
     528:	99 40       	sbci	r25, 0x09	; 9
     52a:	21 f4       	brne	.+8      	; 0x534 <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0xbc>
     52c:	40 e0       	ldi	r20, 0x00	; 0
     52e:	54 e0       	ldi	r21, 0x04	; 4
     530:	66 e0       	ldi	r22, 0x06	; 6
     532:	03 c0       	rjmp	.+6      	; 0x53a <_ZN7mln_spiC1EP10SPI_struct14mln_gpio_pin_s+0xc2>
     534:	40 e4       	ldi	r20, 0x40	; 64
     536:	54 e0       	ldi	r21, 0x04	; 4
     538:	62 e0       	ldi	r22, 0x02	; 2
     53a:	00 e0       	ldi	r16, 0x00	; 0
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	ce 01       	movw	r24, r28
     540:	01 96       	adiw	r24, 0x01	; 1
     542:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     546:	d7 01       	movw	r26, r14
     548:	ed 91       	ld	r30, X+
     54a:	fc 91       	ld	r31, X
     54c:	81 e3       	ldi	r24, 0x31	; 49
     54e:	80 83       	st	Z, r24
     550:	64 96       	adiw	r28, 0x14	; 20
     552:	cd bf       	out	0x3d, r28	; 61
     554:	de bf       	out	0x3e, r29	; 62
     556:	df 91       	pop	r29
     558:	cf 91       	pop	r28
     55a:	1f 91       	pop	r17
     55c:	0f 91       	pop	r16
     55e:	ff 90       	pop	r15
     560:	ef 90       	pop	r14
     562:	df 90       	pop	r13
     564:	cf 90       	pop	r12
     566:	8f 90       	pop	r8
     568:	7f 90       	pop	r7
     56a:	6f 90       	pop	r6
     56c:	08 95       	ret

0000056e <_ZN7mln_spiC1Ev>:
     56e:	02 96       	adiw	r24, 0x02	; 2
     570:	0e 94 22 01 	call	0x244	; 0x244 <_ZN8mln_gpioC1Ev>
     574:	08 95       	ret

00000576 <_ZN7mln_spi5writeEPhh>:

void mln_spi::write(uint8_t *buffer, uint8_t length)
{
     576:	cf 92       	push	r12
     578:	df 92       	push	r13
     57a:	ef 92       	push	r14
     57c:	ff 92       	push	r15
     57e:	1f 93       	push	r17
     580:	cf 93       	push	r28
     582:	df 93       	push	r29
     584:	ec 01       	movw	r28, r24
     586:	7b 01       	movw	r14, r22
     588:	14 2f       	mov	r17, r20
	cs.clear();
     58a:	6c 01       	movw	r12, r24
     58c:	82 e0       	ldi	r24, 0x02	; 2
     58e:	c8 0e       	add	r12, r24
     590:	d1 1c       	adc	r13, r1
     592:	c6 01       	movw	r24, r12
     594:	0e 94 89 01 	call	0x312	; 0x312 <_ZN8mln_gpio5clearEv>

	while (length--)
     598:	9f ef       	ldi	r25, 0xFF	; 255
     59a:	91 0f       	add	r25, r17
     59c:	11 23       	and	r17, r17
     59e:	69 f0       	breq	.+26     	; 0x5ba <_ZN7mln_spi5writeEPhh+0x44>
	{
		spi->DATA = *buffer;
     5a0:	e8 81       	ld	r30, Y
     5a2:	f9 81       	ldd	r31, Y+1	; 0x01
     5a4:	d7 01       	movw	r26, r14
     5a6:	8d 91       	ld	r24, X+
     5a8:	7d 01       	movw	r14, r26
     5aa:	84 83       	std	Z+4, r24	; 0x04
		buffer++;
		while (!(spi->INTFLAGS & SPI_RXCIF_bm))
     5ac:	e8 81       	ld	r30, Y
     5ae:	f9 81       	ldd	r31, Y+1	; 0x01
     5b0:	83 81       	ldd	r24, Z+3	; 0x03
     5b2:	88 23       	and	r24, r24
     5b4:	dc f7       	brge	.-10     	; 0x5ac <_ZN7mln_spi5writeEPhh+0x36>

void mln_spi::write(uint8_t *buffer, uint8_t length)
{
	cs.clear();

	while (length--)
     5b6:	19 2f       	mov	r17, r25
     5b8:	ef cf       	rjmp	.-34     	; 0x598 <_ZN7mln_spi5writeEPhh+0x22>
		buffer++;
		while (!(spi->INTFLAGS & SPI_RXCIF_bm))
			;
	}

	cs.set();
     5ba:	c6 01       	movw	r24, r12
     5bc:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <_ZN8mln_gpio3setEv>
}
     5c0:	df 91       	pop	r29
     5c2:	cf 91       	pop	r28
     5c4:	1f 91       	pop	r17
     5c6:	ff 90       	pop	r15
     5c8:	ef 90       	pop	r14
     5ca:	df 90       	pop	r13
     5cc:	cf 90       	pop	r12
     5ce:	08 95       	ret

000005d0 <_Z17MLN_TIMER_GET_DIVj>:
}

float mln_timer::get_period(void)
{
	return actual_period;
}
     5d0:	0f 93       	push	r16
     5d2:	1f 93       	push	r17
     5d4:	cf 93       	push	r28
     5d6:	8c 01       	movw	r16, r24
     5d8:	c0 e0       	ldi	r28, 0x00	; 0
     5da:	ec 2f       	mov	r30, r28
     5dc:	f0 e0       	ldi	r31, 0x00	; 0
     5de:	ee 0f       	add	r30, r30
     5e0:	ff 1f       	adc	r31, r31
     5e2:	e7 5f       	subi	r30, 0xF7	; 247
     5e4:	ff 4b       	sbci	r31, 0xBF	; 191
     5e6:	a0 81       	ld	r26, Z
     5e8:	b1 81       	ldd	r27, Z+1	; 0x01
     5ea:	28 e1       	ldi	r18, 0x18	; 24
     5ec:	3c ef       	ldi	r19, 0xFC	; 252
     5ee:	47 ee       	ldi	r20, 0xE7	; 231
     5f0:	53 e0       	ldi	r21, 0x03	; 3
     5f2:	0e 94 3b 08 	call	0x1076	; 0x1076 <__muluhisi3>
     5f6:	20 e0       	ldi	r18, 0x00	; 0
     5f8:	39 e0       	ldi	r19, 0x09	; 9
     5fa:	4d e3       	ldi	r20, 0x3D	; 61
     5fc:	50 e0       	ldi	r21, 0x00	; 0
     5fe:	0e 94 19 08 	call	0x1032	; 0x1032 <__udivmodsi4>
     602:	c8 01       	movw	r24, r16
     604:	a0 e0       	ldi	r26, 0x00	; 0
     606:	b0 e0       	ldi	r27, 0x00	; 0
     608:	28 17       	cp	r18, r24
     60a:	39 07       	cpc	r19, r25
     60c:	4a 07       	cpc	r20, r26
     60e:	5b 07       	cpc	r21, r27
     610:	28 f4       	brcc	.+10     	; 0x61c <_Z17MLN_TIMER_GET_DIVj+0x4c>
     612:	cf 5f       	subi	r28, 0xFF	; 255
     614:	c8 30       	cpi	r28, 0x08	; 8
     616:	09 f7       	brne	.-62     	; 0x5da <_Z17MLN_TIMER_GET_DIVj+0xa>
     618:	8f ef       	ldi	r24, 0xFF	; 255
     61a:	01 c0       	rjmp	.+2      	; 0x61e <_Z17MLN_TIMER_GET_DIVj+0x4e>
     61c:	8c 2f       	mov	r24, r28
     61e:	cf 91       	pop	r28
     620:	1f 91       	pop	r17
     622:	0f 91       	pop	r16
     624:	08 95       	ret

00000626 <_ZN9mln_timerC1E16mln_timer_inst_ej>:
     626:	8f 92       	push	r8
     628:	9f 92       	push	r9
     62a:	af 92       	push	r10
     62c:	bf 92       	push	r11
     62e:	ff 92       	push	r15
     630:	0f 93       	push	r16
     632:	1f 93       	push	r17
     634:	cf 93       	push	r28
     636:	df 93       	push	r29
     638:	ec 01       	movw	r28, r24
     63a:	8a 01       	movw	r16, r20
     63c:	61 11       	cpse	r22, r1
     63e:	05 c0       	rjmp	.+10     	; 0x64a <_ZN9mln_timerC1E16mln_timer_inst_ej+0x24>
     640:	80 e0       	ldi	r24, 0x00	; 0
     642:	9a e0       	ldi	r25, 0x0A	; 10
     644:	88 83       	st	Y, r24
     646:	99 83       	std	Y+1, r25	; 0x01
     648:	04 c0       	rjmp	.+8      	; 0x652 <_ZN9mln_timerC1E16mln_timer_inst_ej+0x2c>
     64a:	80 e4       	ldi	r24, 0x40	; 64
     64c:	9a e0       	ldi	r25, 0x0A	; 10
     64e:	88 83       	st	Y, r24
     650:	99 83       	std	Y+1, r25	; 0x01
     652:	c8 01       	movw	r24, r16
     654:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <_Z17MLN_TIMER_GET_DIVj>
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	fc 01       	movw	r30, r24
     65c:	ef 5f       	subi	r30, 0xFF	; 255
     65e:	ff 4b       	sbci	r31, 0xBF	; 191
     660:	f0 80       	ld	r15, Z
     662:	88 0f       	add	r24, r24
     664:	99 1f       	adc	r25, r25
     666:	fc 01       	movw	r30, r24
     668:	e7 5f       	subi	r30, 0xF7	; 247
     66a:	ff 4b       	sbci	r31, 0xBF	; 191
     66c:	a0 81       	ld	r26, Z
     66e:	b1 81       	ldd	r27, Z+1	; 0x01
     670:	28 e1       	ldi	r18, 0x18	; 24
     672:	3c ef       	ldi	r19, 0xFC	; 252
     674:	47 ee       	ldi	r20, 0xE7	; 231
     676:	53 e0       	ldi	r21, 0x03	; 3
     678:	0e 94 3b 08 	call	0x1076	; 0x1076 <__muluhisi3>
     67c:	20 e0       	ldi	r18, 0x00	; 0
     67e:	39 e0       	ldi	r19, 0x09	; 9
     680:	4d e3       	ldi	r20, 0x3D	; 61
     682:	50 e0       	ldi	r21, 0x00	; 0
     684:	0e 94 19 08 	call	0x1032	; 0x1032 <__udivmodsi4>
     688:	ca 01       	movw	r24, r20
     68a:	b9 01       	movw	r22, r18
     68c:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__floatunsisf>
     690:	4b 01       	movw	r8, r22
     692:	5c 01       	movw	r10, r24
     694:	b8 01       	movw	r22, r16
     696:	80 e0       	ldi	r24, 0x00	; 0
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__floatunsisf>
     69e:	a5 01       	movw	r20, r10
     6a0:	94 01       	movw	r18, r8
     6a2:	0e 94 7d 06 	call	0xcfa	; 0xcfa <__divsf3>
     6a6:	20 e0       	ldi	r18, 0x00	; 0
     6a8:	3f ef       	ldi	r19, 0xFF	; 255
     6aa:	4f e7       	ldi	r20, 0x7F	; 127
     6ac:	57 e4       	ldi	r21, 0x47	; 71
     6ae:	0e 94 ac 07 	call	0xf58	; 0xf58 <__mulsf3>
     6b2:	0e 94 ef 06 	call	0xdde	; 0xdde <__fixunssfsi>
     6b6:	e8 81       	ld	r30, Y
     6b8:	f9 81       	ldd	r31, Y+1	; 0x01
     6ba:	21 e0       	ldi	r18, 0x01	; 1
     6bc:	22 87       	std	Z+10, r18	; 0x0a
     6be:	e8 81       	ld	r30, Y
     6c0:	f9 81       	ldd	r31, Y+1	; 0x01
     6c2:	66 a3       	std	Z+38, r22	; 0x26
     6c4:	77 a3       	std	Z+39, r23	; 0x27
     6c6:	e8 81       	ld	r30, Y
     6c8:	f9 81       	ldd	r31, Y+1	; 0x01
     6ca:	20 e8       	ldi	r18, 0x80	; 128
     6cc:	20 83       	st	Z, r18
     6ce:	e8 81       	ld	r30, Y
     6d0:	f9 81       	ldd	r31, Y+1	; 0x01
     6d2:	20 81       	ld	r18, Z
     6d4:	f2 2a       	or	r15, r18
     6d6:	f0 82       	st	Z, r15
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__floatunsisf>
     6e0:	20 e0       	ldi	r18, 0x00	; 0
     6e2:	3f ef       	ldi	r19, 0xFF	; 255
     6e4:	4f e7       	ldi	r20, 0x7F	; 127
     6e6:	57 e4       	ldi	r21, 0x47	; 71
     6e8:	0e 94 7d 06 	call	0xcfa	; 0xcfa <__divsf3>
     6ec:	9b 01       	movw	r18, r22
     6ee:	ac 01       	movw	r20, r24
     6f0:	c5 01       	movw	r24, r10
     6f2:	b4 01       	movw	r22, r8
     6f4:	0e 94 ac 07 	call	0xf58	; 0xf58 <__mulsf3>
     6f8:	6a 83       	std	Y+2, r22	; 0x02
     6fa:	7b 83       	std	Y+3, r23	; 0x03
     6fc:	8c 83       	std	Y+4, r24	; 0x04
     6fe:	9d 83       	std	Y+5, r25	; 0x05
     700:	df 91       	pop	r29
     702:	cf 91       	pop	r28
     704:	1f 91       	pop	r17
     706:	0f 91       	pop	r16
     708:	ff 90       	pop	r15
     70a:	bf 90       	pop	r11
     70c:	af 90       	pop	r10
     70e:	9f 90       	pop	r9
     710:	8f 90       	pop	r8
     712:	08 95       	ret

00000714 <_ZN9mln_timer7set_isrEPFvvE>:
     714:	fc 01       	movw	r30, r24
     716:	66 83       	std	Z+6, r22	; 0x06
     718:	77 83       	std	Z+7, r23	; 0x07
     71a:	20 81       	ld	r18, Z
     71c:	31 81       	ldd	r19, Z+1	; 0x01
     71e:	21 15       	cp	r18, r1
     720:	3a 40       	sbci	r19, 0x0A	; 10
     722:	29 f4       	brne	.+10     	; 0x72e <_ZN9mln_timer7set_isrEPFvvE+0x1a>
     724:	80 93 77 40 	sts	0x4077, r24	; 0x804077 <timer0_isr>
     728:	90 93 78 40 	sts	0x4078, r25	; 0x804078 <timer0_isr+0x1>
     72c:	08 95       	ret
     72e:	80 93 75 40 	sts	0x4075, r24	; 0x804075 <timer1_isr>
     732:	90 93 76 40 	sts	0x4076, r25	; 0x804076 <timer1_isr+0x1>
     736:	08 95       	ret

00000738 <_ZN9mln_timer5startEv>:
     738:	dc 01       	movw	r26, r24
     73a:	ed 91       	ld	r30, X+
     73c:	fc 91       	ld	r31, X
     73e:	80 81       	ld	r24, Z
     740:	81 60       	ori	r24, 0x01	; 1
     742:	80 83       	st	Z, r24
     744:	08 95       	ret

00000746 <__vector_9>:

ISR(TCA0_OVF_vect)
{
     746:	1f 92       	push	r1
     748:	0f 92       	push	r0
     74a:	0f b6       	in	r0, 0x3f	; 63
     74c:	0f 92       	push	r0
     74e:	11 24       	eor	r1, r1
     750:	0b b6       	in	r0, 0x3b	; 59
     752:	0f 92       	push	r0
     754:	2f 93       	push	r18
     756:	3f 93       	push	r19
     758:	4f 93       	push	r20
     75a:	5f 93       	push	r21
     75c:	6f 93       	push	r22
     75e:	7f 93       	push	r23
     760:	8f 93       	push	r24
     762:	9f 93       	push	r25
     764:	af 93       	push	r26
     766:	bf 93       	push	r27
     768:	ef 93       	push	r30
     76a:	ff 93       	push	r31
	if(timer0_isr->isr)
     76c:	e0 91 77 40 	lds	r30, 0x4077	; 0x804077 <timer0_isr>
     770:	f0 91 78 40 	lds	r31, 0x4078	; 0x804078 <timer0_isr+0x1>
     774:	06 80       	ldd	r0, Z+6	; 0x06
     776:	f7 81       	ldd	r31, Z+7	; 0x07
     778:	e0 2d       	mov	r30, r0
     77a:	30 97       	sbiw	r30, 0x00	; 0
     77c:	09 f0       	breq	.+2      	; 0x780 <__vector_9+0x3a>
		timer0_isr->isr();
     77e:	09 95       	icall
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
     780:	81 e0       	ldi	r24, 0x01	; 1
     782:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
}
     786:	ff 91       	pop	r31
     788:	ef 91       	pop	r30
     78a:	bf 91       	pop	r27
     78c:	af 91       	pop	r26
     78e:	9f 91       	pop	r25
     790:	8f 91       	pop	r24
     792:	7f 91       	pop	r23
     794:	6f 91       	pop	r22
     796:	5f 91       	pop	r21
     798:	4f 91       	pop	r20
     79a:	3f 91       	pop	r19
     79c:	2f 91       	pop	r18
     79e:	0f 90       	pop	r0
     7a0:	0b be       	out	0x3b, r0	; 59
     7a2:	0f 90       	pop	r0
     7a4:	0f be       	out	0x3f, r0	; 63
     7a6:	0f 90       	pop	r0
     7a8:	1f 90       	pop	r1
     7aa:	18 95       	reti

000007ac <__vector_47>:

#ifdef TCA1
ISR(TCA1_OVF_vect)
{
     7ac:	1f 92       	push	r1
     7ae:	0f 92       	push	r0
     7b0:	0f b6       	in	r0, 0x3f	; 63
     7b2:	0f 92       	push	r0
     7b4:	11 24       	eor	r1, r1
     7b6:	0b b6       	in	r0, 0x3b	; 59
     7b8:	0f 92       	push	r0
     7ba:	2f 93       	push	r18
     7bc:	3f 93       	push	r19
     7be:	4f 93       	push	r20
     7c0:	5f 93       	push	r21
     7c2:	6f 93       	push	r22
     7c4:	7f 93       	push	r23
     7c6:	8f 93       	push	r24
     7c8:	9f 93       	push	r25
     7ca:	af 93       	push	r26
     7cc:	bf 93       	push	r27
     7ce:	ef 93       	push	r30
     7d0:	ff 93       	push	r31
	if(timer1_isr->isr)
     7d2:	e0 91 75 40 	lds	r30, 0x4075	; 0x804075 <timer1_isr>
     7d6:	f0 91 76 40 	lds	r31, 0x4076	; 0x804076 <timer1_isr+0x1>
     7da:	06 80       	ldd	r0, Z+6	; 0x06
     7dc:	f7 81       	ldd	r31, Z+7	; 0x07
     7de:	e0 2d       	mov	r30, r0
     7e0:	30 97       	sbiw	r30, 0x00	; 0
     7e2:	09 f0       	breq	.+2      	; 0x7e6 <__vector_47+0x3a>
		timer1_isr->isr();
     7e4:	09 95       	icall
		
	TCA1.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	80 93 4b 0a 	sts	0x0A4B, r24	; 0x800a4b <__TEXT_REGION_LENGTH__+0x7e0a4b>
}
     7ec:	ff 91       	pop	r31
     7ee:	ef 91       	pop	r30
     7f0:	bf 91       	pop	r27
     7f2:	af 91       	pop	r26
     7f4:	9f 91       	pop	r25
     7f6:	8f 91       	pop	r24
     7f8:	7f 91       	pop	r23
     7fa:	6f 91       	pop	r22
     7fc:	5f 91       	pop	r21
     7fe:	4f 91       	pop	r20
     800:	3f 91       	pop	r19
     802:	2f 91       	pop	r18
     804:	0f 90       	pop	r0
     806:	0b be       	out	0x3b, r0	; 59
     808:	0f 90       	pop	r0
     80a:	0f be       	out	0x3f, r0	; 63
     80c:	0f 90       	pop	r0
     80e:	1f 90       	pop	r1
     810:	18 95       	reti

00000812 <_Z17MLN_UART_TO_USART15mln_uart_inst_e>:
	return !(inst->STATUS & USART_RXCIF_bm);
}
bool mln_uart::data_available(void)
{
	return index;
}
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	59 f0       	breq	.+22     	; 0x82c <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0x1a>
     816:	18 f4       	brcc	.+6      	; 0x81e <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0xc>
     818:	81 30       	cpi	r24, 0x01	; 1
     81a:	89 f0       	breq	.+34     	; 0x83e <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0x2c>
     81c:	04 c0       	rjmp	.+8      	; 0x826 <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0x14>
     81e:	83 30       	cpi	r24, 0x03	; 3
     820:	41 f0       	breq	.+16     	; 0x832 <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0x20>
     822:	84 30       	cpi	r24, 0x04	; 4
     824:	49 f0       	breq	.+18     	; 0x838 <_Z17MLN_UART_TO_USART15mln_uart_inst_e+0x26>
     826:	80 e0       	ldi	r24, 0x00	; 0
     828:	98 e0       	ldi	r25, 0x08	; 8
     82a:	08 95       	ret
     82c:	80 e4       	ldi	r24, 0x40	; 64
     82e:	98 e0       	ldi	r25, 0x08	; 8
     830:	08 95       	ret
     832:	80 e6       	ldi	r24, 0x60	; 96
     834:	98 e0       	ldi	r25, 0x08	; 8
     836:	08 95       	ret
     838:	80 e8       	ldi	r24, 0x80	; 128
     83a:	98 e0       	ldi	r25, 0x08	; 8
     83c:	08 95       	ret
     83e:	80 e2       	ldi	r24, 0x20	; 32
     840:	98 e0       	ldi	r25, 0x08	; 8
     842:	08 95       	ret

00000844 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e>:
     844:	ef 92       	push	r14
     846:	ff 92       	push	r15
     848:	0f 93       	push	r16
     84a:	cf 93       	push	r28
     84c:	df 93       	push	r29
     84e:	cd b7       	in	r28, 0x3d	; 61
     850:	de b7       	in	r29, 0x3e	; 62
     852:	e2 97       	sbiw	r28, 0x32	; 50
     854:	cd bf       	out	0x3d, r28	; 61
     856:	de bf       	out	0x3e, r29	; 62
     858:	7c 01       	movw	r14, r24
     85a:	62 30       	cpi	r22, 0x02	; 2
     85c:	09 f4       	brne	.+2      	; 0x860 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x1c>
     85e:	55 c0       	rjmp	.+170    	; 0x90a <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0xc6>
     860:	28 f4       	brcc	.+10     	; 0x86c <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x28>
     862:	66 23       	and	r22, r22
     864:	51 f0       	breq	.+20     	; 0x87a <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x36>
     866:	61 30       	cpi	r22, 0x01	; 1
     868:	61 f1       	breq	.+88     	; 0x8c2 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x7e>
     86a:	ba c0       	rjmp	.+372    	; 0x9e0 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     86c:	63 30       	cpi	r22, 0x03	; 3
     86e:	09 f4       	brne	.+2      	; 0x872 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x2e>
     870:	70 c0       	rjmp	.+224    	; 0x952 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x10e>
     872:	64 30       	cpi	r22, 0x04	; 4
     874:	09 f4       	brne	.+2      	; 0x878 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x34>
     876:	91 c0       	rjmp	.+290    	; 0x99a <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x156>
     878:	b3 c0       	rjmp	.+358    	; 0x9e0 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     87a:	00 e0       	ldi	r16, 0x00	; 0
     87c:	20 e0       	ldi	r18, 0x00	; 0
     87e:	40 e0       	ldi	r20, 0x00	; 0
     880:	54 e0       	ldi	r21, 0x04	; 4
     882:	60 e0       	ldi	r22, 0x00	; 0
     884:	ce 01       	movw	r24, r28
     886:	8e 96       	adiw	r24, 0x2e	; 46
     888:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     88c:	85 e0       	ldi	r24, 0x05	; 5
     88e:	fe 01       	movw	r30, r28
     890:	be 96       	adiw	r30, 0x2e	; 46
     892:	d7 01       	movw	r26, r14
     894:	12 96       	adiw	r26, 0x02	; 2
     896:	01 90       	ld	r0, Z+
     898:	0d 92       	st	X+, r0
     89a:	8a 95       	dec	r24
     89c:	e1 f7       	brne	.-8      	; 0x896 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x52>
     89e:	21 e0       	ldi	r18, 0x01	; 1
     8a0:	40 e0       	ldi	r20, 0x00	; 0
     8a2:	54 e0       	ldi	r21, 0x04	; 4
     8a4:	61 e0       	ldi	r22, 0x01	; 1
     8a6:	ce 01       	movw	r24, r28
     8a8:	89 96       	adiw	r24, 0x29	; 41
     8aa:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     8ae:	85 e0       	ldi	r24, 0x05	; 5
     8b0:	fe 01       	movw	r30, r28
     8b2:	b9 96       	adiw	r30, 0x29	; 41
     8b4:	d7 01       	movw	r26, r14
     8b6:	17 96       	adiw	r26, 0x07	; 7
     8b8:	01 90       	ld	r0, Z+
     8ba:	0d 92       	st	X+, r0
     8bc:	8a 95       	dec	r24
     8be:	e1 f7       	brne	.-8      	; 0x8b8 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x74>
     8c0:	8f c0       	rjmp	.+286    	; 0x9e0 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     8c2:	00 e0       	ldi	r16, 0x00	; 0
     8c4:	20 e0       	ldi	r18, 0x00	; 0
     8c6:	40 e4       	ldi	r20, 0x40	; 64
     8c8:	54 e0       	ldi	r21, 0x04	; 4
     8ca:	60 e0       	ldi	r22, 0x00	; 0
     8cc:	ce 01       	movw	r24, r28
     8ce:	84 96       	adiw	r24, 0x24	; 36
     8d0:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     8d4:	85 e0       	ldi	r24, 0x05	; 5
     8d6:	fe 01       	movw	r30, r28
     8d8:	b4 96       	adiw	r30, 0x24	; 36
     8da:	d7 01       	movw	r26, r14
     8dc:	12 96       	adiw	r26, 0x02	; 2
     8de:	01 90       	ld	r0, Z+
     8e0:	0d 92       	st	X+, r0
     8e2:	8a 95       	dec	r24
     8e4:	e1 f7       	brne	.-8      	; 0x8de <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x9a>
     8e6:	21 e0       	ldi	r18, 0x01	; 1
     8e8:	40 e4       	ldi	r20, 0x40	; 64
     8ea:	54 e0       	ldi	r21, 0x04	; 4
     8ec:	61 e0       	ldi	r22, 0x01	; 1
     8ee:	ce 01       	movw	r24, r28
     8f0:	4f 96       	adiw	r24, 0x1f	; 31
     8f2:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     8f6:	85 e0       	ldi	r24, 0x05	; 5
     8f8:	fe 01       	movw	r30, r28
     8fa:	7f 96       	adiw	r30, 0x1f	; 31
     8fc:	d7 01       	movw	r26, r14
     8fe:	17 96       	adiw	r26, 0x07	; 7
     900:	01 90       	ld	r0, Z+
     902:	0d 92       	st	X+, r0
     904:	8a 95       	dec	r24
     906:	e1 f7       	brne	.-8      	; 0x900 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0xbc>
     908:	6b c0       	rjmp	.+214    	; 0x9e0 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     90a:	00 e0       	ldi	r16, 0x00	; 0
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	40 ea       	ldi	r20, 0xA0	; 160
     910:	54 e0       	ldi	r21, 0x04	; 4
     912:	60 e0       	ldi	r22, 0x00	; 0
     914:	ce 01       	movw	r24, r28
     916:	4a 96       	adiw	r24, 0x1a	; 26
     918:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     91c:	85 e0       	ldi	r24, 0x05	; 5
     91e:	fe 01       	movw	r30, r28
     920:	7a 96       	adiw	r30, 0x1a	; 26
     922:	d7 01       	movw	r26, r14
     924:	12 96       	adiw	r26, 0x02	; 2
     926:	01 90       	ld	r0, Z+
     928:	0d 92       	st	X+, r0
     92a:	8a 95       	dec	r24
     92c:	e1 f7       	brne	.-8      	; 0x926 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0xe2>
     92e:	21 e0       	ldi	r18, 0x01	; 1
     930:	40 ea       	ldi	r20, 0xA0	; 160
     932:	54 e0       	ldi	r21, 0x04	; 4
     934:	61 e0       	ldi	r22, 0x01	; 1
     936:	ce 01       	movw	r24, r28
     938:	45 96       	adiw	r24, 0x15	; 21
     93a:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     93e:	85 e0       	ldi	r24, 0x05	; 5
     940:	fe 01       	movw	r30, r28
     942:	75 96       	adiw	r30, 0x15	; 21
     944:	d7 01       	movw	r26, r14
     946:	17 96       	adiw	r26, 0x07	; 7
     948:	01 90       	ld	r0, Z+
     94a:	0d 92       	st	X+, r0
     94c:	8a 95       	dec	r24
     94e:	e1 f7       	brne	.-8      	; 0x948 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x104>
     950:	47 c0       	rjmp	.+142    	; 0x9e0 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     952:	00 e0       	ldi	r16, 0x00	; 0
     954:	20 e0       	ldi	r18, 0x00	; 0
     956:	40 e2       	ldi	r20, 0x20	; 32
     958:	54 e0       	ldi	r21, 0x04	; 4
     95a:	60 e0       	ldi	r22, 0x00	; 0
     95c:	ce 01       	movw	r24, r28
     95e:	40 96       	adiw	r24, 0x10	; 16
     960:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     964:	85 e0       	ldi	r24, 0x05	; 5
     966:	fe 01       	movw	r30, r28
     968:	70 96       	adiw	r30, 0x10	; 16
     96a:	d7 01       	movw	r26, r14
     96c:	12 96       	adiw	r26, 0x02	; 2
     96e:	01 90       	ld	r0, Z+
     970:	0d 92       	st	X+, r0
     972:	8a 95       	dec	r24
     974:	e1 f7       	brne	.-8      	; 0x96e <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x12a>
     976:	21 e0       	ldi	r18, 0x01	; 1
     978:	40 e2       	ldi	r20, 0x20	; 32
     97a:	54 e0       	ldi	r21, 0x04	; 4
     97c:	61 e0       	ldi	r22, 0x01	; 1
     97e:	ce 01       	movw	r24, r28
     980:	0b 96       	adiw	r24, 0x0b	; 11
     982:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     986:	85 e0       	ldi	r24, 0x05	; 5
     988:	fe 01       	movw	r30, r28
     98a:	3b 96       	adiw	r30, 0x0b	; 11
     98c:	d7 01       	movw	r26, r14
     98e:	17 96       	adiw	r26, 0x07	; 7
     990:	01 90       	ld	r0, Z+
     992:	0d 92       	st	X+, r0
     994:	8a 95       	dec	r24
     996:	e1 f7       	brne	.-8      	; 0x990 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x14c>
     998:	23 c0       	rjmp	.+70     	; 0x9e0 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x19c>
     99a:	00 e0       	ldi	r16, 0x00	; 0
     99c:	20 e0       	ldi	r18, 0x00	; 0
     99e:	40 e8       	ldi	r20, 0x80	; 128
     9a0:	54 e0       	ldi	r21, 0x04	; 4
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	ce 01       	movw	r24, r28
     9a6:	06 96       	adiw	r24, 0x06	; 6
     9a8:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     9ac:	85 e0       	ldi	r24, 0x05	; 5
     9ae:	fe 01       	movw	r30, r28
     9b0:	36 96       	adiw	r30, 0x06	; 6
     9b2:	d7 01       	movw	r26, r14
     9b4:	12 96       	adiw	r26, 0x02	; 2
     9b6:	01 90       	ld	r0, Z+
     9b8:	0d 92       	st	X+, r0
     9ba:	8a 95       	dec	r24
     9bc:	e1 f7       	brne	.-8      	; 0x9b6 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x172>
     9be:	21 e0       	ldi	r18, 0x01	; 1
     9c0:	40 e8       	ldi	r20, 0x80	; 128
     9c2:	54 e0       	ldi	r21, 0x04	; 4
     9c4:	61 e0       	ldi	r22, 0x01	; 1
     9c6:	ce 01       	movw	r24, r28
     9c8:	01 96       	adiw	r24, 0x01	; 1
     9ca:	0e 94 60 01 	call	0x2c0	; 0x2c0 <_ZN8mln_gpioC1E14mln_gpio_pin_s19mln_gpio_pin_dirs_eh>
     9ce:	85 e0       	ldi	r24, 0x05	; 5
     9d0:	fe 01       	movw	r30, r28
     9d2:	31 96       	adiw	r30, 0x01	; 1
     9d4:	d7 01       	movw	r26, r14
     9d6:	17 96       	adiw	r26, 0x07	; 7
     9d8:	01 90       	ld	r0, Z+
     9da:	0d 92       	st	X+, r0
     9dc:	8a 95       	dec	r24
     9de:	e1 f7       	brne	.-8      	; 0x9d8 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e+0x194>
     9e0:	e2 96       	adiw	r28, 0x32	; 50
     9e2:	cd bf       	out	0x3d, r28	; 61
     9e4:	de bf       	out	0x3e, r29	; 62
     9e6:	df 91       	pop	r29
     9e8:	cf 91       	pop	r28
     9ea:	0f 91       	pop	r16
     9ec:	ff 90       	pop	r15
     9ee:	ef 90       	pop	r14
     9f0:	08 95       	ret

000009f2 <_ZN8mln_uart11init_streamEv>:
     9f2:	fc 01       	movw	r30, r24
     9f4:	80 93 79 40 	sts	0x4079, r24	; 0x804079 <mln_uart_stream_uart>
     9f8:	90 93 7a 40 	sts	0x407A, r25	; 0x80407a <mln_uart_stream_uart+0x1>
     9fc:	80 eb       	ldi	r24, 0xB0	; 176
     9fe:	95 e0       	ldi	r25, 0x05	; 5
     a00:	87 ab       	std	Z+55, r24	; 0x37
     a02:	90 af       	std	Z+56, r25	; 0x38
     a04:	8e e8       	ldi	r24, 0x8E	; 142
     a06:	95 e0       	ldi	r25, 0x05	; 5
     a08:	85 ab       	std	Z+53, r24	; 0x35
     a0a:	96 ab       	std	Z+54, r25	; 0x36
     a0c:	83 e0       	ldi	r24, 0x03	; 3
     a0e:	80 ab       	std	Z+48, r24	; 0x30
     a10:	bd 96       	adiw	r30, 0x2d	; 45
     a12:	ab e7       	ldi	r26, 0x7B	; 123
     a14:	b0 e4       	ldi	r27, 0x40	; 64
     a16:	12 96       	adiw	r26, 0x02	; 2
     a18:	ed 93       	st	X+, r30
     a1a:	fc 93       	st	X, r31
     a1c:	13 97       	sbiw	r26, 0x03	; 3
     a1e:	ed 93       	st	X+, r30
     a20:	fc 93       	st	X, r31
     a22:	08 95       	ret

00000a24 <_ZN8mln_uartC1E15mln_uart_inst_em>:
     a24:	cf 92       	push	r12
     a26:	df 92       	push	r13
     a28:	ef 92       	push	r14
     a2a:	ff 92       	push	r15
     a2c:	0f 93       	push	r16
     a2e:	1f 93       	push	r17
     a30:	cf 93       	push	r28
     a32:	df 93       	push	r29
     a34:	ec 01       	movw	r28, r24
     a36:	16 2f       	mov	r17, r22
     a38:	69 01       	movw	r12, r18
     a3a:	7a 01       	movw	r14, r20
     a3c:	02 96       	adiw	r24, 0x02	; 2
     a3e:	0e 94 22 01 	call	0x244	; 0x244 <_ZN8mln_gpioC1Ev>
     a42:	ce 01       	movw	r24, r28
     a44:	07 96       	adiw	r24, 0x07	; 7
     a46:	0e 94 22 01 	call	0x244	; 0x244 <_ZN8mln_gpioC1Ev>
     a4a:	16 30       	cpi	r17, 0x06	; 6
     a4c:	d8 f5       	brcc	.+118    	; 0xac4 <_ZN8mln_uartC1E15mln_uart_inst_em+0xa0>
     a4e:	fe 01       	movw	r30, r28
     a50:	3c 96       	adiw	r30, 0x0c	; 12
     a52:	80 e2       	ldi	r24, 0x20	; 32
     a54:	df 01       	movw	r26, r30
     a56:	1d 92       	st	X+, r1
     a58:	8a 95       	dec	r24
     a5a:	e9 f7       	brne	.-6      	; 0xa56 <_ZN8mln_uartC1E15mln_uart_inst_em+0x32>
     a5c:	1c a6       	std	Y+44, r1	; 0x2c
     a5e:	81 2f       	mov	r24, r17
     a60:	0e 94 09 04 	call	0x812	; 0x812 <_Z17MLN_UART_TO_USART15mln_uart_inst_e>
     a64:	88 83       	st	Y, r24
     a66:	99 83       	std	Y+1, r25	; 0x01
     a68:	61 2f       	mov	r22, r17
     a6a:	ce 01       	movw	r24, r28
     a6c:	0e 94 22 04 	call	0x844	; 0x844 <_ZN8mln_uart9init_pinsE15mln_uart_inst_e>
     a70:	08 81       	ld	r16, Y
     a72:	19 81       	ldd	r17, Y+1	; 0x01
     a74:	c7 01       	movw	r24, r14
     a76:	b6 01       	movw	r22, r12
     a78:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__floatunsisf>
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	40 e8       	ldi	r20, 0x80	; 128
     a82:	51 e4       	ldi	r21, 0x41	; 65
     a84:	0e 94 ac 07 	call	0xf58	; 0xf58 <__mulsf3>
     a88:	9b 01       	movw	r18, r22
     a8a:	ac 01       	movw	r20, r24
     a8c:	60 e0       	ldi	r22, 0x00	; 0
     a8e:	74 e2       	ldi	r23, 0x24	; 36
     a90:	84 e7       	ldi	r24, 0x74	; 116
     a92:	9d e4       	ldi	r25, 0x4D	; 77
     a94:	0e 94 7d 06 	call	0xcfa	; 0xcfa <__divsf3>
     a98:	20 e0       	ldi	r18, 0x00	; 0
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	40 e0       	ldi	r20, 0x00	; 0
     a9e:	5f e3       	ldi	r21, 0x3F	; 63
     aa0:	0e 94 11 06 	call	0xc22	; 0xc22 <__addsf3>
     aa4:	0e 94 ef 06 	call	0xdde	; 0xdde <__fixunssfsi>
     aa8:	f8 01       	movw	r30, r16
     aaa:	60 87       	std	Z+8, r22	; 0x08
     aac:	71 87       	std	Z+9, r23	; 0x09
     aae:	e8 81       	ld	r30, Y
     ab0:	f9 81       	ldd	r31, Y+1	; 0x01
     ab2:	80 e8       	ldi	r24, 0x80	; 128
     ab4:	85 83       	std	Z+5, r24	; 0x05
     ab6:	e8 81       	ld	r30, Y
     ab8:	f9 81       	ldd	r31, Y+1	; 0x01
     aba:	80 ec       	ldi	r24, 0xC0	; 192
     abc:	86 83       	std	Z+6, r24	; 0x06
     abe:	ce 01       	movw	r24, r28
     ac0:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <_ZN8mln_uart11init_streamEv>
     ac4:	df 91       	pop	r29
     ac6:	cf 91       	pop	r28
     ac8:	1f 91       	pop	r17
     aca:	0f 91       	pop	r16
     acc:	ff 90       	pop	r15
     ace:	ef 90       	pop	r14
     ad0:	df 90       	pop	r13
     ad2:	cf 90       	pop	r12
     ad4:	08 95       	ret

00000ad6 <_ZN8mln_uart7run_isrEv>:
     ad6:	dc 01       	movw	r26, r24
     ad8:	db 96       	adiw	r26, 0x3b	; 59
     ada:	ed 91       	ld	r30, X+
     adc:	fc 91       	ld	r31, X
     ade:	dc 97       	sbiw	r26, 0x3c	; 60
     ae0:	09 95       	icall
     ae2:	08 95       	ret

00000ae4 <_ZN8mln_uart10is_busy_txEv>:
     ae4:	dc 01       	movw	r26, r24
     ae6:	ed 91       	ld	r30, X+
     ae8:	fc 91       	ld	r31, X
     aea:	84 81       	ldd	r24, Z+4	; 0x04
     aec:	82 95       	swap	r24
     aee:	86 95       	lsr	r24
     af0:	87 70       	andi	r24, 0x07	; 7
     af2:	91 e0       	ldi	r25, 0x01	; 1
     af4:	89 27       	eor	r24, r25
     af6:	81 70       	andi	r24, 0x01	; 1
     af8:	08 95       	ret

00000afa <_ZN8mln_uart5writeEh>:
     afa:	1f 93       	push	r17
     afc:	cf 93       	push	r28
     afe:	df 93       	push	r29
     b00:	ec 01       	movw	r28, r24
     b02:	16 2f       	mov	r17, r22
     b04:	ce 01       	movw	r24, r28
     b06:	0e 94 72 05 	call	0xae4	; 0xae4 <_ZN8mln_uart10is_busy_txEv>
     b0a:	81 11       	cpse	r24, r1
     b0c:	fb cf       	rjmp	.-10     	; 0xb04 <_ZN8mln_uart5writeEh+0xa>
     b0e:	e8 81       	ld	r30, Y
     b10:	f9 81       	ldd	r31, Y+1	; 0x01
     b12:	12 83       	std	Z+2, r17	; 0x02
     b14:	df 91       	pop	r29
     b16:	cf 91       	pop	r28
     b18:	1f 91       	pop	r17
     b1a:	08 95       	ret

00000b1c <_Z21mln_uart_stream_writecP6__file>:
     b1c:	68 2f       	mov	r22, r24
     b1e:	80 91 79 40 	lds	r24, 0x4079	; 0x804079 <mln_uart_stream_uart>
     b22:	90 91 7a 40 	lds	r25, 0x407A	; 0x80407a <mln_uart_stream_uart+0x1>
     b26:	0e 94 7d 05 	call	0xafa	; 0xafa <_ZN8mln_uart5writeEh>
     b2a:	80 e0       	ldi	r24, 0x00	; 0
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	08 95       	ret

00000b30 <_ZN8mln_uart10is_busy_rxEv>:
     b30:	dc 01       	movw	r26, r24
     b32:	ed 91       	ld	r30, X+
     b34:	fc 91       	ld	r31, X
     b36:	84 81       	ldd	r24, Z+4	; 0x04
     b38:	80 95       	com	r24
     b3a:	88 1f       	adc	r24, r24
     b3c:	88 27       	eor	r24, r24
     b3e:	88 1f       	adc	r24, r24
     b40:	08 95       	ret

00000b42 <_ZN8mln_uart4readEv>:
     b42:	cf 93       	push	r28
     b44:	df 93       	push	r29
     b46:	ec 01       	movw	r28, r24
     b48:	ce 01       	movw	r24, r28
     b4a:	0e 94 98 05 	call	0xb30	; 0xb30 <_ZN8mln_uart10is_busy_rxEv>
     b4e:	81 11       	cpse	r24, r1
     b50:	fb cf       	rjmp	.-10     	; 0xb48 <_ZN8mln_uart4readEv+0x6>
     b52:	e8 81       	ld	r30, Y
     b54:	f9 81       	ldd	r31, Y+1	; 0x01
     b56:	81 81       	ldd	r24, Z+1	; 0x01
     b58:	80 81       	ld	r24, Z
     b5a:	df 91       	pop	r29
     b5c:	cf 91       	pop	r28
     b5e:	08 95       	ret

00000b60 <_Z20mln_uart_stream_readP6__file>:
     b60:	80 91 79 40 	lds	r24, 0x4079	; 0x804079 <mln_uart_stream_uart>
     b64:	90 91 7a 40 	lds	r25, 0x407A	; 0x80407a <mln_uart_stream_uart+0x1>
     b68:	0e 94 a1 05 	call	0xb42	; 0xb42 <_ZN8mln_uart4readEv>
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	08 95       	ret

00000b70 <_ZN8mln_uart4pushEv>:
     b70:	0f 93       	push	r16
     b72:	1f 93       	push	r17
     b74:	cf 93       	push	r28
     b76:	df 93       	push	r29
     b78:	ec 01       	movw	r28, r24
     b7a:	0c a5       	ldd	r16, Y+44	; 0x2c
     b7c:	10 e0       	ldi	r17, 0x00	; 0
     b7e:	0e 94 a1 05 	call	0xb42	; 0xb42 <_ZN8mln_uart4readEv>
     b82:	fe 01       	movw	r30, r28
     b84:	e0 0f       	add	r30, r16
     b86:	f1 1f       	adc	r31, r17
     b88:	84 87       	std	Z+12, r24	; 0x0c
     b8a:	8c a5       	ldd	r24, Y+44	; 0x2c
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	01 96       	adiw	r24, 0x01	; 1
     b90:	8f 71       	andi	r24, 0x1F	; 31
     b92:	90 78       	andi	r25, 0x80	; 128
     b94:	99 23       	and	r25, r25
     b96:	24 f4       	brge	.+8      	; 0xba0 <_ZN8mln_uart4pushEv+0x30>
     b98:	01 97       	sbiw	r24, 0x01	; 1
     b9a:	80 6e       	ori	r24, 0xE0	; 224
     b9c:	9f 6f       	ori	r25, 0xFF	; 255
     b9e:	01 96       	adiw	r24, 0x01	; 1
     ba0:	8c a7       	std	Y+44, r24	; 0x2c
     ba2:	df 91       	pop	r29
     ba4:	cf 91       	pop	r28
     ba6:	1f 91       	pop	r17
     ba8:	0f 91       	pop	r16
     baa:	08 95       	ret

00000bac <__vector_53>:



ISR(USART3_RXC_vect)
{
     bac:	1f 92       	push	r1
     bae:	0f 92       	push	r0
     bb0:	0f b6       	in	r0, 0x3f	; 63
     bb2:	0f 92       	push	r0
     bb4:	11 24       	eor	r1, r1
     bb6:	0b b6       	in	r0, 0x3b	; 59
     bb8:	0f 92       	push	r0
     bba:	2f 93       	push	r18
     bbc:	3f 93       	push	r19
     bbe:	4f 93       	push	r20
     bc0:	5f 93       	push	r21
     bc2:	6f 93       	push	r22
     bc4:	7f 93       	push	r23
     bc6:	8f 93       	push	r24
     bc8:	9f 93       	push	r25
     bca:	af 93       	push	r26
     bcc:	bf 93       	push	r27
     bce:	ef 93       	push	r30
     bd0:	ff 93       	push	r31
	mln_uart_stream_uart->push();
     bd2:	80 91 79 40 	lds	r24, 0x4079	; 0x804079 <mln_uart_stream_uart>
     bd6:	90 91 7a 40 	lds	r25, 0x407A	; 0x80407a <mln_uart_stream_uart+0x1>
     bda:	0e 94 b8 05 	call	0xb70	; 0xb70 <_ZN8mln_uart4pushEv>
	if(!mln_uart_stream_uart->is_busy_rx())
     bde:	80 91 79 40 	lds	r24, 0x4079	; 0x804079 <mln_uart_stream_uart>
     be2:	90 91 7a 40 	lds	r25, 0x407A	; 0x80407a <mln_uart_stream_uart+0x1>
     be6:	0e 94 98 05 	call	0xb30	; 0xb30 <_ZN8mln_uart10is_busy_rxEv>
     bea:	81 11       	cpse	r24, r1
     bec:	06 c0       	rjmp	.+12     	; 0xbfa <__vector_53+0x4e>
		mln_uart_stream_uart->run_isr();
     bee:	80 91 79 40 	lds	r24, 0x4079	; 0x804079 <mln_uart_stream_uart>
     bf2:	90 91 7a 40 	lds	r25, 0x407A	; 0x80407a <mln_uart_stream_uart+0x1>
     bf6:	0e 94 6b 05 	call	0xad6	; 0xad6 <_ZN8mln_uart7run_isrEv>
     bfa:	ff 91       	pop	r31
     bfc:	ef 91       	pop	r30
     bfe:	bf 91       	pop	r27
     c00:	af 91       	pop	r26
     c02:	9f 91       	pop	r25
     c04:	8f 91       	pop	r24
     c06:	7f 91       	pop	r23
     c08:	6f 91       	pop	r22
     c0a:	5f 91       	pop	r21
     c0c:	4f 91       	pop	r20
     c0e:	3f 91       	pop	r19
     c10:	2f 91       	pop	r18
     c12:	0f 90       	pop	r0
     c14:	0b be       	out	0x3b, r0	; 59
     c16:	0f 90       	pop	r0
     c18:	0f be       	out	0x3f, r0	; 63
     c1a:	0f 90       	pop	r0
     c1c:	1f 90       	pop	r1
     c1e:	18 95       	reti

00000c20 <__subsf3>:
     c20:	50 58       	subi	r21, 0x80	; 128

00000c22 <__addsf3>:
     c22:	bb 27       	eor	r27, r27
     c24:	aa 27       	eor	r26, r26
     c26:	0e 94 28 06 	call	0xc50	; 0xc50 <__addsf3x>
     c2a:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__fp_round>
     c2e:	0e 94 64 07 	call	0xec8	; 0xec8 <__fp_pscA>
     c32:	38 f0       	brcs	.+14     	; 0xc42 <__addsf3+0x20>
     c34:	0e 94 6b 07 	call	0xed6	; 0xed6 <__fp_pscB>
     c38:	20 f0       	brcs	.+8      	; 0xc42 <__addsf3+0x20>
     c3a:	39 f4       	brne	.+14     	; 0xc4a <__addsf3+0x28>
     c3c:	9f 3f       	cpi	r25, 0xFF	; 255
     c3e:	19 f4       	brne	.+6      	; 0xc46 <__addsf3+0x24>
     c40:	26 f4       	brtc	.+8      	; 0xc4a <__addsf3+0x28>
     c42:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__fp_nan>
     c46:	0e f4       	brtc	.+2      	; 0xc4a <__addsf3+0x28>
     c48:	e0 95       	com	r30
     c4a:	e7 fb       	bst	r30, 7
     c4c:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_inf>

00000c50 <__addsf3x>:
     c50:	e9 2f       	mov	r30, r25
     c52:	0e 94 83 07 	call	0xf06	; 0xf06 <__fp_split3>
     c56:	58 f3       	brcs	.-42     	; 0xc2e <__addsf3+0xc>
     c58:	ba 17       	cp	r27, r26
     c5a:	62 07       	cpc	r22, r18
     c5c:	73 07       	cpc	r23, r19
     c5e:	84 07       	cpc	r24, r20
     c60:	95 07       	cpc	r25, r21
     c62:	20 f0       	brcs	.+8      	; 0xc6c <__addsf3x+0x1c>
     c64:	79 f4       	brne	.+30     	; 0xc84 <__addsf3x+0x34>
     c66:	a6 f5       	brtc	.+104    	; 0xcd0 <__addsf3x+0x80>
     c68:	0c 94 a5 07 	jmp	0xf4a	; 0xf4a <__fp_zero>
     c6c:	0e f4       	brtc	.+2      	; 0xc70 <__addsf3x+0x20>
     c6e:	e0 95       	com	r30
     c70:	0b 2e       	mov	r0, r27
     c72:	ba 2f       	mov	r27, r26
     c74:	a0 2d       	mov	r26, r0
     c76:	0b 01       	movw	r0, r22
     c78:	b9 01       	movw	r22, r18
     c7a:	90 01       	movw	r18, r0
     c7c:	0c 01       	movw	r0, r24
     c7e:	ca 01       	movw	r24, r20
     c80:	a0 01       	movw	r20, r0
     c82:	11 24       	eor	r1, r1
     c84:	ff 27       	eor	r31, r31
     c86:	59 1b       	sub	r21, r25
     c88:	99 f0       	breq	.+38     	; 0xcb0 <__addsf3x+0x60>
     c8a:	59 3f       	cpi	r21, 0xF9	; 249
     c8c:	50 f4       	brcc	.+20     	; 0xca2 <__addsf3x+0x52>
     c8e:	50 3e       	cpi	r21, 0xE0	; 224
     c90:	68 f1       	brcs	.+90     	; 0xcec <__addsf3x+0x9c>
     c92:	1a 16       	cp	r1, r26
     c94:	f0 40       	sbci	r31, 0x00	; 0
     c96:	a2 2f       	mov	r26, r18
     c98:	23 2f       	mov	r18, r19
     c9a:	34 2f       	mov	r19, r20
     c9c:	44 27       	eor	r20, r20
     c9e:	58 5f       	subi	r21, 0xF8	; 248
     ca0:	f3 cf       	rjmp	.-26     	; 0xc88 <__addsf3x+0x38>
     ca2:	46 95       	lsr	r20
     ca4:	37 95       	ror	r19
     ca6:	27 95       	ror	r18
     ca8:	a7 95       	ror	r26
     caa:	f0 40       	sbci	r31, 0x00	; 0
     cac:	53 95       	inc	r21
     cae:	c9 f7       	brne	.-14     	; 0xca2 <__addsf3x+0x52>
     cb0:	7e f4       	brtc	.+30     	; 0xcd0 <__addsf3x+0x80>
     cb2:	1f 16       	cp	r1, r31
     cb4:	ba 0b       	sbc	r27, r26
     cb6:	62 0b       	sbc	r22, r18
     cb8:	73 0b       	sbc	r23, r19
     cba:	84 0b       	sbc	r24, r20
     cbc:	ba f0       	brmi	.+46     	; 0xcec <__addsf3x+0x9c>
     cbe:	91 50       	subi	r25, 0x01	; 1
     cc0:	a1 f0       	breq	.+40     	; 0xcea <__addsf3x+0x9a>
     cc2:	ff 0f       	add	r31, r31
     cc4:	bb 1f       	adc	r27, r27
     cc6:	66 1f       	adc	r22, r22
     cc8:	77 1f       	adc	r23, r23
     cca:	88 1f       	adc	r24, r24
     ccc:	c2 f7       	brpl	.-16     	; 0xcbe <__addsf3x+0x6e>
     cce:	0e c0       	rjmp	.+28     	; 0xcec <__addsf3x+0x9c>
     cd0:	ba 0f       	add	r27, r26
     cd2:	62 1f       	adc	r22, r18
     cd4:	73 1f       	adc	r23, r19
     cd6:	84 1f       	adc	r24, r20
     cd8:	48 f4       	brcc	.+18     	; 0xcec <__addsf3x+0x9c>
     cda:	87 95       	ror	r24
     cdc:	77 95       	ror	r23
     cde:	67 95       	ror	r22
     ce0:	b7 95       	ror	r27
     ce2:	f7 95       	ror	r31
     ce4:	9e 3f       	cpi	r25, 0xFE	; 254
     ce6:	08 f0       	brcs	.+2      	; 0xcea <__addsf3x+0x9a>
     ce8:	b0 cf       	rjmp	.-160    	; 0xc4a <__addsf3+0x28>
     cea:	93 95       	inc	r25
     cec:	88 0f       	add	r24, r24
     cee:	08 f0       	brcs	.+2      	; 0xcf2 <__addsf3x+0xa2>
     cf0:	99 27       	eor	r25, r25
     cf2:	ee 0f       	add	r30, r30
     cf4:	97 95       	ror	r25
     cf6:	87 95       	ror	r24
     cf8:	08 95       	ret

00000cfa <__divsf3>:
     cfa:	0e 94 91 06 	call	0xd22	; 0xd22 <__divsf3x>
     cfe:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__fp_round>
     d02:	0e 94 6b 07 	call	0xed6	; 0xed6 <__fp_pscB>
     d06:	58 f0       	brcs	.+22     	; 0xd1e <__divsf3+0x24>
     d08:	0e 94 64 07 	call	0xec8	; 0xec8 <__fp_pscA>
     d0c:	40 f0       	brcs	.+16     	; 0xd1e <__divsf3+0x24>
     d0e:	29 f4       	brne	.+10     	; 0xd1a <__divsf3+0x20>
     d10:	5f 3f       	cpi	r21, 0xFF	; 255
     d12:	29 f0       	breq	.+10     	; 0xd1e <__divsf3+0x24>
     d14:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_inf>
     d18:	51 11       	cpse	r21, r1
     d1a:	0c 94 a6 07 	jmp	0xf4c	; 0xf4c <__fp_szero>
     d1e:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__fp_nan>

00000d22 <__divsf3x>:
     d22:	0e 94 83 07 	call	0xf06	; 0xf06 <__fp_split3>
     d26:	68 f3       	brcs	.-38     	; 0xd02 <__divsf3+0x8>

00000d28 <__divsf3_pse>:
     d28:	99 23       	and	r25, r25
     d2a:	b1 f3       	breq	.-20     	; 0xd18 <__divsf3+0x1e>
     d2c:	55 23       	and	r21, r21
     d2e:	91 f3       	breq	.-28     	; 0xd14 <__divsf3+0x1a>
     d30:	95 1b       	sub	r25, r21
     d32:	55 0b       	sbc	r21, r21
     d34:	bb 27       	eor	r27, r27
     d36:	aa 27       	eor	r26, r26
     d38:	62 17       	cp	r22, r18
     d3a:	73 07       	cpc	r23, r19
     d3c:	84 07       	cpc	r24, r20
     d3e:	38 f0       	brcs	.+14     	; 0xd4e <__divsf3_pse+0x26>
     d40:	9f 5f       	subi	r25, 0xFF	; 255
     d42:	5f 4f       	sbci	r21, 0xFF	; 255
     d44:	22 0f       	add	r18, r18
     d46:	33 1f       	adc	r19, r19
     d48:	44 1f       	adc	r20, r20
     d4a:	aa 1f       	adc	r26, r26
     d4c:	a9 f3       	breq	.-22     	; 0xd38 <__divsf3_pse+0x10>
     d4e:	35 d0       	rcall	.+106    	; 0xdba <__divsf3_pse+0x92>
     d50:	0e 2e       	mov	r0, r30
     d52:	3a f0       	brmi	.+14     	; 0xd62 <__divsf3_pse+0x3a>
     d54:	e0 e8       	ldi	r30, 0x80	; 128
     d56:	32 d0       	rcall	.+100    	; 0xdbc <__divsf3_pse+0x94>
     d58:	91 50       	subi	r25, 0x01	; 1
     d5a:	50 40       	sbci	r21, 0x00	; 0
     d5c:	e6 95       	lsr	r30
     d5e:	00 1c       	adc	r0, r0
     d60:	ca f7       	brpl	.-14     	; 0xd54 <__divsf3_pse+0x2c>
     d62:	2b d0       	rcall	.+86     	; 0xdba <__divsf3_pse+0x92>
     d64:	fe 2f       	mov	r31, r30
     d66:	29 d0       	rcall	.+82     	; 0xdba <__divsf3_pse+0x92>
     d68:	66 0f       	add	r22, r22
     d6a:	77 1f       	adc	r23, r23
     d6c:	88 1f       	adc	r24, r24
     d6e:	bb 1f       	adc	r27, r27
     d70:	26 17       	cp	r18, r22
     d72:	37 07       	cpc	r19, r23
     d74:	48 07       	cpc	r20, r24
     d76:	ab 07       	cpc	r26, r27
     d78:	b0 e8       	ldi	r27, 0x80	; 128
     d7a:	09 f0       	breq	.+2      	; 0xd7e <__divsf3_pse+0x56>
     d7c:	bb 0b       	sbc	r27, r27
     d7e:	80 2d       	mov	r24, r0
     d80:	bf 01       	movw	r22, r30
     d82:	ff 27       	eor	r31, r31
     d84:	93 58       	subi	r25, 0x83	; 131
     d86:	5f 4f       	sbci	r21, 0xFF	; 255
     d88:	3a f0       	brmi	.+14     	; 0xd98 <__divsf3_pse+0x70>
     d8a:	9e 3f       	cpi	r25, 0xFE	; 254
     d8c:	51 05       	cpc	r21, r1
     d8e:	78 f0       	brcs	.+30     	; 0xdae <__divsf3_pse+0x86>
     d90:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_inf>
     d94:	0c 94 a6 07 	jmp	0xf4c	; 0xf4c <__fp_szero>
     d98:	5f 3f       	cpi	r21, 0xFF	; 255
     d9a:	e4 f3       	brlt	.-8      	; 0xd94 <__divsf3_pse+0x6c>
     d9c:	98 3e       	cpi	r25, 0xE8	; 232
     d9e:	d4 f3       	brlt	.-12     	; 0xd94 <__divsf3_pse+0x6c>
     da0:	86 95       	lsr	r24
     da2:	77 95       	ror	r23
     da4:	67 95       	ror	r22
     da6:	b7 95       	ror	r27
     da8:	f7 95       	ror	r31
     daa:	9f 5f       	subi	r25, 0xFF	; 255
     dac:	c9 f7       	brne	.-14     	; 0xda0 <__divsf3_pse+0x78>
     dae:	88 0f       	add	r24, r24
     db0:	91 1d       	adc	r25, r1
     db2:	96 95       	lsr	r25
     db4:	87 95       	ror	r24
     db6:	97 f9       	bld	r25, 7
     db8:	08 95       	ret
     dba:	e1 e0       	ldi	r30, 0x01	; 1
     dbc:	66 0f       	add	r22, r22
     dbe:	77 1f       	adc	r23, r23
     dc0:	88 1f       	adc	r24, r24
     dc2:	bb 1f       	adc	r27, r27
     dc4:	62 17       	cp	r22, r18
     dc6:	73 07       	cpc	r23, r19
     dc8:	84 07       	cpc	r24, r20
     dca:	ba 07       	cpc	r27, r26
     dcc:	20 f0       	brcs	.+8      	; 0xdd6 <__divsf3_pse+0xae>
     dce:	62 1b       	sub	r22, r18
     dd0:	73 0b       	sbc	r23, r19
     dd2:	84 0b       	sbc	r24, r20
     dd4:	ba 0b       	sbc	r27, r26
     dd6:	ee 1f       	adc	r30, r30
     dd8:	88 f7       	brcc	.-30     	; 0xdbc <__divsf3_pse+0x94>
     dda:	e0 95       	com	r30
     ddc:	08 95       	ret

00000dde <__fixunssfsi>:
     dde:	0e 94 8b 07 	call	0xf16	; 0xf16 <__fp_splitA>
     de2:	88 f0       	brcs	.+34     	; 0xe06 <__fixunssfsi+0x28>
     de4:	9f 57       	subi	r25, 0x7F	; 127
     de6:	98 f0       	brcs	.+38     	; 0xe0e <__fixunssfsi+0x30>
     de8:	b9 2f       	mov	r27, r25
     dea:	99 27       	eor	r25, r25
     dec:	b7 51       	subi	r27, 0x17	; 23
     dee:	b0 f0       	brcs	.+44     	; 0xe1c <__fixunssfsi+0x3e>
     df0:	e1 f0       	breq	.+56     	; 0xe2a <__fixunssfsi+0x4c>
     df2:	66 0f       	add	r22, r22
     df4:	77 1f       	adc	r23, r23
     df6:	88 1f       	adc	r24, r24
     df8:	99 1f       	adc	r25, r25
     dfa:	1a f0       	brmi	.+6      	; 0xe02 <__fixunssfsi+0x24>
     dfc:	ba 95       	dec	r27
     dfe:	c9 f7       	brne	.-14     	; 0xdf2 <__fixunssfsi+0x14>
     e00:	14 c0       	rjmp	.+40     	; 0xe2a <__fixunssfsi+0x4c>
     e02:	b1 30       	cpi	r27, 0x01	; 1
     e04:	91 f0       	breq	.+36     	; 0xe2a <__fixunssfsi+0x4c>
     e06:	0e 94 a5 07 	call	0xf4a	; 0xf4a <__fp_zero>
     e0a:	b1 e0       	ldi	r27, 0x01	; 1
     e0c:	08 95       	ret
     e0e:	0c 94 a5 07 	jmp	0xf4a	; 0xf4a <__fp_zero>
     e12:	67 2f       	mov	r22, r23
     e14:	78 2f       	mov	r23, r24
     e16:	88 27       	eor	r24, r24
     e18:	b8 5f       	subi	r27, 0xF8	; 248
     e1a:	39 f0       	breq	.+14     	; 0xe2a <__fixunssfsi+0x4c>
     e1c:	b9 3f       	cpi	r27, 0xF9	; 249
     e1e:	cc f3       	brlt	.-14     	; 0xe12 <__fixunssfsi+0x34>
     e20:	86 95       	lsr	r24
     e22:	77 95       	ror	r23
     e24:	67 95       	ror	r22
     e26:	b3 95       	inc	r27
     e28:	d9 f7       	brne	.-10     	; 0xe20 <__fixunssfsi+0x42>
     e2a:	3e f4       	brtc	.+14     	; 0xe3a <__fixunssfsi+0x5c>
     e2c:	90 95       	com	r25
     e2e:	80 95       	com	r24
     e30:	70 95       	com	r23
     e32:	61 95       	neg	r22
     e34:	7f 4f       	sbci	r23, 0xFF	; 255
     e36:	8f 4f       	sbci	r24, 0xFF	; 255
     e38:	9f 4f       	sbci	r25, 0xFF	; 255
     e3a:	08 95       	ret

00000e3c <__floatunsisf>:
     e3c:	e8 94       	clt
     e3e:	09 c0       	rjmp	.+18     	; 0xe52 <__floatsisf+0x12>

00000e40 <__floatsisf>:
     e40:	97 fb       	bst	r25, 7
     e42:	3e f4       	brtc	.+14     	; 0xe52 <__floatsisf+0x12>
     e44:	90 95       	com	r25
     e46:	80 95       	com	r24
     e48:	70 95       	com	r23
     e4a:	61 95       	neg	r22
     e4c:	7f 4f       	sbci	r23, 0xFF	; 255
     e4e:	8f 4f       	sbci	r24, 0xFF	; 255
     e50:	9f 4f       	sbci	r25, 0xFF	; 255
     e52:	99 23       	and	r25, r25
     e54:	a9 f0       	breq	.+42     	; 0xe80 <__floatsisf+0x40>
     e56:	f9 2f       	mov	r31, r25
     e58:	96 e9       	ldi	r25, 0x96	; 150
     e5a:	bb 27       	eor	r27, r27
     e5c:	93 95       	inc	r25
     e5e:	f6 95       	lsr	r31
     e60:	87 95       	ror	r24
     e62:	77 95       	ror	r23
     e64:	67 95       	ror	r22
     e66:	b7 95       	ror	r27
     e68:	f1 11       	cpse	r31, r1
     e6a:	f8 cf       	rjmp	.-16     	; 0xe5c <__floatsisf+0x1c>
     e6c:	fa f4       	brpl	.+62     	; 0xeac <__floatsisf+0x6c>
     e6e:	bb 0f       	add	r27, r27
     e70:	11 f4       	brne	.+4      	; 0xe76 <__floatsisf+0x36>
     e72:	60 ff       	sbrs	r22, 0
     e74:	1b c0       	rjmp	.+54     	; 0xeac <__floatsisf+0x6c>
     e76:	6f 5f       	subi	r22, 0xFF	; 255
     e78:	7f 4f       	sbci	r23, 0xFF	; 255
     e7a:	8f 4f       	sbci	r24, 0xFF	; 255
     e7c:	9f 4f       	sbci	r25, 0xFF	; 255
     e7e:	16 c0       	rjmp	.+44     	; 0xeac <__floatsisf+0x6c>
     e80:	88 23       	and	r24, r24
     e82:	11 f0       	breq	.+4      	; 0xe88 <__floatsisf+0x48>
     e84:	96 e9       	ldi	r25, 0x96	; 150
     e86:	11 c0       	rjmp	.+34     	; 0xeaa <__floatsisf+0x6a>
     e88:	77 23       	and	r23, r23
     e8a:	21 f0       	breq	.+8      	; 0xe94 <__floatsisf+0x54>
     e8c:	9e e8       	ldi	r25, 0x8E	; 142
     e8e:	87 2f       	mov	r24, r23
     e90:	76 2f       	mov	r23, r22
     e92:	05 c0       	rjmp	.+10     	; 0xe9e <__floatsisf+0x5e>
     e94:	66 23       	and	r22, r22
     e96:	71 f0       	breq	.+28     	; 0xeb4 <__floatsisf+0x74>
     e98:	96 e8       	ldi	r25, 0x86	; 134
     e9a:	86 2f       	mov	r24, r22
     e9c:	70 e0       	ldi	r23, 0x00	; 0
     e9e:	60 e0       	ldi	r22, 0x00	; 0
     ea0:	2a f0       	brmi	.+10     	; 0xeac <__floatsisf+0x6c>
     ea2:	9a 95       	dec	r25
     ea4:	66 0f       	add	r22, r22
     ea6:	77 1f       	adc	r23, r23
     ea8:	88 1f       	adc	r24, r24
     eaa:	da f7       	brpl	.-10     	; 0xea2 <__floatsisf+0x62>
     eac:	88 0f       	add	r24, r24
     eae:	96 95       	lsr	r25
     eb0:	87 95       	ror	r24
     eb2:	97 f9       	bld	r25, 7
     eb4:	08 95       	ret

00000eb6 <__fp_inf>:
     eb6:	97 f9       	bld	r25, 7
     eb8:	9f 67       	ori	r25, 0x7F	; 127
     eba:	80 e8       	ldi	r24, 0x80	; 128
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	60 e0       	ldi	r22, 0x00	; 0
     ec0:	08 95       	ret

00000ec2 <__fp_nan>:
     ec2:	9f ef       	ldi	r25, 0xFF	; 255
     ec4:	80 ec       	ldi	r24, 0xC0	; 192
     ec6:	08 95       	ret

00000ec8 <__fp_pscA>:
     ec8:	00 24       	eor	r0, r0
     eca:	0a 94       	dec	r0
     ecc:	16 16       	cp	r1, r22
     ece:	17 06       	cpc	r1, r23
     ed0:	18 06       	cpc	r1, r24
     ed2:	09 06       	cpc	r0, r25
     ed4:	08 95       	ret

00000ed6 <__fp_pscB>:
     ed6:	00 24       	eor	r0, r0
     ed8:	0a 94       	dec	r0
     eda:	12 16       	cp	r1, r18
     edc:	13 06       	cpc	r1, r19
     ede:	14 06       	cpc	r1, r20
     ee0:	05 06       	cpc	r0, r21
     ee2:	08 95       	ret

00000ee4 <__fp_round>:
     ee4:	09 2e       	mov	r0, r25
     ee6:	03 94       	inc	r0
     ee8:	00 0c       	add	r0, r0
     eea:	11 f4       	brne	.+4      	; 0xef0 <__fp_round+0xc>
     eec:	88 23       	and	r24, r24
     eee:	52 f0       	brmi	.+20     	; 0xf04 <__fp_round+0x20>
     ef0:	bb 0f       	add	r27, r27
     ef2:	40 f4       	brcc	.+16     	; 0xf04 <__fp_round+0x20>
     ef4:	bf 2b       	or	r27, r31
     ef6:	11 f4       	brne	.+4      	; 0xefc <__fp_round+0x18>
     ef8:	60 ff       	sbrs	r22, 0
     efa:	04 c0       	rjmp	.+8      	; 0xf04 <__fp_round+0x20>
     efc:	6f 5f       	subi	r22, 0xFF	; 255
     efe:	7f 4f       	sbci	r23, 0xFF	; 255
     f00:	8f 4f       	sbci	r24, 0xFF	; 255
     f02:	9f 4f       	sbci	r25, 0xFF	; 255
     f04:	08 95       	ret

00000f06 <__fp_split3>:
     f06:	57 fd       	sbrc	r21, 7
     f08:	90 58       	subi	r25, 0x80	; 128
     f0a:	44 0f       	add	r20, r20
     f0c:	55 1f       	adc	r21, r21
     f0e:	59 f0       	breq	.+22     	; 0xf26 <__fp_splitA+0x10>
     f10:	5f 3f       	cpi	r21, 0xFF	; 255
     f12:	71 f0       	breq	.+28     	; 0xf30 <__fp_splitA+0x1a>
     f14:	47 95       	ror	r20

00000f16 <__fp_splitA>:
     f16:	88 0f       	add	r24, r24
     f18:	97 fb       	bst	r25, 7
     f1a:	99 1f       	adc	r25, r25
     f1c:	61 f0       	breq	.+24     	; 0xf36 <__fp_splitA+0x20>
     f1e:	9f 3f       	cpi	r25, 0xFF	; 255
     f20:	79 f0       	breq	.+30     	; 0xf40 <__fp_splitA+0x2a>
     f22:	87 95       	ror	r24
     f24:	08 95       	ret
     f26:	12 16       	cp	r1, r18
     f28:	13 06       	cpc	r1, r19
     f2a:	14 06       	cpc	r1, r20
     f2c:	55 1f       	adc	r21, r21
     f2e:	f2 cf       	rjmp	.-28     	; 0xf14 <__fp_split3+0xe>
     f30:	46 95       	lsr	r20
     f32:	f1 df       	rcall	.-30     	; 0xf16 <__fp_splitA>
     f34:	08 c0       	rjmp	.+16     	; 0xf46 <__fp_splitA+0x30>
     f36:	16 16       	cp	r1, r22
     f38:	17 06       	cpc	r1, r23
     f3a:	18 06       	cpc	r1, r24
     f3c:	99 1f       	adc	r25, r25
     f3e:	f1 cf       	rjmp	.-30     	; 0xf22 <__fp_splitA+0xc>
     f40:	86 95       	lsr	r24
     f42:	71 05       	cpc	r23, r1
     f44:	61 05       	cpc	r22, r1
     f46:	08 94       	sec
     f48:	08 95       	ret

00000f4a <__fp_zero>:
     f4a:	e8 94       	clt

00000f4c <__fp_szero>:
     f4c:	bb 27       	eor	r27, r27
     f4e:	66 27       	eor	r22, r22
     f50:	77 27       	eor	r23, r23
     f52:	cb 01       	movw	r24, r22
     f54:	97 f9       	bld	r25, 7
     f56:	08 95       	ret

00000f58 <__mulsf3>:
     f58:	0e 94 bf 07 	call	0xf7e	; 0xf7e <__mulsf3x>
     f5c:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__fp_round>
     f60:	0e 94 64 07 	call	0xec8	; 0xec8 <__fp_pscA>
     f64:	38 f0       	brcs	.+14     	; 0xf74 <__mulsf3+0x1c>
     f66:	0e 94 6b 07 	call	0xed6	; 0xed6 <__fp_pscB>
     f6a:	20 f0       	brcs	.+8      	; 0xf74 <__mulsf3+0x1c>
     f6c:	95 23       	and	r25, r21
     f6e:	11 f0       	breq	.+4      	; 0xf74 <__mulsf3+0x1c>
     f70:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_inf>
     f74:	0c 94 61 07 	jmp	0xec2	; 0xec2 <__fp_nan>
     f78:	11 24       	eor	r1, r1
     f7a:	0c 94 a6 07 	jmp	0xf4c	; 0xf4c <__fp_szero>

00000f7e <__mulsf3x>:
     f7e:	0e 94 83 07 	call	0xf06	; 0xf06 <__fp_split3>
     f82:	70 f3       	brcs	.-36     	; 0xf60 <__mulsf3+0x8>

00000f84 <__mulsf3_pse>:
     f84:	95 9f       	mul	r25, r21
     f86:	c1 f3       	breq	.-16     	; 0xf78 <__mulsf3+0x20>
     f88:	95 0f       	add	r25, r21
     f8a:	50 e0       	ldi	r21, 0x00	; 0
     f8c:	55 1f       	adc	r21, r21
     f8e:	62 9f       	mul	r22, r18
     f90:	f0 01       	movw	r30, r0
     f92:	72 9f       	mul	r23, r18
     f94:	bb 27       	eor	r27, r27
     f96:	f0 0d       	add	r31, r0
     f98:	b1 1d       	adc	r27, r1
     f9a:	63 9f       	mul	r22, r19
     f9c:	aa 27       	eor	r26, r26
     f9e:	f0 0d       	add	r31, r0
     fa0:	b1 1d       	adc	r27, r1
     fa2:	aa 1f       	adc	r26, r26
     fa4:	64 9f       	mul	r22, r20
     fa6:	66 27       	eor	r22, r22
     fa8:	b0 0d       	add	r27, r0
     faa:	a1 1d       	adc	r26, r1
     fac:	66 1f       	adc	r22, r22
     fae:	82 9f       	mul	r24, r18
     fb0:	22 27       	eor	r18, r18
     fb2:	b0 0d       	add	r27, r0
     fb4:	a1 1d       	adc	r26, r1
     fb6:	62 1f       	adc	r22, r18
     fb8:	73 9f       	mul	r23, r19
     fba:	b0 0d       	add	r27, r0
     fbc:	a1 1d       	adc	r26, r1
     fbe:	62 1f       	adc	r22, r18
     fc0:	83 9f       	mul	r24, r19
     fc2:	a0 0d       	add	r26, r0
     fc4:	61 1d       	adc	r22, r1
     fc6:	22 1f       	adc	r18, r18
     fc8:	74 9f       	mul	r23, r20
     fca:	33 27       	eor	r19, r19
     fcc:	a0 0d       	add	r26, r0
     fce:	61 1d       	adc	r22, r1
     fd0:	23 1f       	adc	r18, r19
     fd2:	84 9f       	mul	r24, r20
     fd4:	60 0d       	add	r22, r0
     fd6:	21 1d       	adc	r18, r1
     fd8:	82 2f       	mov	r24, r18
     fda:	76 2f       	mov	r23, r22
     fdc:	6a 2f       	mov	r22, r26
     fde:	11 24       	eor	r1, r1
     fe0:	9f 57       	subi	r25, 0x7F	; 127
     fe2:	50 40       	sbci	r21, 0x00	; 0
     fe4:	9a f0       	brmi	.+38     	; 0x100c <__mulsf3_pse+0x88>
     fe6:	f1 f0       	breq	.+60     	; 0x1024 <__mulsf3_pse+0xa0>
     fe8:	88 23       	and	r24, r24
     fea:	4a f0       	brmi	.+18     	; 0xffe <__mulsf3_pse+0x7a>
     fec:	ee 0f       	add	r30, r30
     fee:	ff 1f       	adc	r31, r31
     ff0:	bb 1f       	adc	r27, r27
     ff2:	66 1f       	adc	r22, r22
     ff4:	77 1f       	adc	r23, r23
     ff6:	88 1f       	adc	r24, r24
     ff8:	91 50       	subi	r25, 0x01	; 1
     ffa:	50 40       	sbci	r21, 0x00	; 0
     ffc:	a9 f7       	brne	.-22     	; 0xfe8 <__mulsf3_pse+0x64>
     ffe:	9e 3f       	cpi	r25, 0xFE	; 254
    1000:	51 05       	cpc	r21, r1
    1002:	80 f0       	brcs	.+32     	; 0x1024 <__mulsf3_pse+0xa0>
    1004:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_inf>
    1008:	0c 94 a6 07 	jmp	0xf4c	; 0xf4c <__fp_szero>
    100c:	5f 3f       	cpi	r21, 0xFF	; 255
    100e:	e4 f3       	brlt	.-8      	; 0x1008 <__mulsf3_pse+0x84>
    1010:	98 3e       	cpi	r25, 0xE8	; 232
    1012:	d4 f3       	brlt	.-12     	; 0x1008 <__mulsf3_pse+0x84>
    1014:	86 95       	lsr	r24
    1016:	77 95       	ror	r23
    1018:	67 95       	ror	r22
    101a:	b7 95       	ror	r27
    101c:	f7 95       	ror	r31
    101e:	e7 95       	ror	r30
    1020:	9f 5f       	subi	r25, 0xFF	; 255
    1022:	c1 f7       	brne	.-16     	; 0x1014 <__mulsf3_pse+0x90>
    1024:	fe 2b       	or	r31, r30
    1026:	88 0f       	add	r24, r24
    1028:	91 1d       	adc	r25, r1
    102a:	96 95       	lsr	r25
    102c:	87 95       	ror	r24
    102e:	97 f9       	bld	r25, 7
    1030:	08 95       	ret

00001032 <__udivmodsi4>:
    1032:	a1 e2       	ldi	r26, 0x21	; 33
    1034:	1a 2e       	mov	r1, r26
    1036:	aa 1b       	sub	r26, r26
    1038:	bb 1b       	sub	r27, r27
    103a:	fd 01       	movw	r30, r26
    103c:	0d c0       	rjmp	.+26     	; 0x1058 <__udivmodsi4_ep>

0000103e <__udivmodsi4_loop>:
    103e:	aa 1f       	adc	r26, r26
    1040:	bb 1f       	adc	r27, r27
    1042:	ee 1f       	adc	r30, r30
    1044:	ff 1f       	adc	r31, r31
    1046:	a2 17       	cp	r26, r18
    1048:	b3 07       	cpc	r27, r19
    104a:	e4 07       	cpc	r30, r20
    104c:	f5 07       	cpc	r31, r21
    104e:	20 f0       	brcs	.+8      	; 0x1058 <__udivmodsi4_ep>
    1050:	a2 1b       	sub	r26, r18
    1052:	b3 0b       	sbc	r27, r19
    1054:	e4 0b       	sbc	r30, r20
    1056:	f5 0b       	sbc	r31, r21

00001058 <__udivmodsi4_ep>:
    1058:	66 1f       	adc	r22, r22
    105a:	77 1f       	adc	r23, r23
    105c:	88 1f       	adc	r24, r24
    105e:	99 1f       	adc	r25, r25
    1060:	1a 94       	dec	r1
    1062:	69 f7       	brne	.-38     	; 0x103e <__udivmodsi4_loop>
    1064:	60 95       	com	r22
    1066:	70 95       	com	r23
    1068:	80 95       	com	r24
    106a:	90 95       	com	r25
    106c:	9b 01       	movw	r18, r22
    106e:	ac 01       	movw	r20, r24
    1070:	bd 01       	movw	r22, r26
    1072:	cf 01       	movw	r24, r30
    1074:	08 95       	ret

00001076 <__muluhisi3>:
    1076:	0e 94 4f 08 	call	0x109e	; 0x109e <__umulhisi3>
    107a:	a5 9f       	mul	r26, r21
    107c:	90 0d       	add	r25, r0
    107e:	b4 9f       	mul	r27, r20
    1080:	90 0d       	add	r25, r0
    1082:	a4 9f       	mul	r26, r20
    1084:	80 0d       	add	r24, r0
    1086:	91 1d       	adc	r25, r1
    1088:	11 24       	eor	r1, r1
    108a:	08 95       	ret

0000108c <__tablejump2__>:
    108c:	ee 0f       	add	r30, r30
    108e:	ff 1f       	adc	r31, r31
    1090:	00 24       	eor	r0, r0
    1092:	00 1c       	adc	r0, r0
    1094:	0b be       	out	0x3b, r0	; 59
    1096:	07 90       	elpm	r0, Z+
    1098:	f6 91       	elpm	r31, Z
    109a:	e0 2d       	mov	r30, r0
    109c:	09 94       	ijmp

0000109e <__umulhisi3>:
    109e:	a2 9f       	mul	r26, r18
    10a0:	b0 01       	movw	r22, r0
    10a2:	b3 9f       	mul	r27, r19
    10a4:	c0 01       	movw	r24, r0
    10a6:	a3 9f       	mul	r26, r19
    10a8:	70 0d       	add	r23, r0
    10aa:	81 1d       	adc	r24, r1
    10ac:	11 24       	eor	r1, r1
    10ae:	91 1d       	adc	r25, r1
    10b0:	b2 9f       	mul	r27, r18
    10b2:	70 0d       	add	r23, r0
    10b4:	81 1d       	adc	r24, r1
    10b6:	11 24       	eor	r1, r1
    10b8:	91 1d       	adc	r25, r1
    10ba:	08 95       	ret

000010bc <_exit>:
    10bc:	f8 94       	cli

000010be <__stop_program>:
    10be:	ff cf       	rjmp	.-2      	; 0x10be <__stop_program>
