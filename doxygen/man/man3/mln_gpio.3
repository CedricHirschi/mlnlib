.TH "mln_gpio" 3 "Thu Apr 27 2023" "Version alpha" "mlnlib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mln_gpio \- GPIO peripheral class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <mln_gpio\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmln_gpio\fP ()=default"
.br
.RI "Default \fBmln_gpio\fP class initializer\&. "
.ti -1c
.RI "\fBmln_gpio\fP (const \fBmln_pin_t\fP &new_pin, const \fBmln_gpio_dir_t\fP &direction, const bool inverted=false)"
.br
.RI "\fBmln_adc\fP class initializer "
.ti -1c
.RI "void \fBattach_interrupt\fP (\fBmln_gpio_isc_t\fP isc)"
.br
.RI "Attach interrupt to pin\&. "
.ti -1c
.RI "const void \fBset\fP (void)"
.br
.RI "Set pin to HIGH\&. "
.ti -1c
.RI "const void \fBclear\fP (void)"
.br
.RI "Clear pin to LOW\&. "
.ti -1c
.RI "const void \fBtoggle\fP (void)"
.br
.RI "Toggle pin value\&. "
.ti -1c
.RI "const void \fBput\fP (bool val)"
.br
.RI "Put value on pin\&. "
.ti -1c
.RI "const bool \fBget\fP (void)"
.br
.RI "Get value of pin\&. "
.ti -1c
.RI "void \fBconf_dir\fP (const \fBmln_gpio_dir_t\fP &dir)"
.br
.RI "Configure direction of pin\&. "
.ti -1c
.RI "void \fBconf_pull\fP (const \fBmln_gpio_dir_t\fP &pull)"
.br
.RI "Configure pull of pin\&. "
.in -1c
.SH "Detailed Description"
.PP 
GPIO peripheral class\&. 


.PP
Definition at line \fB132\fP of file \fBmln_gpio\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mln_gpio::mln_gpio ()\fC [inline]\fP, \fC [default]\fP"

.PP
Default \fBmln_gpio\fP class initializer\&. 
.SS "mln_gpio::mln_gpio (const \fBmln_pin_t\fP & new_pin, const \fBmln_gpio_dir_t\fP & direction, const bool inverted = \fCfalse\fP)\fC [inline]\fP"

.PP
\fBmln_adc\fP class initializer 
.PP
\fBParameters\fP
.RS 4
\fInew_pin\fP Pin to control 
.br
\fIdirection\fP Direction to initialize pin to 
.br
\fIinverted\fP If true, pin is operated in inverted mde 
.RE
.PP

.PP
Definition at line \fB153\fP of file \fBmln_gpio\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void mln_gpio::attach_interrupt (\fBmln_gpio_isc_t\fP isc)\fC [inline]\fP"

.PP
Attach interrupt to pin\&. 
.PP
\fBParameters\fP
.RS 4
\fIisc\fP Interrupt type 
.RE
.PP

.PP
Definition at line \fB171\fP of file \fBmln_gpio\&.h\fP\&.
.SS "const void mln_gpio::clear (void)\fC [inline]\fP"

.PP
Clear pin to LOW\&. 
.PP
Definition at line \fB182\fP of file \fBmln_gpio\&.h\fP\&.
.SS "void mln_gpio::conf_dir (const \fBmln_gpio_dir_t\fP & dir)\fC [inline]\fP"

.PP
Configure direction of pin\&. 
.PP
\fBParameters\fP
.RS 4
\fIdir\fP Direction to be set 
.RE
.PP

.PP
Definition at line \fB208\fP of file \fBmln_gpio\&.h\fP\&.
.SS "void mln_gpio::conf_pull (const \fBmln_gpio_dir_t\fP & pull)\fC [inline]\fP"

.PP
Configure pull of pin\&. 
.PP
\fBParameters\fP
.RS 4
\fIpull\fP Direction to be set 
.RE
.PP

.PP
Definition at line \fB221\fP of file \fBmln_gpio\&.h\fP\&.
.SS "const bool mln_gpio::get (void)\fC [inline]\fP"

.PP
Get value of pin\&. 
.PP
Definition at line \fB200\fP of file \fBmln_gpio\&.h\fP\&.
.SS "const void mln_gpio::put (bool val)\fC [inline]\fP"

.PP
Put value on pin\&. 
.PP
\fBParameters\fP
.RS 4
\fIval\fP Value to put on pin 
.RE
.PP

.PP
Definition at line \fB194\fP of file \fBmln_gpio\&.h\fP\&.
.SS "const void mln_gpio::set (void)\fC [inline]\fP"

.PP
Set pin to HIGH\&. 
.PP
Definition at line \fB177\fP of file \fBmln_gpio\&.h\fP\&.
.SS "const void mln_gpio::toggle (void)\fC [inline]\fP"

.PP
Toggle pin value\&. 
.PP
Definition at line \fB187\fP of file \fBmln_gpio\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlnlib from the source code\&.
