.TH "mln_spi" 3 "Thu Apr 27 2023" "Version alpha" "mlnlib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mln_spi
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <mln_spi\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBmln_spi\fP ()"
.br
.ti -1c
.RI "\fBmln_spi\fP (SPI_t *new_spi)"
.br
.ti -1c
.RI "\fBmln_spi\fP (SPI_t *new_spi, uint8_t mode)"
.br
.ti -1c
.RI "\fBmln_spi\fP (SPI_t *new_spi, \fBPIN_t\fP new_cs)"
.br
.ti -1c
.RI "\fBmln_spi\fP (SPI_t *new_spi, \fBPIN_t\fP new_cs, uint8_t mode)"
.br
.ti -1c
.RI "const void \fBexchange\fP (uint8_t *buffer, uint8_t length)"
.br
.ti -1c
.RI "const void \fBwrite\fP (uint8_t *buffer, uint8_t length)"
.br
.ti -1c
.RI "const void \fBread\fP (uint8_t *buffer, uint8_t length)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line \fB29\fP of file \fBmln_spi\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "mln_spi::mln_spi ()\fC [inline]\fP"

.PP
Definition at line \fB35\fP of file \fBmln_spi\&.h\fP\&.
.SS "mln_spi::mln_spi (SPI_t * new_spi)\fC [inline]\fP"

.PP
Definition at line \fB36\fP of file \fBmln_spi\&.h\fP\&.
.SS "mln_spi::mln_spi (SPI_t * new_spi, uint8_t mode)\fC [inline]\fP"

.PP
Definition at line \fB46\fP of file \fBmln_spi\&.h\fP\&.
.SS "mln_spi::mln_spi (SPI_t * new_spi, \fBPIN_t\fP new_cs)\fC [inline]\fP"

.PP
Definition at line \fB57\fP of file \fBmln_spi\&.h\fP\&.
.SS "mln_spi::mln_spi (SPI_t * new_spi, \fBPIN_t\fP new_cs, uint8_t mode)\fC [inline]\fP"

.PP
Definition at line \fB68\fP of file \fBmln_spi\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "const void mln_spi::exchange (uint8_t * buffer, uint8_t length)\fC [inline]\fP"

.PP
Definition at line \fB88\fP of file \fBmln_spi\&.h\fP\&.
.SS "const void mln_spi::read (uint8_t * buffer, uint8_t length)\fC [inline]\fP"

.PP
Definition at line \fB130\fP of file \fBmln_spi\&.h\fP\&.
.SS "const void mln_spi::write (uint8_t * buffer, uint8_t length)\fC [inline]\fP"

.PP
Definition at line \fB110\fP of file \fBmln_spi\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for mlnlib from the source code\&.
