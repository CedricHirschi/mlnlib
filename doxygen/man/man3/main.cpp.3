.TH "mlnlib/main.cpp" 3 "Thu Apr 27 2023" "Version alpha" "mlnlib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlnlib/main.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'mln/mln_common\&.h'\fP
.br
\fC#include 'mln/mln_opamp\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBled_task\fP (void)"
.br
.ti -1c
.RI "int \fBmain\fP (void)"
.br
.RI "Main function\&. "
.ti -1c
.RI "\fBISR\fP (PORTB_PORT_vect)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBmln_uart\fP uart & \fBUSART3\fP"
.br
.ti -1c
.RI "\fBmln_gpio\fP \fBbtn_builtin\fP (PB2, \fBMLN_GPIO_DIR_INPUT_PULLUP\fP, true)"
.br
.ti -1c
.RI "\fBmln_gpio\fP \fBled_builtin\fP (PB3, \fBMLN_GPIO_DIR_OUTPUT\fP, true)"
.br
.ti -1c
.RI "\fBmln_adc\fP \fBadc\fP"
.br
.ti -1c
.RI "\fBmcp4822\fP dac & \fBSPI0\fP"
.br
.ti -1c
.RI "\fBmln_timer\fP \fBled_timer\fP (MLN_TIMER_0, 1000)"
.br
.ti -1c
.RI "uint16_t \fBdac_value\fP = 0"
.br
.ti -1c
.RI "\fBmln_opamp_follower_init_t\fP \fBopamp_init\fP"
.br
.ti -1c
.RI "\fBmln_opamp_noninverting_init_t\fP \fBopamp1_init\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "ISR (PORTB_PORT_vect)"

.PP
Definition at line \fB107\fP of file \fBmain\&.cpp\fP\&.
.SS "void led_task (void)"

.PP
Definition at line \fB91\fP of file \fBmain\&.cpp\fP\&.
.SS "int main (void)"

.PP
Main function\&. 
.PP
\fBReturns\fP
.RS 4
int Should never return 
.RE
.PP

.PP
Definition at line \fB53\fP of file \fBmain\&.cpp\fP\&.
.SH "Variable Documentation"
.PP 
.SS "\fBmln_adc\fP adc"

.PP
Definition at line \fB17\fP of file \fBmain\&.cpp\fP\&.
.SS "\fBmln_gpio\fP btn_builtin(PB2, \fBMLN_GPIO_DIR_INPUT_PULLUP\fP, true) (PB2, \fBMLN_GPIO_DIR_INPUT_PULLUP\fP, true)"

.SS "uint16_t dac_value = 0"

.PP
Definition at line \fB22\fP of file \fBmain\&.cpp\fP\&.
.SS "\fBmln_gpio\fP led_builtin(PB3, \fBMLN_GPIO_DIR_OUTPUT\fP, true) (PB3, \fBMLN_GPIO_DIR_OUTPUT\fP, true)"

.SS "\fBmln_timer\fP led_timer(MLN_TIMER_0, 1000) (MLN_TIMER_0, 1000)"

.SS "\fBmln_opamp_noninverting_init_t\fP opamp1_init"
\fBInitial value:\fP.PP
.nf
= {
    \&.opamp = MLN_OPAMP_DEVICE_1,

    \&.runstdby = true,
    \&.output = true,
    \&.lowpower = true,

    \&.gain = MLN_OPAMP_GAIN_NONINVERTING_2,

    \&.in = MLN_OPAMP_NONINVERTING_IN_LINKOUT
}
.fi

.PP
Definition at line \fB36\fP of file \fBmain\&.cpp\fP\&.
.SS "\fBmln_opamp_follower_init_t\fP opamp_init"
\fBInitial value:\fP.PP
.nf
= {
    \&.opamp = MLN_OPAMP_DEVICE_0,
    
    \&.runstdby = true,
    \&.output = true,
    \&.lowpower = true,

    \&.in = MLN_OPAMP_FOLLOWER_IN_DAC
}
.fi

.PP
Definition at line \fB26\fP of file \fBmain\&.cpp\fP\&.
.SS "\fBmcp4822\fP dac& SPI0"

.PP
Definition at line \fB18\fP of file \fBmain\&.cpp\fP\&.
.SS "\fBmln_uart\fP uart& USART3"

.PP
Definition at line \fB12\fP of file \fBmain\&.cpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mlnlib from the source code\&.
