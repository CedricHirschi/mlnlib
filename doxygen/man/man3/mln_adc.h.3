.TH "mlnlib/mln/mln_adc.h" 3 "Thu Apr 27 2023" "Version alpha" "mlnlib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mlnlib/mln/mln_adc.h \- This peripheral is used to measure analog voltages\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <avr/io\&.h>\fP
.br
\fC#include 'mln_gpio\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBmln_adc\fP"
.br
.RI "ADC peripheral class\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMLN_ADC_PIN_TO_IN\fP(pin)   ((pin\&.port \- &PORTD) * 8 + pin\&.pin_num)"
.br
.RI "Macro to convert \fBmln_gpio\fP pin to adc input\&. "
.ti -1c
.RI "#define \fBMLN_ADC_SHIFT\fP(samples)   (samples >= 4 ? 4 : samples)"
.br
.RI "Macro to get the required shift of an ADC reading according to samples taken\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBmln_adc_in_t\fP { \fBMLN_ADC_IN_GND\fP = 0x40, \fBMLN_ADC_IN_TEMPSENSE\fP = 0x42, \fBMLN_ADC_IN_VDDDIV10\fP = 0x44, \fBMLN_ADC_IN_VDDIO2DIV10\fP = 0x45, \fBMLN_ADC_IN_DAC\fP = 0x48, \fBMLN_ADC_IN_DACREF0\fP = 0x49, \fBMLN_ADC_IN_DACREF1\fP = 0x4A, \fBMLN_ADC_IN_DACREF2\fP = 0x4B }"
.br
.RI "ADC input selection enum\&. "
.ti -1c
.RI "enum \fBmln_adc_resolution_t\fP { \fBMLN_ADC_RESOLUTION_HIGH\fP = 0, \fBMLN_ADC_RESOLUTION_LOW\fP }"
.br
.RI "ADC resolution selection enum\&. "
.ti -1c
.RI "enum \fBmln_adc_prescaler_t\fP { \fBMLN_ADC_DIV2\fP = 0, \fBMLN_ADC_DIV4\fP, \fBMLN_ADC_DIV8\fP, \fBMLN_ADC_DIV12\fP, \fBMLN_ADC_DIV16\fP, \fBMLN_ADC_DIV20\fP, \fBMLN_ADC_DIV24\fP, \fBMLN_ADC_DIV28\fP, \fBMLN_ADC_DIV32\fP, \fBMLN_ADC_DIV48\fP, \fBMLN_ADC_DIV64\fP, \fBMLN_ADC_DIV96\fP, \fBMLN_ADC_DIV128\fP, \fBMLN_ADC_DIV256\fP }"
.br
.RI "ADC prescaler selection enum\&. "
.ti -1c
.RI "enum \fBmln_adc_accumulation_t\fP { \fBMLN_ADC_ACCNONE\fP = 0, \fBMLN_ADC_ACC2\fP, \fBMLN_ADC_ACC4\fP, \fBMLN_ADC_ACC8\fP, \fBMLN_ADC_ACC16\fP, \fBMLN_ADC_ACC32\fP, \fBMLN_ADC_ACC64\fP, \fBMLN_ADC_ACC128\fP }"
.br
.RI "ADC prescaler accumulation enum\&. "
.in -1c
.SH "Detailed Description"
.PP 
This peripheral is used to measure analog voltages\&. 


.PP
\fBAuthor\fP
.RS 4
Cédric Hirschi (cedr02@live.com) 
.RE
.PP
\fBVersion\fP
.RS 4
0\&.1 
.RE
.PP
\fBDate\fP
.RS 4
2023-04-27
.RE
.PP
\fBCopyright\fP
.RS 4
Copyright (c) 2023 
.RE
.PP

.PP
Definition in file \fBmln_adc\&.h\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define MLN_ADC_PIN_TO_IN(pin)   ((pin\&.port \- &PORTD) * 8 + pin\&.pin_num)"

.PP
Macro to convert \fBmln_gpio\fP pin to adc input\&. 
.PP
Definition at line \fB23\fP of file \fBmln_adc\&.h\fP\&.
.SS "#define MLN_ADC_SHIFT(samples)   (samples >= 4 ? 4 : samples)"

.PP
Macro to get the required shift of an ADC reading according to samples taken\&. 
.PP
Definition at line \fB28\fP of file \fBmln_adc\&.h\fP\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBmln_adc_accumulation_t\fP"

.PP
ADC prescaler accumulation enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMLN_ADC_ACCNONE \fP\fP
.TP
\fB\fIMLN_ADC_ACC2 \fP\fP
.TP
\fB\fIMLN_ADC_ACC4 \fP\fP
.TP
\fB\fIMLN_ADC_ACC8 \fP\fP
.TP
\fB\fIMLN_ADC_ACC16 \fP\fP
.TP
\fB\fIMLN_ADC_ACC32 \fP\fP
.TP
\fB\fIMLN_ADC_ACC64 \fP\fP
.TP
\fB\fIMLN_ADC_ACC128 \fP\fP
.PP
Definition at line \fB82\fP of file \fBmln_adc\&.h\fP\&.
.SS "enum \fBmln_adc_in_t\fP"

.PP
ADC input selection enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMLN_ADC_IN_GND \fP\fP
.TP
\fB\fIMLN_ADC_IN_TEMPSENSE \fP\fP
.TP
\fB\fIMLN_ADC_IN_VDDDIV10 \fP\fP
.TP
\fB\fIMLN_ADC_IN_VDDIO2DIV10 \fP\fP
.TP
\fB\fIMLN_ADC_IN_DAC \fP\fP
.TP
\fB\fIMLN_ADC_IN_DACREF0 \fP\fP
.TP
\fB\fIMLN_ADC_IN_DACREF1 \fP\fP
.TP
\fB\fIMLN_ADC_IN_DACREF2 \fP\fP
.PP
Definition at line \fB34\fP of file \fBmln_adc\&.h\fP\&.
.SS "enum \fBmln_adc_prescaler_t\fP"

.PP
ADC prescaler selection enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMLN_ADC_DIV2 \fP\fP
.TP
\fB\fIMLN_ADC_DIV4 \fP\fP
.TP
\fB\fIMLN_ADC_DIV8 \fP\fP
.TP
\fB\fIMLN_ADC_DIV12 \fP\fP
.TP
\fB\fIMLN_ADC_DIV16 \fP\fP
.TP
\fB\fIMLN_ADC_DIV20 \fP\fP
.TP
\fB\fIMLN_ADC_DIV24 \fP\fP
.TP
\fB\fIMLN_ADC_DIV28 \fP\fP
.TP
\fB\fIMLN_ADC_DIV32 \fP\fP
.TP
\fB\fIMLN_ADC_DIV48 \fP\fP
.TP
\fB\fIMLN_ADC_DIV64 \fP\fP
.TP
\fB\fIMLN_ADC_DIV96 \fP\fP
.TP
\fB\fIMLN_ADC_DIV128 \fP\fP
.TP
\fB\fIMLN_ADC_DIV256 \fP\fP
.PP
Definition at line \fB60\fP of file \fBmln_adc\&.h\fP\&.
.SS "enum \fBmln_adc_resolution_t\fP"

.PP
ADC resolution selection enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMLN_ADC_RESOLUTION_HIGH \fP\fP
.TP
\fB\fIMLN_ADC_RESOLUTION_LOW \fP\fP
.PP
Definition at line \fB50\fP of file \fBmln_adc\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mlnlib from the source code\&.
