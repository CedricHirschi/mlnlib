.TH "mln_opamp" 3 "Thu Apr 27 2023" "Version alpha" "mlnlib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mln_opamp \- Opamp peripheral namespace\&.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "const void \fBinit_resmux\fP (const \fBmln_opamp_device_t\fP &opamp, const uint8_t &muxbot, const uint8_t &muxwip, const uint8_t &muxtop)"
.br
.RI "Helper function to set the RESMUX register\&. "
.ti -1c
.RI "const void \fBinit_inmux\fP (const \fBmln_opamp_device_t\fP &opamp, const uint8_t &muxpos, const uint8_t &muxneg)"
.br
.RI "Helper function to set the INMUX register\&. "
.ti -1c
.RI "const void \fBenable\fP (const \fBmln_opamp_device_t\fP &opamp, const bool runstdby, const bool output, const bool lowpower)"
.br
.RI "Helper function to enable the opamp\&. "
.ti -1c
.RI "const void \fBenable\fP (void)"
.br
.RI "Enable Opamp peripheral\&. "
.ti -1c
.RI "const void \fBdisable\fP (void)"
.br
.RI "Disable Opamp peripheral\&. "
.ti -1c
.RI "const void \fBinit\fP (const \fBmln_opamp_direct_init_t\fP &init)"
.br
.RI "Construct a new \fBmln_opamp\fP object (direct) "
.ti -1c
.RI "const void \fBinit\fP (const \fBmln_opamp_follower_init_t\fP &init)"
.br
.RI "Construct a new \fBmln_opamp\fP object (follower) "
.ti -1c
.RI "const void \fBinit\fP (const \fBmln_opamp_noninverting_init_t\fP &init)"
.br
.RI "Construct a new \fBmln_opamp\fP object (non-inverting) "
.ti -1c
.RI "const void \fBinit\fP (const \fBmln_opamp_inverting_init_t\fP &init)"
.br
.RI "Construct a new \fBmln_opamp\fP object (inverting) "
.in -1c
.SH "Detailed Description"
.PP 
Opamp peripheral namespace\&. 


.SH "Function Documentation"
.PP 
.SS "const void mln_opamp::disable (void)\fC [inline]\fP"

.PP
Disable Opamp peripheral\&. 
.PP
\fBWarning\fP
.RS 4
Disables all Opamps 
.RE
.PP

.PP
Definition at line \fB387\fP of file \fBmln_opamp\&.h\fP\&.
.SS "const void mln_opamp::enable (const \fBmln_opamp_device_t\fP & opamp, const bool runstdby, const bool output, const bool lowpower)\fC [inline]\fP"

.PP
Helper function to enable the opamp\&. 
.PP
\fBParameters\fP
.RS 4
\fIrunstdby\fP Run in standby 
.br
\fIoutput\fP Enable output 
.br
\fIlowpower\fP Low power mode 
.br
\fIopamp_n\fP Device
.RE
.PP
\fBNote\fP
.RS 4
Is being called by the \fCinit\fP functions 
.RE
.PP

.PP
Definition at line \fB348\fP of file \fBmln_opamp\&.h\fP\&.
.SS "const void mln_opamp::enable (void)\fC [inline]\fP"

.PP
Enable Opamp peripheral\&. 
.PP
\fBNote\fP
.RS 4
Doesn't configure/enable single Opamps 
.RE
.PP

.PP
Definition at line \fB379\fP of file \fBmln_opamp\&.h\fP\&.
.SS "const void mln_opamp::init (const \fBmln_opamp_direct_init_t\fP & init)\fC [inline]\fP"

.PP
Construct a new \fBmln_opamp\fP object (direct) 
.PP
\fBParameters\fP
.RS 4
\fIinit\fP Opamp configuration struct (direct) 
.RE
.PP

.PP
Definition at line \fB394\fP of file \fBmln_opamp\&.h\fP\&.
.SS "const void mln_opamp::init (const \fBmln_opamp_follower_init_t\fP & init)\fC [inline]\fP"

.PP
Construct a new \fBmln_opamp\fP object (follower) 
.PP
\fBParameters\fP
.RS 4
\fIinit\fP Opamp configuration struct (follower) 
.RE
.PP

.PP
Definition at line \fB409\fP of file \fBmln_opamp\&.h\fP\&.
.SS "const void mln_opamp::init (const \fBmln_opamp_inverting_init_t\fP & init)\fC [inline]\fP"

.PP
Construct a new \fBmln_opamp\fP object (inverting) 
.PP
\fBParameters\fP
.RS 4
\fIinit\fP Opamp configuration struct (inverting) 
.RE
.PP

.PP
Definition at line \fB438\fP of file \fBmln_opamp\&.h\fP\&.
.SS "const void mln_opamp::init (const \fBmln_opamp_noninverting_init_t\fP & init)\fC [inline]\fP"

.PP
Construct a new \fBmln_opamp\fP object (non-inverting) 
.PP
\fBParameters\fP
.RS 4
\fIinit\fP Opamp configuration struct (non-inverting) 
.RE
.PP

.PP
Definition at line \fB423\fP of file \fBmln_opamp\&.h\fP\&.
.SS "const void mln_opamp::init_inmux (const \fBmln_opamp_device_t\fP & opamp, const uint8_t & muxpos, const uint8_t & muxneg)\fC [inline]\fP"

.PP
Helper function to set the INMUX register\&. 
.PP
\fBParameters\fP
.RS 4
\fIopamp\fP Device 
.br
\fImuxpos\fP Positive input mux 
.br
\fImuxneg\fP Negative input mux 
.RE
.PP

.PP
Definition at line \fB320\fP of file \fBmln_opamp\&.h\fP\&.
.SS "const void mln_opamp::init_resmux (const \fBmln_opamp_device_t\fP & opamp, const uint8_t & muxbot, const uint8_t & muxwip, const uint8_t & muxtop)\fC [inline]\fP"

.PP
Helper function to set the RESMUX register\&. 
.PP
\fBParameters\fP
.RS 4
\fIopamp\fP Device 
.br
\fImuxbot\fP Bottom resistor mux 
.br
\fImuxwip\fP Wiper resistor mux 
.br
\fImuxtop\fP Top resistor mux 
.RE
.PP

.PP
Definition at line \fB295\fP of file \fBmln_opamp\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mlnlib from the source code\&.
